//
//0 VALUE R/O ( -- fam ) \ 94 FILE

RrslO:
	call	DOVALUE	# 8040f9eb e8 fa 4e ff ff 

	.quad 0x0
//\ fam - 
//\ 
//
//1 VALUE W/O ( -- fam ) \ 94 FILE

WrslO:
	call	DOVALUE	# 8040f9f8 e8 ed 4e ff ff 

	.quad 0x1
//\ fam - 
//\ 
//
//2 VALUE R/W ( -- fam ) \ 94 FILE

RrslW:
	call	DOVALUE	# 8040fa05 e8 e0 4e ff ff 

	.quad 0x2
//
//
//444 CONSTANT  CFNAME_SIZE
// CREATE CURFILENAME  CFNAME_SIZE 255 + 1+ ALLOT
	.quad 0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.byte 0x0,0x0,0x0,0x0
// CURFILENAME  CFNAME_SIZE 255 + 1+ MH. MH. \  ERASE
//: CFNAME-SET  ( adr len -- )
// DUP 1+ >R  CURFILENAME CURFILENAME R@ + CFNAME_SIZE R> - CMOVE>

CFNAMEsubSET:
/*	mov	%rax,-0x08(%rbp)	# 8040fcce 	*/.byte 0x48,0x89,0x45,0xF8
/*	lea	0x01(%rax),%rax	# 8040fcd2 	*/.byte 0x48,0x8D,0x40,0x1
	Push	%rax	# 8040fcd6 50 
/*	lea	RrslW+0xd (%rip),%rax	# 8040fcd7 	*/.byte 0x48,0x8D,0x5,0x34,0xFD,0xFF,0xFF
/*	mov	%rax,-0x10(%rbp)	# 8040fcde 	*/.byte 0x48,0x89,0x45,0xF0
/*	lea	RrslW+0xd (%rip),%rax	# 8040fce2 	*/.byte 0x48,0x8D,0x5,0x29,0xFD,0xFF,0xFF
/*	add	(%rsp),%rax	# 8040fce9 	*/.byte 0x48,0x3,0x4,0x24
/*	mov	%rax,-0x18(%rbp)	# 8040fced 	*/.byte 0x48,0x89,0x45,0xE8
/*	movq	$0x1BC,-0x20(%rbp)	# 8040fcf1 	*/.byte 0x48,0xC7,0x45,0xE0,0xBC,0x1,0x0,0x0
	pop	%rax	# 8040fcf9 58 
/*		negq	%rax	# 8040fcfa 	*/.byte 0x48,0xF7,0xD8
/*	add	-0x20(%rbp),%rax	# 8040fcfd 	*/.byte 0x48,0x3,0x45,0xE0
/*	lea	-0x18(%rbp),%rbp	# 8040fd01 	*/.byte 0x48,0x8D,0x6D,0xE8
	call	CMOVEgreat	# 8040fd05 e8 88 4b ff ff 
//CURFILENAME $! ;
/*	mov	%rax,-0x08(%rbp)	# 8040fd0a 	*/.byte 0x48,0x89,0x45,0xF8
/*	lea	RrslW+0xd (%rip),%rax	# 8040fd0e 	*/.byte 0x48,0x8D,0x5,0xFD,0xFC,0xFF,0xFF
/*	lea	-0x08(%rbp),%rbp	# 8040fd15 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	dolsave	# 8040fd19 e8 9e 54 ff ff 
	ret		# 8040fd1e c3 
//
//: CFNAME-FREE  ( -- )
// CURFILENAME COUNT + CURFILENAME


CFNAMEsubFREE:
/*	mov	%rax,-0x08(%rbp)	# 8040fd1f 	*/.byte 0x48,0x89,0x45,0xF8
/*	lea	RrslW+0xd (%rip),%rax	# 8040fd23 	*/.byte 0x48,0x8D,0x5,0xE8,0xFC,0xFF,0xFF
/*	movzbq	(%rax),%rdx	# 8040fd2a 	*/.byte 0x48,0xF,0xB6,0x10
/*	lea	0x01(%rdx,%rax,1),%rax	# 8040fd2e 	*/.byte 0x48,0x8D,0x44,0x2,0x1
/*	mov	%rax,-0x10(%rbp)	# 8040fd33 	*/.byte 0x48,0x89,0x45,0xF0
/*	lea	RrslW+0xd (%rip),%rax	# 8040fd37 	*/.byte 0x48,0x8D,0x5,0xD4,0xFC,0xFF,0xFF
/*	mov	%rax,-0x18(%rbp)	# 8040fd3e 	*/.byte 0x48,0x89,0x45,0xE8
// CFNAME_SIZE CURFILENAME C@ - 255 +  CMOVE ;
/*	movq	$0x1BC,-0x20(%rbp)	# 8040fd42 	*/.byte 0x48,0xC7,0x45,0xE0,0xBC,0x1,0x0,0x0
/*	lea	RrslW+0xd (%rip),%rax	# 8040fd4a 	*/.byte 0x48,0x8D,0x5,0xC1,0xFC,0xFF,0xFF
/*	movzb	(%rax),%eax	# 8040fd51 	*/.byte 0xF,0xB6,0x0
/*		negq	%rax	# 8040fd54 	*/.byte 0x48,0xF7,0xD8
/*	add	-0x20(%rbp),%rax	# 8040fd57 	*/.byte 0x48,0x3,0x45,0xE0
/*	lea	0xFF(%rax),%rax	# 8040fd5b 	*/.byte 0x48,0x8D,0x80,0xFF,0x0,0x0,0x0
/*	lea	-0x18(%rbp),%rbp	# 8040fd62 	*/.byte 0x48,0x8D,0x6D,0xE8
	call	CMOVE	# 8040fd66 e8 4b 4b ff ff 
	ret		# 8040fd6b c3 
//
//\ : VVV #H. >PF >DPF ;
//
//: INCLUDE-FILE ( i*x fileid -- j*x ) \ 94 FILE
//\	." INC"
//	>IN  @ >R


INCLUDEsubFILE:
/*	mov	%rax,-0x08(%rbp)	# 8040fd6c 	*/.byte 0x48,0x89,0x45,0xF8
/*	push	UNLOOP+0x226 (%rip)	# 8040fd70 	*/.byte 0xFF,0x35,0xAB,0x4E,0xFF,0xFF
//	CURSTR @ >R CURSTR 0!
/*	push	OKdot+0xd (%rip)	# 8040fd76 	*/.byte 0xFF,0x35,0xA9,0xE1,0xFF,0xFF
/*	movq	$0x0,OKdot+0xd (%rip)	# 8040fd7c 	*/.byte 0x48,0xC7,0x5,0x9E,0xE1,0xFF,0xFF,0x0,0x0,0x0,0x0
/*	push	SOURCEsubID+0x5 (%rip)	# 8040fd87 	*/.byte 0xFF,0x35,0x7C,0xD3,0xFF,0xFF
//	SOURCE-ID >R  TO SOURCE-ID
/*	lea	SOURCEsubID+0x5 (%rip),%rax	# 8040fd8d 	*/.byte 0x48,0x8D,0x5,0x75,0xD3,0xFF,0xFF
/*	mov	-0x08(%rbp),%rdx	# 8040fd94 	*/.byte 0x48,0x8B,0x55,0xF8
/*	mov	%rdx,(%rax)	# 8040fd98 	*/.byte 0x48,0x89,0x10
/*	mov	0x00(%rbp),%rax	# 8040fd9b 	*/.byte 0x48,0x8B,0x45,0x0
/*	mov	TIB+0x5 (%rip),%rax	# 8040fd9f 	*/.byte 0x48,0x8B,0x5,0x70,0xD3,0xFF,0xFF
//\	CR RP@ 6 >> $F AND SPACES ." save=<" SOURCE TYPE ." >"
//	SOURCE
/*	mov	%rax,-0x08(%rbp)	# 8040fda6 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	UNLOOP+0x256 (%rip),%rax	# 8040fdaa 	*/.byte 0x48,0x8B,0x5,0xA0,0x4E,0xFF,0xFF
/*	lea	-0x08(%rbp),%rbp	# 8040fdb1 	*/.byte 0x48,0x8D,0x6D,0xF8
//	RP@ OVER ALIGNED - RP!
	call	RPload	# 8040fdb5 e8 54 45 ff ff 
/*	mov	%rax,-0x08(%rbp)	# 8040fdba 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	0x00(%rbp),%rax	# 8040fdbe 	*/.byte 0x48,0x8B,0x45,0x0
/*	lea	-0x08(%rbp),%rbp	# 8040fdc2 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	ALIGNED	# 8040fdc6 e8 42 52 ff ff 
/*		negq	%rax	# 8040fdcb 	*/.byte 0x48,0xF7,0xD8
/*	add	0x00(%rbp),%rax	# 8040fdce 	*/.byte 0x48,0x3,0x45,0x0
/*	lea	0x08(%rbp),%rbp	# 8040fdd2 	*/.byte 0x48,0x8D,0x6D,0x8
	call	RPsave	# 8040fdd6 e8 4a 45 ff ff 
//	RP@ SWAP CMOVE
	call	RPload	# 8040fddb e8 2e 45 ff ff 
/*	mov	0x00(%rbp),%rdx	# 8040fde0 	*/.byte 0x48,0x8B,0x55,0x0
/*	mov	%rax,0x00(%rbp)	# 8040fde4 	*/.byte 0x48,0x89,0x45,0x0
/*	mov	%rdx,%rax	# 8040fde8 	*/.byte 0x48,0x89,0xD0
	call	CMOVE	# 8040fdeb e8 c6 4a ff ff 
//	SOURCE 2>R 
/*	mov	%rax,-0x08(%rbp)	# 8040fdf0 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	TIB+0x5 (%rip),%rax	# 8040fdf4 	*/.byte 0x48,0x8B,0x5,0x1B,0xD3,0xFF,0xFF
/*	mov	%rax,-0x10(%rbp)	# 8040fdfb 	*/.byte 0x48,0x89,0x45,0xF0
/*	mov	UNLOOP+0x256 (%rip),%rax	# 8040fdff 	*/.byte 0x48,0x8B,0x5,0x4B,0x4E,0xFF,0xFF
/*	lea	-0x10(%rbp),%rbp	# 8040fe06 	*/.byte 0x48,0x8D,0x6D,0xF0
	call	_2greatR	# 8040fe0a e8 67 45 ff ff 
//	['] FQUIT CATCH	SAVEERR	
/*	mov	%rax,-0x08(%rbp)	# 8040fe0f 	*/.byte 0x48,0x89,0x45,0xF8
/*	lea	FQUIT(%rip),%rax	# 8040fe13 	*/.byte 0x48,0x8D,0x5,0xAC,0xE2,0xFF,0xFF
/*	lea	-0x08(%rbp),%rbp	# 8040fe1a 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	CATCH	# 8040fe1e e8 10 57 ff ff 
	call	SAVEERR	# 8040fe23 e8 7 e5 ff ff 
//\	['] NOOP CATCH	SAVEERR	
//	2R> SOURCE!
	call	_2Rgreat	# 8040fe28 e8 11 45 ff ff 
/*	mov	%rax,UNLOOP+0x256 (%rip)	# 8040fe2d 	*/.byte 0x48,0x89,0x5,0x1D,0x4E,0xFF,0xFF
/*	lea	TIB+0x5 (%rip),%rax	# 8040fe34 	*/.byte 0x48,0x8D,0x5,0xDB,0xD2,0xFF,0xFF
/*	mov	0x00(%rbp),%rdx	# 8040fe3b 	*/.byte 0x48,0x8B,0x55,0x0
/*	mov	%rdx,(%rax)	# 8040fe3f 	*/.byte 0x48,0x89,0x10
/*	mov	0x08(%rbp),%rax	# 8040fe42 	*/.byte 0x48,0x8B,0x45,0x8
/*	lea	0x10(%rbp),%rbp	# 8040fe46 	*/.byte 0x48,0x8D,0x6D,0x10
//	RP@ SOURCE CMOVE
	call	RPload	# 8040fe4a e8 bf 44 ff ff 
/*	mov	%rax,-0x08(%rbp)	# 8040fe4f 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	TIB+0x5 (%rip),%rax	# 8040fe53 	*/.byte 0x48,0x8B,0x5,0xBC,0xD2,0xFF,0xFF
/*	mov	%rax,-0x10(%rbp)	# 8040fe5a 	*/.byte 0x48,0x89,0x45,0xF0
/*	mov	UNLOOP+0x256 (%rip),%rax	# 8040fe5e 	*/.byte 0x48,0x8B,0x5,0xEC,0x4D,0xFF,0xFF
/*	lea	-0x10(%rbp),%rbp	# 8040fe65 	*/.byte 0x48,0x8D,0x6D,0xF0
	call	CMOVE	# 8040fe69 e8 48 4a ff ff 
//\	CR ." IF=<" SOURCE TYPE ." >"
//	RP@ SOURCE NIP ALIGNED + RP!
	call	RPload	# 8040fe6e e8 9b 44 ff ff 
/*	mov	%rax,-0x08(%rbp)	# 8040fe73 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	UNLOOP+0x256 (%rip),%rax	# 8040fe77 	*/.byte 0x48,0x8B,0x5,0xD3,0x4D,0xFF,0xFF
/*	lea	-0x08(%rbp),%rbp	# 8040fe7e 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	ALIGNED	# 8040fe82 e8 86 51 ff ff 
/*	add	0x00(%rbp),%rax	# 8040fe87 	*/.byte 0x48,0x3,0x45,0x0
/*	lea	0x08(%rbp),%rbp	# 8040fe8b 	*/.byte 0x48,0x8D,0x6D,0x8
	call	RPsave	# 8040fe8f e8 91 44 ff ff 
//\	CR RP@ 6 >> $F AND SPACES ." rest=<" SOURCE TYPE ." >"
//	R> TO SOURCE-ID
/*	mov	%rax,-0x08(%rbp)	# 8040fe94 	*/.byte 0x48,0x89,0x45,0xF8
	pop	-0x10(%rbp)	# 8040fe98 8f 45 f0 
/*	lea	SOURCEsubID+0x5 (%rip),%rax	# 8040fe9b 	*/.byte 0x48,0x8D,0x5,0x67,0xD2,0xFF,0xFF
/*	mov	-0x10(%rbp),%rdx	# 8040fea2 	*/.byte 0x48,0x8B,0x55,0xF0
/*	mov	%rdx,(%rax)	# 8040fea6 	*/.byte 0x48,0x89,0x10
	pop	-0x10(%rbp)	# 8040fea9 8f 45 f0 
/*	lea	OKdot+0xd (%rip),%rax	# 8040feac 	*/.byte 0x48,0x8D,0x5,0x72,0xE0,0xFF,0xFF
//	R> CURSTR !
/*	mov	-0x10(%rbp),%rdx	# 8040feb3 	*/.byte 0x48,0x8B,0x55,0xF0
/*	mov	%rdx,(%rax)	# 8040feb7 	*/.byte 0x48,0x89,0x10
	pop	-0x10(%rbp)	# 8040feba 8f 45 f0 
/*	lea	UNLOOP+0x226 (%rip),%rax	# 8040febd 	*/.byte 0x48,0x8D,0x5,0x5D,0x4D,0xFF,0xFF
//	R> >IN ! THROW  
/*	mov	-0x10(%rbp),%rdx	# 8040fec4 	*/.byte 0x48,0x8B,0x55,0xF0
/*	mov	%rdx,(%rax)	# 8040fec8 	*/.byte 0x48,0x89,0x10
/*	mov	-0x08(%rbp),%rax	# 8040fecb 	*/.byte 0x48,0x8B,0x45,0xF8
	call	THROW	# 8040fecf e8 b8 56 ff ff 
//;
	ret		# 8040fed4 c3 
//
// 0 VALUE VIEW_LINK


VIEW_LINK:
	call	DOVALUE	# 8040fed5 e8 10 4a ff ff 

	.quad 0x0
//
//T: VIEW_{
//?YDP><DP

VIEW_lsk:
	call	queYDPgreatlessDP	# 8040fee2 e8 2e f0 ff ff 
//   HERE VIEW_LINK , TO VIEW_LINK  0 ,
/*	mov	%rax,-0x08(%rbp)	# 8040fee7 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	HsubSTDOUT+0x15 (%rip),%rax	# 8040feeb 	*/.byte 0x48,0x8B,0x5,0xB8,0x4F,0xFF,0xFF
/*	mov	%rax,dcomasubSET+0x5 (%rip)	# 8040fef2 	*/.byte 0x48,0x89,0x5,0xA3,0x59,0xFF,0xFF
/*	mov	%rax,-0x10(%rbp)	# 8040fef9 	*/.byte 0x48,0x89,0x45,0xF0
/*	mov	VIEW_LINK+0x5 (%rip),%rax	# 8040fefd 	*/.byte 0x48,0x8B,0x5,0xD6,0xFF,0xFF,0xFF
/*	lea	-0x10(%rbp),%rbp	# 8040ff04 	*/.byte 0x48,0x8D,0x6D,0xF0
	call	com	# 8040ff08 e8 e5 4f ff ff 
/*	mov	%rax,VIEW_LINK+0x5 (%rip)	# 8040ff0d 	*/.byte 0x48,0x89,0x5,0xC6,0xFF,0xFF,0xFF
/*	mov	$0x0,%eax	# 8040ff14 	*/.byte 0xB8,0x0,0x0,0x0,0x0
	call	com	# 8040ff19 e8 d4 4f ff ff 
//?YDP><DP
	call	queYDPgreatlessDP	# 8040ff1e e8 f2 ef ff ff 
//;
	ret		# 8040ff23 c3 
//
//T: }VIEW
//?YDP><DP


rskVIEW:
	call	queYDPgreatlessDP	# 8040ff24 e8 ec ef ff ff 
//   HERE  VIEW_LINK , TO VIEW_LINK -1 ,
/*	mov	%rax,-0x08(%rbp)	# 8040ff29 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	HsubSTDOUT+0x15 (%rip),%rax	# 8040ff2d 	*/.byte 0x48,0x8B,0x5,0x76,0x4F,0xFF,0xFF
/*	mov	%rax,dcomasubSET+0x5 (%rip)	# 8040ff34 	*/.byte 0x48,0x89,0x5,0x61,0x59,0xFF,0xFF
/*	mov	%rax,-0x10(%rbp)	# 8040ff3b 	*/.byte 0x48,0x89,0x45,0xF0
/*	mov	VIEW_LINK+0x5 (%rip),%rax	# 8040ff3f 	*/.byte 0x48,0x8B,0x5,0x94,0xFF,0xFF,0xFF
/*	lea	-0x10(%rbp),%rbp	# 8040ff46 	*/.byte 0x48,0x8D,0x6D,0xF0
	call	com	# 8040ff4a e8 a3 4f ff ff 
/*	mov	%rax,VIEW_LINK+0x5 (%rip)	# 8040ff4f 	*/.byte 0x48,0x89,0x5,0x84,0xFF,0xFF,0xFF
/*	movq	$-0x1,%rax	# 8040ff56 	*/.byte 0x48,0xC7,0xC0,0xFF,0xFF,0xFF,0xFF
	call	com	# 8040ff5d e8 90 4f ff ff 
//   CURFILENAME COUNT S",
/*	mov	%rax,-0x08(%rbp)	# 8040ff62 	*/.byte 0x48,0x89,0x45,0xF8
/*	lea	RrslW+0xd (%rip),%rax	# 8040ff66 	*/.byte 0x48,0x8D,0x5,0xA5,0xFA,0xFF,0xFF
/*	lea	0x01(%rax),%rdx	# 8040ff6d 	*/.byte 0x48,0x8D,0x50,0x1
/*	movzbq	(%rax),%rax	# 8040ff71 	*/.byte 0x48,0xF,0xB6,0x0
/*	mov	%rdx,-0x10(%rbp)	# 8040ff75 	*/.byte 0x48,0x89,0x55,0xF0
/*	lea	-0x10(%rbp),%rbp	# 8040ff79 	*/.byte 0x48,0x8D,0x6D,0xF0
	call	Sdticcom	# 8040ff7d e8 4c e6 ff ff 
//?YDP><DP
	call	queYDPgreatlessDP	# 8040ff82 e8 8e ef ff ff 
//
//;
	ret		# 8040ff87 c3 
//
//T: INCLUDED  ( c-addr u ---- )
//\ Open the file with name c-addr u and interpret all lines contained in it.
//\	CR RP@ 6 >> $F AND SPACES ." TO   <" 2DUP TYPE ." >"
//	2DUP	R/O  OPEN-FILE THROW >R


INCLUDED:
/*	mov	0x00(%rbp),%rdx	# 8040ff88 	*/.byte 0x48,0x8B,0x55,0x0
/*	mov	%rax,-0x08(%rbp)	# 8040ff8c 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	%rdx,-0x10(%rbp)	# 8040ff90 	*/.byte 0x48,0x89,0x55,0xF0
/*	mov	%rax,-0x18(%rbp)	# 8040ff94 	*/.byte 0x48,0x89,0x45,0xE8
/*	mov	RrslO+0x5 (%rip),%rax	# 8040ff98 	*/.byte 0x48,0x8B,0x5,0x51,0xFA,0xFF,0xFF
/*	lea	-0x18(%rbp),%rbp	# 8040ff9f 	*/.byte 0x48,0x8D,0x6D,0xE8
	call	OPENsubFILE	# 8040ffa3 e8 c4 db ff ff 
	call	THROW	# 8040ffa8 e8 df 55 ff ff 
	Push	%rax	# 8040ffad 50 
/*	mov	0x00(%rbp),%rax	# 8040ffae 	*/.byte 0x48,0x8B,0x45,0x0
/*	lea	0x08(%rbp),%rbp	# 8040ffb2 	*/.byte 0x48,0x8D,0x6D,0x8
//	CFNAME-SET
	call	CFNAMEsubSET	# 8040ffb6 e8 13 fd ff ff 
//        VIEW_{
	call	VIEW_lsk	# 8040ffbb e8 22 ff ff ff 
//	R@ ['] INCLUDE-FILE
/*	mov	%rax,-0x08(%rbp)	# 8040ffc0 	*/.byte 0x48,0x89,0x45,0xF8
/*	mov	(%rsp),%rax	# 8040ffc4 	*/.byte 0x48,0x8B,0x4,0x24
/*	mov	%rax,-0x10(%rbp)	# 8040ffc8 	*/.byte 0x48,0x89,0x45,0xF0
/*	lea	INCLUDEsubFILE(%rip),%rax	# 8040ffcc 	*/.byte 0x48,0x8D,0x5,0x99,0xFD,0xFF,0xFF
/*	lea	-0x10(%rbp),%rbp	# 8040ffd3 	*/.byte 0x48,0x8D,0x6D,0xF0
//	CATCH
	call	CATCH	# 8040ffd7 e8 57 55 ff ff 
//	}VIEW
	call	rskVIEW	# 8040ffdc e8 43 ff ff ff 
//\	CR RP@ 8 + 6 >> $F AND SPACES  ." FROM <" CURFILENAME COUNT TYPE ." >"  DUP . 
//	DUP  IF cr ." in <" CURFILENAME COUNT TYPE ." >" THEN  CFNAME-FREE
/*	mov	%rax,-0x08(%rbp)	# 8040ffe1 	*/.byte 0x48,0x89,0x45,0xF8
	test	%rax,%rax	# 8040ffe5 48 85 c0 
/*	mov	-0x08(%rbp),%rax	# 8040ffe8 	*/.byte 0x48,0x8B,0x45,0xF8
/*	jz	INCLUDED+0xaa 	# 8040ffec 	*/.byte 0xF,0x84,0x40,0x0,0x0,0x0
	call	CR	# 8040fff2 e8 e4 4f ff ff 
	call	cbigSdticcend	# 8040fff7 e8 1e 50 ff ff 
	.byte 0x4,0x69,0x6E,0x20,0x3C
	call	TYPE	# 80410001 e8 88 4f ff ff 
/*	mov	%rax,-0x08(%rbp)	# 80410006 	*/.byte 0x48,0x89,0x45,0xF8
/*	lea	RrslW+0xd (%rip),%rax	# 8041000a 	*/.byte 0x48,0x8D,0x5,0x1,0xFA,0xFF,0xFF
/*	lea	0x01(%rax),%rdx	# 80410011 	*/.byte 0x48,0x8D,0x50,0x1
/*	movzbq	(%rax),%rax	# 80410015 	*/.byte 0x48,0xF,0xB6,0x0
/*	mov	%rdx,-0x10(%rbp)	# 80410019 	*/.byte 0x48,0x89,0x55,0xF0
/*	lea	-0x10(%rbp),%rbp	# 8041001d 	*/.byte 0x48,0x8D,0x6D,0xF0
	call	TYPE	# 80410021 e8 68 4f ff ff 
	call	cbigSdticcend	# 80410026 e8 ef 4f ff ff 
	.byte 0x1,0x3E
	call	TYPE	# 8041002d e8 5c 4f ff ff 
	call	CFNAMEsubFREE	# 80410032 e8 e8 fc ff ff 
//	R> CLOSE-FILE DROP
/*	mov	%rax,-0x08(%rbp)	# 80410037 	*/.byte 0x48,0x89,0x45,0xF8
	pop	%rax	# 8041003b 58 
/*	lea	-0x08(%rbp),%rbp	# 8041003c 	*/.byte 0x48,0x8D,0x6D,0xF8
	call	CLOSEsubFILE	# 80410040 e8 22 49 ff ff 
/*	mov	0x00(%rbp),%rax	# 80410045 	*/.byte 0x48,0x8B,0x45,0x0
/*	lea	0x08(%rbp),%rbp	# 80410049 	*/.byte 0x48,0x8D,0x6D,0x8
//	THROW
	call	THROW	# 8041004d e8 3a 55 ff ff 
//;
	ret		# 80410052 c3 
//
//
//: FLOAD  PARSE-NAME INCLUDED ;


FLOAD:
	call	PARSEsubNAME	# 80410053 e8 25 d3 ff ff 
	call	INCLUDED	# 80410058 e8 2b ff ff ff 
	ret		# 8041005d c3 
//
