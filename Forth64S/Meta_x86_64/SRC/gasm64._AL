//\ Assembler for x86-64

//

//\ REQUIRE HERE-TAB-CUR ~mak\lib\THERE\mlist.f 

//

//\ REQUIRE REQUIRE_AL ~mak\lib\THERE\mlist.f 

//REQUIRE [IF] ~mak/CompIF4.f

//REQUIRE [IFNDEF] ~nn/lib/ifdef.f

//REQUIRE NUMBER? ~mak/lib/fpcnum.f

//REQUIRE [AGAIN] ~mak/lib/twopass.f 

//

//\- ENUM : ENUM ( n -- n+1) DUP CONSTANT 1+ ;

ENUM:
	mov	%rax,-0x08(%rbp)	# 42AE64 48 89 45 F8 
	lea	-0x08(%rbp),%rbp	# 42AE68 48 8D 6D F8 
	call	 ( CONSTANT ) 	# 42AE6C E8 9B 42 FE FF 
	lea	0x01(%rax),%rax	# 42AE71 48 8D 40 1 
	ret		# 42AE75 C3 
//

//\- DCREATE : DCREATE CREATE ;

DCREATE:
	call	 ( CREATE ) 	# 42AE76 E8 25 43 FE FF 
	ret		# 42AE7B C3 
//\- TCREATE : TCREATE CREATE ;

TCREATE:
	call	 ( CREATE ) 	# 42AE7C E8 1F 43 FE FF 
	ret		# 42AE81 C3 
//\- TDOES>  : TDOES> POSTPONE DOES> ; IMMEDIATE

TDOESgreat:
	call	 ( DOES> ) 	# 42AE82 E8 51 44 FE FF 
	ret		# 42AE87 C3 
//

//\- <<	: << LSHIFT ;

//\- >>	: >> RSHIFT ;

//\- A>>	: A>> ARSHIFT ;

//\- I,	: I, , ;

Icom:
	call	 ( , ) 	# 42AE88 E8 8D A0 FD FF 
	ret		# 42AE8D C3 
//\- BREAK	: BREAK  POSTPONE EXIT POSTPONE THEN ; IMMEDIATE

//\- CELL/	: CELL/  CELL / ;

CELLrsl:
	mov	%rax,-0x08(%rbp)	# 42AE8E 48 89 45 F8 
	mov	$0x8,%eax	# 42AE92 B8 8 0 0 0 
	mov	%rax,%rcx	# 42AE97 48 89 C1 
	mov	-0x08(%rbp),%rax	# 42AE9A 48 8B 45 F8 
	cqto		# 42AE9E 48 99 
		idivq	%rcx	# 42AEA0 48 F7 F9 
	ret		# 42AEA3 C3 
//\- OR!	:  OR! ( N ADDR -- )	DUP @ ROT OR	SWAP ! ;

//\- AND!	: AND! ( N ADDR -- )	DUP @ ROT AND	SWAP ! ;

ANDsave:
	mov	%rax,%rdx	# 42AEA4 48 89 C2 
	mov	(%rax),%rax	# 42AEA7 48 8B 0 
	mov	%rax,-0x08(%rbp)	# 42AEAA 48 89 45 F8 
	mov	0x00(%rbp),%rax	# 42AEAE 48 8B 45 0 
	and	-0x08(%rbp),%rax	# 42AEB2 48 23 45 F8 
	mov	%rax,(%rdx)	# 42AEB6 48 89 2 
	mov	0x08(%rbp),%rax	# 42AEB9 48 8B 45 8 
	lea	0x10(%rbp),%rbp	# 42AEBD 48 8D 6D 10 
	ret		# 42AEC1 C3 
//\- CXOR! :  CXOR! ( N ADDR -- )	DUP C@ ROT XOR	SWAP C! ;

CXORsave:
	mov	%rax,-0x08(%rbp)	# 42AEC2 48 89 45 F8 
	movzb	(%rax),%eax	# 42AEC6 F B6 0 
	mov	-0x08(%rbp),%rdx	# 42AEC9 48 8B 55 F8 
	mov	%rax,-0x08(%rbp)	# 42AECD 48 89 45 F8 
	mov	0x00(%rbp),%rax	# 42AED1 48 8B 45 0 
	xor	-0x08(%rbp),%rax	# 42AED5 48 33 45 F8 
	mov	%rax,0x00(%rbp)	# 42AED9 48 89 45 0 
	mov	%rdx,%rax	# 42AEDD 48 89 D0 
	mov	0x00(%rbp),%dl	# 42AEE0 8A 55 0 
	mov	%dl,(%rax)	# 42AEE3 88 10 
	mov	0x08(%rbp),%rax	# 42AEE5 48 8B 45 8 
	lea	0x10(%rbp),%rbp	# 42AEE9 48 8D 6D 10 
	ret		# 42AEED C3 
//\- WXOR! :  WXOR! ( N ADDR -- )	DUP W@ ROT XOR	SWAP W! ;

WXORsave:
	mov	%rax,-0x08(%rbp)	# 42AEEE 48 89 45 F8 
	movzw	(%rax),%eax	# 42AEF2 F B7 0 
	mov	-0x08(%rbp),%rdx	# 42AEF5 48 8B 55 F8 
	mov	%rax,-0x08(%rbp)	# 42AEF9 48 89 45 F8 
	mov	0x00(%rbp),%rax	# 42AEFD 48 8B 45 0 
	xor	-0x08(%rbp),%rax	# 42AF01 48 33 45 F8 
	mov	%rax,0x00(%rbp)	# 42AF05 48 89 45 0 
	mov	%rdx,%rax	# 42AF09 48 89 D0 
	mov	0x00(%rbp),%edx	# 42AF0C 8B 55 0 
	mov	%dx,(%rax)	# 42AF0F 66 89 10 
	mov	0x08(%rbp),%rax	# 42AF12 48 8B 45 8 
	lea	0x10(%rbp),%rbp	# 42AF16 48 8D 6D 10 
	ret		# 42AF1A C3 
//\- SHORT? : SHORT? ( n -- -128 < n < 127 )  0x80 + 0x100 U< ;

//\- NOT	: NOT INVERT ;

//\- M@	: M@ @ ;

//\- M!	: M! ! ;

//\- MC!	: MC! C! ;

MCsave:
	mov	0x00(%rbp),%dl	# 42AF1B 8A 55 0 
	mov	%dl,(%rax)	# 42AF1E 88 10 
	mov	0x08(%rbp),%rax	# 42AF20 48 8B 45 8 
	lea	0x10(%rbp),%rbp	# 42AF24 48 8D 6D 10 
	ret		# 42AF28 C3 
//\- LCOUNT : LCOUNT   CELL+ DUP CELL- @ ; 

LCOUNT:
	lea	0x08(%rax),%rax	# 42AF29 48 8D 40 8 
	mov	%rax,-0x08(%rbp)	# 42AF2D 48 89 45 F8 
	mov	-0x08(%rax),%rax	# 42AF31 48 8B 40 F8 
	lea	-0x08(%rbp),%rbp	# 42AF35 48 8D 6D F8 
	ret		# 42AF39 C3 
//\ - U>= : U>= U< 0= ;

//\- U<= : U<= U> 0= ;

Ulessequ:
	cmp	0x00(%rbp),%rax	# 42AF3A 48 3B 45 0 
	sbb	%rax,%rax	# 42AF3E 48 19 C0 
	sub	$0x01,%rax	# 42AF41 48 83 E8 1 
	sbb	%rax,%rax	# 42AF45 48 19 C0 
	lea	0x08(%rbp),%rbp	# 42AF48 48 8D 6D 8 
	ret		# 42AF4C C3 
//\- 4- : 4- 4 - ;

//

//[IFNDEF] -ROLL

//: -ROLL          \ nn-1..n0 nn n -- nn..n0

//	?DUP IF ROT >R 1- RECURSE  R>  THEN ;

subROLL:
	call	 ( ?DUP ) 	# 42AF4D E8 E2 97 FD FF 
	test	%rax,%rax	# 42AF52 48 85 C0 
	mov	0x00(%rbp),%rax	# 42AF55 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42AF59 48 8D 6D 8 
	jz	 ( -ROLL+41  ) 	# 42AF5D F 84 2B 0 0 0 
	mov	0x00(%rbp),%rdx	# 42AF63 48 8B 55 0 
	mov	%rax,0x00(%rbp)	# 42AF67 48 89 45 0 
	mov	0x08(%rbp),%rax	# 42AF6B 48 8B 45 8 
	mov	%rdx,0x08(%rbp)	# 42AF6F 48 89 55 8 
	Push	%rax	# 42AF73 50 
	mov	0x00(%rbp),%rax	# 42AF74 48 8B 45 0 
	lea	-0x01(%rax),%rax	# 42AF78 48 8D 40 FF 
	lea	0x08(%rbp),%rbp	# 42AF7C 48 8D 6D 8 
	call	 ( -ROLL ) 	# 42AF80 E8 C8 FF FF FF 
	mov	%rax,-0x08(%rbp)	# 42AF85 48 89 45 F8 
	pop	%rax	# 42AF89 58 
	lea	-0x08(%rbp),%rbp	# 42AF8A 48 8D 6D F8 
	ret		# 42AF8E C3 
//[THEN]

//

//0 VALUE TEXEC_?

TEXEC_que:
	call	 ( DOVALUE ) 	# 42AF8F E8 7E 99 FD FF 
	add	%al,(%rax)	# 42AF94 0 0 
	add	%al,(%rax)	# 42AF96 0 0 
	add	%al,(%rax)	# 42AF98 0 0 
	add	%al,(%rax)	# 42AF9A 0 0 
//: TEXEC_SET  -1 TO TEXEC_? ;

TEXEC_SET:
	movq	$-0x1, ( TEXEC_?+5  ) (%rip)	# 42AF9C 48 C7 5 ED FF FF FF FF FF FF FF 
	ret		# 42AFA7 C3 
//: TEXEC_DIS  0 TO TEXEC_? ;

TEXEC_DIS:
	movq	$0x0, ( TEXEC_?+5  ) (%rip)	# 42AFA8 48 C7 5 E1 FF FF FF 0 0 0 0 
	ret		# 42AFB3 C3 
//\- .S  : .S ( -- )    DEPTH .SN ;

//

//\- 3DUP : 3DUP DUP 2OVER ROT ;

//

//0 VALUE ASMDBG

ASMDBG:
	call	 ( DOVALUE ) 	# 42AFB4 E8 59 99 FD FF 
	add	%al,(%rax)	# 42AFB9 0 0 
	add	%al,(%rax)	# 42AFBB 0 0 
	add	%al,(%rax)	# 42AFBD 0 0 
	add	%al,(%rax)	# 42AFBF 0 0 
//

//DECIMAL

//

//: b.??	HERE - 3 << $FFFFE0 AND ;

bdotqueque:
	mov	%rax,-0x08(%rbp)	# 42AFC1 48 89 45 F8 
	mov	 ( H-STDOUT+15  ) (%rip),%rax	# 42AFC5 48 8B 5 6 9F FD FF 
	mov	%rax, ( :-SET+5  ) (%rip)	# 42AFCC 48 89 5 F1 A8 FD FF 
		negq	%rax	# 42AFD3 48 F7 D8 
	add	-0x08(%rbp),%rax	# 42AFD6 48 3 45 F8 
	shl	$0x03,%rax	# 42AFDA 48 C1 E0 3 
	and	$0xFFFFE0,%eax	# 42AFDE 25 E0 FF FF 0 
	ret		# 42AFE3 C3 
//

//MODULE: GASM64_MOD

	Push	%rax	# 42AFE4 50 
	sahf		# 42AFE5 9E 
	add	(%rax),%al	# 42AFE6 40 2 0 
	add	%al,(%rax)	# 42AFE9 0 0 
	add	%ch,%ch	# 42AFEB 0 ED 
	cmovb	cmov	(%rax),%eax	# 42AFED F 42 0 
	add	%al,(%rax)	# 42AFF0 0 0 
	add	%al,(%rax)	# 42AFF2 0 0 
	pop	%rax	# 42AFF4 58 
	add	(%rax),%al	# 42AFF5 4C 40 2 0 
	add	%al,(%rax)	# 42AFF9 0 0 
	add	%al,(%rax)	# 42AFFB 0 0 
	add	%al,(%rax)	# 42AFFD 0 0 
	add	%al,(%rax)	# 42AFFF 0 0 
	add	%al,(%rax)	# 42B001 0 0 
GASM64_MOD:
	call	 ( VOCABULARY+32  ) 	# 42B003 E8 68 47 FE FF 
in	$0xAF,%al	# 42B008 E4 AF 
	add	%al,(%rax)	# 42B00A 42 0 0 
	add	%al,(%rax)	# 42B00D 0 0 
	add	%ch,%al	# 42B00F 0 E8 
//

//0 VALUE MOREPASS

stD	# 42B011 FD 
	cwtl		# 42B012 98 
stD	# 42B013 FD 
	inc	(%rax)	# 42B014 FF 0 
	add	%al,(%rax)	# 42B016 0 0 
	add	%al,(%rax)	# 42B018 0 0 
	add	%al,(%rax)	# 42B01A 0 0 
	add	%ch,%al	# 42B01C 0 E8 
//0 VALUE NPASS

	lock		# 42B01E F0 
	cwtl		# 42B01F 98 
stD	# 42B020 FD 
	inc	(%rax)	# 42B021 FF 0 
	add	%al,(%rax)	# 42B023 0 0 
	add	%al,(%rax)	# 42B025 0 0 
	add	%al,(%rax)	# 42B027 0 0 
	add	%ch,%al	# 42B029 0 E8 
//

//0 VALUE ITERNUM

	.byte	0xE3	# 42B02B E3 
	cwtl		# 42B02C 98 
stD	# 42B02D FD 
	inc	(%rax)	# 42B02E FF 0 
	add	%al,(%rax)	# 42B030 0 0 
	add	%al,(%rax)	# 42B032 0 0 
	add	%al,(%rax)	# 42B034 0 0 
	add	%ch,%al	# 42B036 0 E8 
//0xF VALUE DSB_OPT

	insl		# 42B038 D6 
	cwtl		# 42B039 98 
stD	# 42B03A FD 
	dec	(%rdi)	# 42B03B FF F 
	add	%al,(%rax)	# 42B03D 0 0 
	add	%al,(%rax)	# 42B03F 0 0 
	add	%al,(%rax)	# 42B041 0 0 
	add	%ch,%al	# 42B043 0 E8 
//

//4 CONSTANT MAXLL

	retf	0xFD98	# 42B045 CA 98 FD 
	inc	(%rax,%rax,1)	# 42B048 FF 4 0 
	add	%al,(%rax)	# 42B04B 0 0 
	add	%al,(%rax)	# 42B04D 0 0 
	add	%al,(%rax)	# 42B04F 0 0 
//

//: :LTABLE      ( addr --- )

//   TCREATE HERE  MAXLL 0 DO 0 , LOOP  TDOES> \ F7_ED

dcomaLTABLE:
	call	 ( TCREATE ) 	# 42B051 E8 26 FE FF FF 
	mov	%rax,-0x08(%rbp)	# 42B056 48 89 45 F8 
	mov	 ( H-STDOUT+15  ) (%rip),%rax	# 42B05A 48 8B 5 71 9E FD FF 
	mov	%rax, ( :-SET+5  ) (%rip)	# 42B061 48 89 5 5C A8 FD FF 
	mov	%rax,-0x10(%rbp)	# 42B068 48 89 45 F0 
	movq	$0x4,-0x18(%rbp)	# 42B06C 48 C7 45 E8 4 0 0 0 
	mov	$0x0,%eax	# 42B074 B8 0 0 0 0 
	lea	-0x18(%rbp),%rbp	# 42B079 48 8D 6D E8 
	call	 ( (DO) ) 	# 42B07D E8 67 99 FD FF 
	.quad  ( :LTABLE+58  ) 
	mov	%rax,-0x08(%rbp)	# 42B08A 48 89 45 F8 
	mov	$0x0,%eax	# 42B08E B8 0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42B093 48 8D 6D F8 
	call	 ( , ) 	# 42B097 E8 7E 9E FD FF 
	inc	%r14	# 42B09C 49 FF C6 
	inc	%r15	# 42B09F 49 FF C7 
	jNo	 ( :LTABLE+39  ) 	# 42B0A2 71 E6 
	pop	%r14	# 42B0A4 41 5E 
	pop	%r15	# 42B0A6 41 5F 
	pop	%rcx	# 42B0A8 59 
	call	 ( (DOES>) ) 	# 42B0A9 E8 D9 41 FE FF 
	mov	%rax,-0x08(%rbp)	# 42B0AE 48 89 45 F8 
	pop	%rax	# 42B0B2 58 
	mov	%rax,-0x10(%rbp)	# 42B0B3 48 89 45 F0 
//   DUP

	mov	%rax,-0x18(%rbp)	# 42B0B7 48 89 45 E8 
//   DUP

	lea	0x08(%rax),%rax	# 42B0BB 48 8D 40 8 
// CELL+  MAXLL 1- CELLS CMOVE>

	mov	%rax,-0x20(%rbp)	# 42B0BF 48 89 45 E0 
	mov	$0x18,%eax	# 42B0C3 B8 18 0 0 0 
	lea	-0x20(%rbp),%rbp	# 42B0C8 48 8D 6D E0 
	call	 ( CMOVE> ) 	# 42B0CC E8 E9 97 FD FF 
//   HERE SWAP ! ;

	mov	%rax,-0x08(%rbp)	# 42B0D1 48 89 45 F8 
	mov	 ( H-STDOUT+15  ) (%rip),%rax	# 42B0D5 48 8B 5 F6 9D FD FF 
	mov	%rax, ( :-SET+5  ) (%rip)	# 42B0DC 48 89 5 E1 A7 FD FF 
	mov	-0x08(%rbp),%rdx	# 42B0E3 48 8B 55 F8 
	mov	%rax,(%rdx)	# 42B0E7 48 89 2 
	mov	0x00(%rbp),%rax	# 42B0EA 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42B0EE 48 8D 6D 8 
	ret		# 42B0F2 C3 
//

//: BLTABLE      ( --- addr )               \ 

//  TCREATE  , TDOES>  \  F7_ED

BLTABLE:
	call	 ( TCREATE ) 	# 42B0F3 E8 84 FD FF FF 
	call	 ( , ) 	# 42B0F8 E8 1D 9E FD FF 
	call	 ( (DOES>) ) 	# 42B0FD E8 85 41 FE FF 
	mov	%rax,-0x08(%rbp)	# 42B102 48 89 45 F8 
	pop	%rax	# 42B106 58 
	mov	(%rax),%rax	# 42B107 48 8B 0 
	mov	(%rax),%rax	# 42B10A 48 8B 0 
//  @ @

	mov	%rax,-0x10(%rbp)	# 42B10D 48 89 45 F0 
// DUP HERE U> ABORT" backward ref error"

	mov	%rax,-0x18(%rbp)	# 42B111 48 89 45 E8 
	mov	 ( H-STDOUT+15  ) (%rip),%rax	# 42B115 48 8B 5 B6 9D FD FF 
	mov	%rax, ( :-SET+5  ) (%rip)	# 42B11C 48 89 5 A1 A7 FD FF 
	cmp	-0x18(%rbp),%rax	# 42B123 48 3B 45 E8 
	sbb	%rax,%rax	# 42B127 48 19 C0 
	lea	-0x10(%rbp),%rbp	# 42B12A 48 8D 6D F0 
	call	 ( (S") ) 	# 42B12E E8 F 9F FD FF 
	.byte 0x12,0x62,0x61,0x63,0x6B,0x77,0x61,0x72,0x64,0x20,0x72,0x65,0x66,0x20,0x65,0x72,0x72,0x6F,0x72
	call	 ( (ABORT'') ) 	# 42B146 E8 DD AE FE FF 
//

//;

	ret		# 42B14B C3 
//

//: FLTABLE      ( --- addr )               \ 

//  TCREATE  , TDOES>  \  F7_ED

FLTABLE:
	call	 ( TCREATE ) 	# 42B14C E8 2B FD FF FF 
	call	 ( , ) 	# 42B151 E8 C4 9D FD FF 
	call	 ( (DOES>) ) 	# 42B156 E8 2C 41 FE FF 
	mov	%rax,-0x08(%rbp)	# 42B15B 48 89 45 F8 
	pop	%rax	# 42B15F 58 
	mov	(%rax),%rax	# 42B160 48 8B 0 
	mov	%rax,-0x10(%rbp)	# 42B163 48 89 45 F0 
//  @ -1  SWAP  MAXLL CELLS BOUNDS

	movq	$-0x1,%rax	# 42B167 48 C7 C0 FF FF FF FF 
	mov	-0x10(%rbp),%rdx	# 42B16E 48 8B 55 F0 
	mov	%rax,-0x10(%rbp)	# 42B172 48 89 45 F0 
	mov	%rdx,-0x18(%rbp)	# 42B176 48 89 55 E8 
	mov	$0x20,%eax	# 42B17A B8 20 0 0 0 
	add	-0x18(%rbp),%rax	# 42B17F 48 3 45 E8 
	mov	-0x18(%rbp),%rdx	# 42B183 48 8B 55 E8 
	mov	%rax,-0x18(%rbp)	# 42B187 48 89 45 E8 
	mov	%rdx,%rax	# 42B18B 48 89 D0 
	lea	-0x18(%rbp),%rbp	# 42B18E 48 8D 6D E8 
//

//  DO  HERE I @ U<

	call	 ( (DO) ) 	# 42B192 E8 52 98 FD FF 
	.quad  ( FLTABLE+B2  ) 
	mov	%rax,-0x08(%rbp)	# 42B19F 48 89 45 F8 
	mov	 ( H-STDOUT+15  ) (%rip),%rax	# 42B1A3 48 8B 5 28 9D FD FF 
	mov	%rax, ( :-SET+5  ) (%rip)	# 42B1AA 48 89 5 13 A7 FD FF 
	mov	%rax,-0x10(%rbp)	# 42B1B1 48 89 45 F0 
	mov	(%r14),%rax	# 42B1B5 49 8B 6 
	cmp	%rax,-0x10(%rbp)	# 42B1B8 48 39 45 F0 
	sbb	%rax,%rax	# 42B1BC 48 19 C0 
	test	%rax,%rax	# 42B1BF 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42B1C2 48 8B 45 F8 
//	IF I @ UMIN

	jz	 ( FLTABLE+90  ) 	# 42B1C6 F 84 10 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42B1CC 48 89 45 F8 
	mov	(%r14),%rax	# 42B1D0 49 8B 6 
	cmp	-0x08(%rbp),%rax	# 42B1D3 48 3B 45 F8 
	cmovNbe	cmov	-0x08(%rbp),%rax	# 42B1D7 48 F 47 45 F8 
//	THEN

//  CELL

	mov	%rax,-0x08(%rbp)	# 42B1DC 48 89 45 F8 
	mov	$0x8,%eax	# 42B1E0 B8 8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42B1E5 48 8D 6D F8 
// +LOOP

	add	%rax,%r14	# 42B1E9 49 1 C6 
	add	%rax,%r15	# 42B1EC 49 1 C7 
	mov	0x00(%rbp),%rax	# 42B1EF 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42B1F3 48 8D 6D 8 
	jNo	 ( FLTABLE+53  ) 	# 42B1F7 71 A6 
	pop	%r14	# 42B1F9 41 5E 
	pop	%r15	# 42B1FB 41 5F 
	pop	%rcx	# 42B1FD 59 
// DUP -1 =

	mov	%rax,-0x08(%rbp)	# 42B1FE 48 89 45 F8 
	xor	$-0x01,%rax	# 42B202 48 83 F0 FF 
	sub	$0x01,%rax	# 42B206 48 83 E8 1 
	sbb	%rax,%rax	# 42B20A 48 19 C0 
	test	%rax,%rax	# 42B20D 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42B210 48 8B 45 F8 
// IF

	jz	 ( FLTABLE+149  ) 	# 42B214 F 84 7B 0 0 0 
//   NPASS

	mov	%rax,-0x08(%rbp)	# 42B21A 48 89 45 F8 
	mov	 ( NPASS+5  ) (%rip),%rax	# 42B21E 48 8B 5 FD FD FF FF 
	test	%rax,%rax	# 42B225 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42B228 48 8B 45 F8 
//	if 1  ABORT" forward ref error or MAXLL not enough" 

	jz	 ( FLTABLE+128  ) 	# 42B22C F 84 42 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42B232 48 89 45 F8 
	mov	$0x1,%eax	# 42B236 B8 1 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42B23B 48 8D 6D F8 
	call	 ( (S") ) 	# 42B23F E8 FE 9D FD FF 
	.byte 0x25,0x66,0x6F,0x72,0x77,0x61,0x72,0x64,0x20,0x72,0x65,0x66,0x20,0x65,0x72,0x72,0x6F,0x72,0x20,0x6F,0x72,0x20,0x4D,0x41,0x58,0x4C,0x4C,0x20,0x6E,0x6F,0x74,0x20,0x65,0x6E,0x6F,0x75,0x67,0x68
	call	 ( (ABORT'') ) 	# 42B26A E8 B9 AD FE FF 
//	else drop here 4 +

	jmp	 ( FLTABLE+13E  ) 	# 42B26F E9 16 0 0 0 
	mov	0x00(%rbp),%rax	# 42B274 48 8B 45 0 
	mov	 ( H-STDOUT+15  ) (%rip),%rax	# 42B278 48 8B 5 53 9C FD FF 
	mov	%rax, ( :-SET+5  ) (%rip)	# 42B27F 48 89 5 3E A6 FD FF 
	lea	0x04(%rax),%rax	# 42B286 48 8D 40 4 
//	then

//	-1 TO MOREPASS

	movq	$-0x1, ( MOREPASS+5  ) (%rip)	# 42B28A 48 C7 5 80 FD FF FF FF FF FF FF 
// THEN

//;

	ret		# 42B295 C3 
//

//: :::L  :LTABLE DUP BLTABLE  FLTABLE  ;

dcomadcomadcomaL:
	call	 ( :LTABLE ) 	# 42B296 E8 B6 FD FF FF 
	mov	%rax,-0x08(%rbp)	# 42B29B 48 89 45 F8 
	lea	-0x08(%rbp),%rbp	# 42B29F 48 8D 6D F8 
	call	 ( BLTABLE ) 	# 42B2A3 E8 4B FE FF FF 
	call	 ( FLTABLE ) 	# 42B2A8 E8 9F FE FF FF 
	ret		# 42B2AD C3 
//

//\ ::L  LL0 LL0:

//\ LTABLE@ LL0 LTABLE! LL0:

//:::L  0: 0B 0F

	add	%al,(%rax)	# 42B2AE 0 0 
	add	%al,(%rax)	# 42B2B0 0 0 
	add	%ch,%al	# 42B2B2 0 E8 
		idiv	%ch	# 42B2B4 F6 FD 
	g4??	%edi	# 42B2B6 FF FF 
	add	%al,(%rax)	# 42B2B8 0 0 
	add	%al,(%rax)	# 42B2BA 0 0 
	add	%al,(%rax)	# 42B2BC 0 0 
	add	%al,(%rax)	# 42B2BE 0 0 
	add	%al,(%rax)	# 42B2C0 0 0 
	add	%al,(%rax)	# 42B2C2 0 0 
	add	%al,(%rax)	# 42B2C4 0 0 
	add	%al,(%rax)	# 42B2C6 0 0 
	add	%al,(%rax)	# 42B2C8 0 0 
	add	%al,(%rax)	# 42B2CA 0 0 
	add	%al,(%rax)	# 42B2CC 0 0 
	add	%al,(%rax)	# 42B2CE 0 0 
	add	%al,(%rax)	# 42B2D0 0 0 
	add	%al,(%rax)	# 42B2D2 0 0 
	add	%al,(%rax)	# 42B2D4 0 0 
	add	%al,(%rax)	# 42B2D6 0 0 
	add	%al,(%rax)	# 42B2D8 0 0 
	add	%ch,%al	# 42B2DA 0 E8 
	and	%dh,%bh	# 42B2DC 22 FE 
	g4??	%edi	# 42B2DE FF FF 
	mov	$0x42B2,%eax	# 42B2E0 B8 B2 42 0 0 
	add	%al,(%rax)	# 42B2E5 0 0 
	add	%al,(%rax)	# 42B2E7 0 0 
	add	%al,(%rax)	# 42B2E9 0 0 
_0F:
	call	 ( FLTABLE+F  ) 	# 42B2EB E8 6B FE FF FF 
	mov	$0x42B2,%eax	# 42B2F0 B8 B2 42 0 0 
	add	%al,(%rax)	# 42B2F5 0 0 
	add	%al,(%rax)	# 42B2F7 0 0 
//:::L  1: 1B 1F

	add	%al,(%rax)	# 42B2F9 0 0 
_1dcoma:
	call	 ( :LTABLE+5D  ) 	# 42B2FB E8 AE FD FF FF 
	add	%al,(%rax)	# 42B300 0 0 
	add	%al,(%rax)	# 42B302 0 0 
	add	%al,(%rax)	# 42B304 0 0 
	add	%al,(%rax)	# 42B306 0 0 
	add	%al,(%rax)	# 42B308 0 0 
	add	%al,(%rax)	# 42B30A 0 0 
	add	%al,(%rax)	# 42B30C 0 0 
	add	%al,(%rax)	# 42B30E 0 0 
	add	%al,(%rax)	# 42B310 0 0 
	add	%al,(%rax)	# 42B312 0 0 
	add	%al,(%rax)	# 42B314 0 0 
	add	%al,(%rax)	# 42B316 0 0 
	add	%al,(%rax)	# 42B318 0 0 
	add	%al,(%rax)	# 42B31A 0 0 
	add	%al,(%rax)	# 42B31C 0 0 
	add	%al,(%rax)	# 42B31E 0 0 
	add	%al,(%rax)	# 42B320 0 0 
	add	%ch,%al	# 42B322 0 E8 
	.byte	0xDA	# 42B324 DA 
stD	# 42B325 FD 
	g4??	%edi	# 42B326 FF FF 
	add	%dh,0x42(%rbx)	# 42B328 0 B3 42 0 0 0 
	add	%al,(%rax)	# 42B32E 0 0 
	add	%al,(%rax)	# 42B330 0 0 
	add	%ch,%al	# 42B332 0 E8 
	and	%esi,%edi	# 42B334 23 FE 
	g4??	%edi	# 42B336 FF FF 
	add	%dh,0x42(%rbx)	# 42B338 0 B3 42 0 0 0 
	add	%al,(%rax)	# 42B33E 0 0 
//:::L  2: 2B 2F

	add	%al,(%rax)	# 42B340 0 0 
	add	%ch,%al	# 42B342 0 E8 
stD	# 42B344 66 FD 
	g4??	%edi	# 42B346 FF FF 
	add	%al,(%rax)	# 42B348 0 0 
	add	%al,(%rax)	# 42B34A 0 0 
	add	%al,(%rax)	# 42B34C 0 0 
	add	%al,(%rax)	# 42B34E 0 0 
	add	%al,(%rax)	# 42B350 0 0 
	add	%al,(%rax)	# 42B352 0 0 
	add	%al,(%rax)	# 42B354 0 0 
	add	%al,(%rax)	# 42B356 0 0 
	add	%al,(%rax)	# 42B358 0 0 
	add	%al,(%rax)	# 42B35A 0 0 
	add	%al,(%rax)	# 42B35C 0 0 
	add	%al,(%rax)	# 42B35E 0 0 
	add	%al,(%rax)	# 42B360 0 0 
	add	%al,(%rax)	# 42B362 0 0 
	add	%al,(%rax)	# 42B364 0 0 
	add	%al,(%rax)	# 42B366 0 0 
	add	%al,(%rax)	# 42B368 0 0 
	add	%ch,%al	# 42B36A 0 E8 
	xchg	%edx,%eax	# 42B36C 92 
stD	# 42B36D FD 
	g4??	%edi	# 42B36E FF FF 
	mov	$0x42,%bl	# 42B370 48 B3 42 
	add	%al,(%rax)	# 42B373 0 0 
	add	%al,(%rax)	# 42B375 0 0 
	add	%al,(%rax)	# 42B377 0 0 
	add	%al,(%rax)	# 42B379 0 0 
_2F:
	call	 ( FLTABLE+F  ) 	# 42B37B E8 DB FD FF FF 
	mov	$0x42,%bl	# 42B380 48 B3 42 
	add	%al,(%rax)	# 42B383 0 0 
	add	%al,(%rax)	# 42B385 0 0 
	add	%al,(%rax)	# 42B387 0 0 
//:::L  3: 3B 3F

	add	%al,(%rax)	# 42B389 0 0 
_3dcoma:
	call	 ( :LTABLE+5D  ) 	# 42B38B E8 1E FD FF FF 
	add	%al,(%rax)	# 42B390 0 0 
	add	%al,(%rax)	# 42B392 0 0 
	add	%al,(%rax)	# 42B394 0 0 
	add	%al,(%rax)	# 42B396 0 0 
	add	%al,(%rax)	# 42B398 0 0 
	add	%al,(%rax)	# 42B39A 0 0 
	add	%al,(%rax)	# 42B39C 0 0 
	add	%al,(%rax)	# 42B39E 0 0 
	add	%al,(%rax)	# 42B3A0 0 0 
	add	%al,(%rax)	# 42B3A2 0 0 
	add	%al,(%rax)	# 42B3A4 0 0 
	add	%al,(%rax)	# 42B3A6 0 0 
	add	%al,(%rax)	# 42B3A8 0 0 
	add	%al,(%rax)	# 42B3AA 0 0 
	add	%al,(%rax)	# 42B3AC 0 0 
	add	%al,(%rax)	# 42B3AE 0 0 
	add	%al,(%rax)	# 42B3B0 0 0 
	add	%ch,%al	# 42B3B2 0 E8 
stD	# 42B3B4 4A FD 
	g4??	%edi	# 42B3B6 FF FF 
	nop		# 42B3B8 90 
	mov	$0x42,%bl	# 42B3B9 B3 42 
	add	%al,(%rax)	# 42B3BB 0 0 
	add	%al,(%rax)	# 42B3BD 0 0 
	add	%al,(%rax)	# 42B3BF 0 0 
	add	%al,(%rax)	# 42B3C1 0 0 
_3F:
	call	 ( FLTABLE+F  ) 	# 42B3C3 E8 93 FD FF FF 
	nop		# 42B3C8 90 
	mov	$0x42,%bl	# 42B3C9 B3 42 
	add	%al,(%rax)	# 42B3CB 0 0 
	add	%al,(%rax)	# 42B3CD 0 0 
	add	%al,(%rax)	# 42B3CF 0 0 
//:::L  4: 4B 4F

	add	%al,(%rax)	# 42B3D1 0 0 
_4dcoma:
	call	 ( :LTABLE+5D  ) 	# 42B3D3 E8 D6 FC FF FF 
	add	%al,(%rax)	# 42B3D8 0 0 
	add	%al,(%rax)	# 42B3DA 0 0 
	add	%al,(%rax)	# 42B3DC 0 0 
	add	%al,(%rax)	# 42B3DE 0 0 
	add	%al,(%rax)	# 42B3E0 0 0 
	add	%al,(%rax)	# 42B3E2 0 0 
	add	%al,(%rax)	# 42B3E4 0 0 
	add	%al,(%rax)	# 42B3E6 0 0 
	add	%al,(%rax)	# 42B3E8 0 0 
	add	%al,(%rax)	# 42B3EA 0 0 
	add	%al,(%rax)	# 42B3EC 0 0 
	add	%al,(%rax)	# 42B3EE 0 0 
	add	%al,(%rax)	# 42B3F0 0 0 
	add	%al,(%rax)	# 42B3F2 0 0 
	add	%al,(%rax)	# 42B3F4 0 0 
	add	%al,(%rax)	# 42B3F6 0 0 
	add	%al,(%rax)	# 42B3F8 0 0 
	add	%ch,%al	# 42B3FA 0 E8 
	add	%ch,%bh	# 42B3FC 2 FD 
	g4??	%edi	# 42B3FE FF FF 
	.byte	0xD8	# 42B400 D8 
	mov	$0x42,%bl	# 42B401 B3 42 
	add	%al,(%rax)	# 42B403 0 0 
	add	%al,(%rax)	# 42B405 0 0 
	add	%al,(%rax)	# 42B407 0 0 
	add	%al,(%rax)	# 42B409 0 0 
_4F:
	call	 ( FLTABLE+F  ) 	# 42B40B E8 4B FD FF FF 
	.byte	0xD8	# 42B410 D8 
	mov	$0x42,%bl	# 42B411 B3 42 
	add	%al,(%rax)	# 42B413 0 0 
	add	%al,(%rax)	# 42B415 0 0 
	add	%al,(%rax)	# 42B417 0 0 
//:::L  5: 5B 5F

	add	%al,(%rax)	# 42B419 0 0 
_5dcoma:
	call	 ( :LTABLE+5D  ) 	# 42B41B E8 8E FC FF FF 
	add	%al,(%rax)	# 42B420 0 0 
	add	%al,(%rax)	# 42B422 0 0 
	add	%al,(%rax)	# 42B424 0 0 
	add	%al,(%rax)	# 42B426 0 0 
	add	%al,(%rax)	# 42B428 0 0 
	add	%al,(%rax)	# 42B42A 0 0 
	add	%al,(%rax)	# 42B42C 0 0 
	add	%al,(%rax)	# 42B42E 0 0 
	add	%al,(%rax)	# 42B430 0 0 
	add	%al,(%rax)	# 42B432 0 0 
	add	%al,(%rax)	# 42B434 0 0 
	add	%al,(%rax)	# 42B436 0 0 
	add	%al,(%rax)	# 42B438 0 0 
	add	%al,(%rax)	# 42B43A 0 0 
	add	%al,(%rax)	# 42B43C 0 0 
	add	%al,(%rax)	# 42B43E 0 0 
	add	%al,(%rax)	# 42B440 0 0 
	add	%ch,%al	# 42B442 0 E8 
	mov	$0x20FFFFFC,%edx	# 42B444 BA FC FF FF 20 
	mov	$0x42,%ah	# 42B449 B4 42 
	add	%al,(%rax)	# 42B44B 0 0 
	add	%al,(%rax)	# 42B44D 0 0 
	add	%al,(%rax)	# 42B44F 0 0 
	add	%al,(%rax)	# 42B451 0 0 
_5F:
	call	 ( FLTABLE+F  ) 	# 42B453 E8 3 FD FF FF 
	and	%dh,0x0(%rdx,%rax,2)	# 42B458 20 B4 42 0 0 0 0 
	add	%al,(%rax)	# 42B45F 0 0 
//:::L  6: 6B 6F

	add	%al,(%rax)	# 42B461 0 0 
_6dcoma:
	call	 ( :LTABLE+5D  ) 	# 42B463 E8 46 FC FF FF 
	add	%al,(%rax)	# 42B468 0 0 
	add	%al,(%rax)	# 42B46A 0 0 
	add	%al,(%rax)	# 42B46C 0 0 
	add	%al,(%rax)	# 42B46E 0 0 
	add	%al,(%rax)	# 42B470 0 0 
	add	%al,(%rax)	# 42B472 0 0 
	add	%al,(%rax)	# 42B474 0 0 
	add	%al,(%rax)	# 42B476 0 0 
	add	%al,(%rax)	# 42B478 0 0 
	add	%al,(%rax)	# 42B47A 0 0 
	add	%al,(%rax)	# 42B47C 0 0 
	add	%al,(%rax)	# 42B47E 0 0 
	add	%al,(%rax)	# 42B480 0 0 
	add	%al,(%rax)	# 42B482 0 0 
	add	%al,(%rax)	# 42B484 0 0 
	add	%al,(%rax)	# 42B486 0 0 
	add	%al,(%rax)	# 42B488 0 0 
	add	%ch,%al	# 42B48A 0 E8 
	jb	 ( 6:+27  ) 	# 42B48C 72 FC 
	g4??	%edi	# 42B48E FF FF 
	push	$0x42B4	# 42B490 68 B4 42 0 0 
	add	%al,(%rax)	# 42B495 0 0 
	add	%al,(%rax)	# 42B497 0 0 
	add	%al,(%rax)	# 42B499 0 0 
_6F:
	call	 ( FLTABLE+F  ) 	# 42B49B E8 BB FC FF FF 
	push	$0x42B4	# 42B4A0 68 B4 42 0 0 
	add	%al,(%rax)	# 42B4A5 0 0 
	add	%al,(%rax)	# 42B4A7 0 0 
//:::L  7: 7B 7F

	add	%al,(%rax)	# 42B4A9 0 0 
_7dcoma:
	call	 ( :LTABLE+5D  ) 	# 42B4AB E8 FE FB FF FF 
	add	%al,(%rax)	# 42B4B0 0 0 
	add	%al,(%rax)	# 42B4B2 0 0 
	add	%al,(%rax)	# 42B4B4 0 0 
	add	%al,(%rax)	# 42B4B6 0 0 
	add	%al,(%rax)	# 42B4B8 0 0 
	add	%al,(%rax)	# 42B4BA 0 0 
	add	%al,(%rax)	# 42B4BC 0 0 
	add	%al,(%rax)	# 42B4BE 0 0 
	add	%al,(%rax)	# 42B4C0 0 0 
	add	%al,(%rax)	# 42B4C2 0 0 
	add	%al,(%rax)	# 42B4C4 0 0 
	add	%al,(%rax)	# 42B4C6 0 0 
	add	%al,(%rax)	# 42B4C8 0 0 
	add	%al,(%rax)	# 42B4CA 0 0 
	add	%al,(%rax)	# 42B4CC 0 0 
	add	%al,(%rax)	# 42B4CE 0 0 
	add	%al,(%rax)	# 42B4D0 0 0 
	add	%ch,%al	# 42B4D2 0 E8 
	sub	%ah,%bh	# 42B4D4 2A FC 
	g4??	%edi	# 42B4D6 FF FF 
	mov	$-0x4C,%al	# 42B4D8 B0 B4 
	add	%al,(%rax)	# 42B4DA 42 0 0 
	add	%al,(%rax)	# 42B4DD 0 0 
	add	%al,(%rax)	# 42B4DF 0 0 
	add	%al,(%rax)	# 42B4E1 0 0 
_7F:
	call	 ( FLTABLE+F  ) 	# 42B4E3 E8 73 FC FF FF 
	mov	$-0x4C,%al	# 42B4E8 B0 B4 
	add	%al,(%rax)	# 42B4EA 42 0 0 
	add	%al,(%rax)	# 42B4ED 0 0 
	add	%al,(%rax)	# 42B4EF 0 0 
//:::L  8: 8B 8F

	add	%al,(%rax)	# 42B4F1 0 0 
_8dcoma:
	call	 ( :LTABLE+5D  ) 	# 42B4F3 E8 B6 FB FF FF 
	add	%al,(%rax)	# 42B4F8 0 0 
	add	%al,(%rax)	# 42B4FA 0 0 
	add	%al,(%rax)	# 42B4FC 0 0 
	add	%al,(%rax)	# 42B4FE 0 0 
	add	%al,(%rax)	# 42B500 0 0 
	add	%al,(%rax)	# 42B502 0 0 
	add	%al,(%rax)	# 42B504 0 0 
	add	%al,(%rax)	# 42B506 0 0 
	add	%al,(%rax)	# 42B508 0 0 
	add	%al,(%rax)	# 42B50A 0 0 
	add	%al,(%rax)	# 42B50C 0 0 
	add	%al,(%rax)	# 42B50E 0 0 
	add	%al,(%rax)	# 42B510 0 0 
	add	%al,(%rax)	# 42B512 0 0 
	add	%al,(%rax)	# 42B514 0 0 
	add	%al,(%rax)	# 42B516 0 0 
	add	%al,(%rax)	# 42B518 0 0 
	add	%ch,%al	# 42B51A 0 E8 
	loop	 ( 8:+26  ) 	# 42B51C E2 FB 
	g4??	%edi	# 42B51E FF FF 
clC	# 42B520 F8 
	mov	$0x42,%ah	# 42B521 B4 42 
	add	%al,(%rax)	# 42B523 0 0 
	add	%al,(%rax)	# 42B525 0 0 
	add	%al,(%rax)	# 42B527 0 0 
	add	%al,(%rax)	# 42B529 0 0 
_8F:
	call	 ( FLTABLE+F  ) 	# 42B52B E8 2B FC FF FF 
clC	# 42B530 F8 
	mov	$0x42,%ah	# 42B531 B4 42 
	add	%al,(%rax)	# 42B533 0 0 
	add	%al,(%rax)	# 42B535 0 0 
	add	%al,(%rax)	# 42B537 0 0 
//:::L  9: 9B 9F

	add	%al,(%rax)	# 42B539 0 0 
_9dcoma:
	call	 ( :LTABLE+5D  ) 	# 42B53B E8 6E FB FF FF 
	add	%al,(%rax)	# 42B540 0 0 
	add	%al,(%rax)	# 42B542 0 0 
	add	%al,(%rax)	# 42B544 0 0 
	add	%al,(%rax)	# 42B546 0 0 
	add	%al,(%rax)	# 42B548 0 0 
	add	%al,(%rax)	# 42B54A 0 0 
	add	%al,(%rax)	# 42B54C 0 0 
	add	%al,(%rax)	# 42B54E 0 0 
	add	%al,(%rax)	# 42B550 0 0 
	add	%al,(%rax)	# 42B552 0 0 
	add	%al,(%rax)	# 42B554 0 0 
	add	%al,(%rax)	# 42B556 0 0 
	add	%al,(%rax)	# 42B558 0 0 
	add	%al,(%rax)	# 42B55A 0 0 
	add	%al,(%rax)	# 42B55C 0 0 
	add	%al,(%rax)	# 42B55E 0 0 
	add	%al,(%rax)	# 42B560 0 0 
	add	%ch,%al	# 42B562 0 E8 
	.byte	0x9A	# 42B564 9A 
stI	# 42B565 FB 
	g4??	%edi	# 42B566 FF FF 
	mov	$0x42,%bpl	# 42B568 40 B5 42 
	add	%al,(%rax)	# 42B56B 0 0 
	add	%al,(%rax)	# 42B56D 0 0 
	add	%al,(%rax)	# 42B56F 0 0 
	add	%al,(%rax)	# 42B571 0 0 
_9F:
	call	 ( FLTABLE+F  ) 	# 42B573 E8 E3 FB FF FF 
	mov	$0x42,%bpl	# 42B578 40 B5 42 
	add	%al,(%rax)	# 42B57B 0 0 
	add	%al,(%rax)	# 42B57D 0 0 
	add	%ch,%al	# 42B57F 0 E8 
//

//0 VALUE PARM_HESH

	lea	0xFFFD(%rbx),%edx	# 42B581 8D 93 FD FF 0 0 
	add	%al,(%rax)	# 42B587 0 0 
	add	%al,(%rax)	# 42B589 0 0 
	add	%al,(%rax)	# 42B58B 0 0 
//

//: >PARM_HESH

//  PARM_HESH 2 << + TO PARM_HESH

greatPARM_HESH:
	mov	%rax,-0x08(%rbp)	# 42B58D 48 89 45 F8 
	mov	 ( PARM_HESH+5  ) (%rip),%rax	# 42B591 48 8B 5 ED FF FF FF 
	shl	$0x02,%rax	# 42B598 48 C1 E0 2 
	add	-0x08(%rbp),%rax	# 42B59C 48 3 45 F8 
	mov	%rax, ( PARM_HESH+5  ) (%rip)	# 42B5A0 48 89 5 DE FF FF FF 
	mov	0x00(%rbp),%rax	# 42B5A7 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42B5AB 48 8D 6D 8 
//;

	ret		# 42B5AF C3 
//

//: PH: CREATE DUP , 1+ DOES> @ >PARM_HESH ;

PHdcoma:
	call	 ( CREATE ) 	# 42B5B0 E8 EB 3B FE FF 
	mov	%rax,-0x08(%rbp)	# 42B5B5 48 89 45 F8 
	lea	-0x08(%rbp),%rbp	# 42B5B9 48 8D 6D F8 
	call	 ( , ) 	# 42B5BD E8 58 99 FD FF 
	lea	0x01(%rax),%rax	# 42B5C2 48 8D 40 1 
	call	 ( (DOES>) ) 	# 42B5C6 E8 BC 3C FE FF 
	mov	%rax,-0x08(%rbp)	# 42B5CB 48 89 45 F8 
	pop	%rax	# 42B5CF 58 
	mov	(%rax),%rax	# 42B5D0 48 8B 0 
	lea	-0x08(%rbp),%rbp	# 42B5D3 48 8D 6D F8 
	call	 ( >PARM_HESH ) 	# 42B5D7 E8 B1 FF FF FF 
	ret		# 42B5DC C3 
//1 

//PH: %r_x 

	add	%al,(%rax)	# 42B5DD 0 0 
	add	%al,(%rax)	# 42B5DF 0 0 
	add	%al,(%rax)	# 42B5E1 0 0 
%r_x:
	call	 ( PH:+1B  ) 	# 42B5E3 E8 E3 FF FF FF 
	add	%eax,(%rax)	# 42B5E8 1 0 
	add	%al,(%rax)	# 42B5EA 0 0 
	add	%al,(%rax)	# 42B5EC 0 0 
	add	%al,(%rax)	# 42B5EE 0 0 
//PH: $$   

	add	%al,(%rax)	# 42B5F0 0 0 
	add	%ch,%al	# 42B5F2 0 E8 
	sar	%cl,%edi	# 42B5F4 D3 FF 
	g4??	%edi	# 42B5F6 FF FF 
	add	(%rax),%al	# 42B5F8 2 0 
	add	%al,(%rax)	# 42B5FA 0 0 
	add	%al,(%rax)	# 42B5FC 0 0 
	add	%al,(%rax)	# 42B5FE 0 0 
//PH: X((

	add	%al,(%rax)	# 42B600 0 0 
	add	%ch,%al	# 42B602 0 E8 
	ret		# 42B604 C3 
	g4??	%edi	# 42B605 FF FF 
	inc	(%rbx)	# 42B607 FF 3 
	add	%al,(%rax)	# 42B609 0 0 
	add	%al,(%rax)	# 42B60B 0 0 
	add	%al,(%rax)	# 42B60D 0 0 
	add	%al,(%rax)	# 42B60F 0 0 
//PH: _))

	add	%al,(%rax)	# 42B611 0 0 
_cendcend:
	call	 ( PH:+1B  ) 	# 42B613 E8 B3 FF FF FF 
	add	$0x00,%al	# 42B618 4 0 
	add	%al,(%rax)	# 42B61A 0 0 
	add	%al,(%rax)	# 42B61C 0 0 
	add	%al,(%rax)	# 42B61E 0 0 
//PH: %rip

	add	%al,(%rax)	# 42B620 0 0 
	add	%ch,%al	# 42B622 0 E8 
	movabs	%eax, ( _STEKC+5AEA78F  ) 	# 42B624 A3 FF FF FF 5 0 0 0 0 
	add	%al,(%rax)	# 42B62D 0 0 
	add	%ch,%al	# 42B62F 0 E8 
//DROP

//

//0 VALUE ((OFFSET

	.byte	0xDD	# 42B631 DD 
	xchg	%edx,%eax	# 42B632 92 
stD	# 42B633 FD 
	inc	(%rax)	# 42B634 FF 0 
	add	%al,(%rax)	# 42B636 0 0 
	add	%al,(%rax)	# 42B638 0 0 
	add	%al,(%rax)	# 42B63A 0 0 
	add	%ch,%al	# 42B63C 0 E8 
//0 VALUE #((

	rcl	$1,0xFFFD(%rdx)	# 42B63E D0 92 FD FF 0 0 
	add	%al,(%rax)	# 42B644 0 0 
	add	%al,(%rax)	# 42B646 0 0 
	add	%al,(%rax)	# 42B648 0 0 
//0 VALUE REX.RBX

REXdotRBX:
	call	 ( DOVALUE ) 	# 42B64A E8 C3 92 FD FF 
	add	%al,(%rax)	# 42B64F 0 0 
	add	%al,(%rax)	# 42B651 0 0 
	add	%al,(%rax)	# 42B653 0 0 
	add	%al,(%rax)	# 42B655 0 0 
//0 VALUE REX_W

REX_W:
	call	 ( DOVALUE ) 	# 42B657 E8 B6 92 FD FF 
	add	%al,(%rax)	# 42B65C 0 0 
	add	%al,(%rax)	# 42B65E 0 0 
	add	%al,(%rax)	# 42B660 0 0 
	add	%al,(%rax)	# 42B662 0 0 
//1 VALUE REG>8

REGgreat8:
	call	 ( DOVALUE ) 	# 42B664 E8 A9 92 FD FF 
	add	%eax,(%rax)	# 42B669 1 0 
	add	%al,(%rax)	# 42B66B 0 0 
	add	%al,(%rax)	# 42B66D 0 0 
	add	%al,(%rax)	# 42B66F 0 0 
//0 VALUE OSIZE

OSIZE:
	call	 ( DOVALUE ) 	# 42B671 E8 9C 92 FD FF 
	add	%al,(%rax)	# 42B676 0 0 
	add	%al,(%rax)	# 42B678 0 0 
	add	%al,(%rax)	# 42B67A 0 0 
	add	%al,(%rax)	# 42B67C 0 0 
//

//0 VALUE R_DEPTH

R_DEPTH:
	call	 ( DOVALUE ) 	# 42B67E E8 8F 92 FD FF 
	add	%al,(%rax)	# 42B683 0 0 
	add	%al,(%rax)	# 42B685 0 0 
	add	%al,(%rax)	# 42B687 0 0 
	add	%al,(%rax)	# 42B689 0 0 
//1 VALUE >>))

greatgreatcendcend:
	call	 ( DOVALUE ) 	# 42B68B E8 82 92 FD FF 
	add	%eax,(%rax)	# 42B690 1 0 
	add	%al,(%rax)	# 42B692 0 0 
	add	%al,(%rax)	# 42B694 0 0 
	add	%al,(%rax)	# 42B696 0 0 
//

//: REX@

// REX.RBX

REXload:
	mov	%rax,-0x08(%rbp)	# 42B698 48 89 45 F8 
	mov	 ( REX.RBX+5  ) (%rip),%rax	# 42B69C 48 8B 5 AC FF FF FF 
	or	 ( REX_W+5  ) (%rip),%rax	# 42B6A3 48 B 5 B2 FF FF FF 
// REX_W  OR ;

	lea	-0x08(%rbp),%rbp	# 42B6AA 48 8D 6D F8 
	ret		# 42B6AE C3 
//

//CREATE <<BUF

	or	-0x10(%rbp),%eax	# 42B6AF B 45 F0 
	add	%ch,%al	# 42B6B2 0 E8 
	push	$0xFFFD92	# 42B6B4 68 92 FD FF 0 
//   0 C, $40 C, -1 C, $80 C,

	inc	-0x3F000001(%rax)	# 42B6B9 40 FF 80 FF FF FF C0 
//  -1 C, -1 C, -1 C, $C0 C,

//

//: ((  ( n -- )  TO ((OFFSET X(( 1 TO #(( ;

cbigcbig:
	mov	%rax, ( ((OFFSET+5  ) (%rip)	# 42B6C0 48 89 5 6E FF FF FF 
	mov	0x00(%rbp),%rax	# 42B6C7 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42B6CB 48 8D 6D 8 
	call	 ( X(( ) 	# 42B6CF E8 2F FF FF FF 
	movq	$0x1, ( #((+5  ) (%rip)	# 42B6D4 48 C7 5 63 FF FF FF 1 0 0 0 
	ret		# 42B6DF C3 
//: |)) _)) 0 TO #(( ;

lcendcend:
	call	 ( _)) ) 	# 42B6E0 E8 2E FF FF FF 
	movq	$0x0, ( #((+5  ) (%rip)	# 42B6E5 48 C7 5 52 FF FF FF 0 0 0 0 
	ret		# 42B6F0 C3 
//: ))  ( n -- )  DEPTH R_DEPTH

cendcend:
	call	 ( DEPTH ) 	# 42B6F1 E8 B0 99 FD FF 
	xor	 ( R_DEPTH+5  ) (%rip),%rax	# 42B6F6 48 33 5 86 FF FF FF 
	sub	$0x01,%rax	# 42B6FD 48 83 E8 1 
	sbb	%rax,%rax	# 42B701 48 19 C0 
	test	%rax,%rax	# 42B704 48 85 C0 
//\ CR ." ))11 " .S KEY DROP

// = IF 1 THEN 1-

	mov	0x00(%rbp),%rax	# 42B707 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42B70B 48 8D 6D 8 
	jz	 ( ))+31  ) 	# 42B70F F 84 D 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42B715 48 89 45 F8 
	mov	$0x1,%eax	# 42B719 B8 1 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42B71E 48 8D 6D F8 
	lea	-0x01(%rax),%rax	# 42B722 48 8D 40 FF 
// DUP 7 ANDC IF -333 THROW THEN

	mov	%rax,-0x08(%rbp)	# 42B726 48 89 45 F8 
	and	$-0x08,%rax	# 42B72A 48 83 E0 F8 
	mov	-0x08(%rbp),%rax	# 42B72E 48 8B 45 F8 
	jz	 ( ))+5B  ) 	# 42B732 F 84 14 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42B738 48 89 45 F8 
	movq	$-0x14D,%rax	# 42B73C 48 C7 C0 B3 FE FF FF 
	lea	-0x08(%rbp),%rbp	# 42B743 48 8D 6D F8 
	call	 ( THROW ) 	# 42B747 E8 68 9E FD FF 
//\ CR ." ))22 " .S KEY DROP

// <<BUF + C@

	mov	%rax,-0x08(%rbp)	# 42B74C 48 89 45 F8 
	lea	 ( <<BUF+5  ) (%rip),%rax	# 42B750 48 8D 5 61 FF FF FF 
	add	-0x08(%rbp),%rax	# 42B757 48 3 45 F8 
	movzb	(%rax),%eax	# 42B75B F B6 0 
// DUP 0< IF -333 THROW THEN

	test	%rax,%rax	# 42B75E 48 85 C0 
	jNl	 ( ))+8A  ) 	# 42B761 F 8D 14 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42B767 48 89 45 F8 
	movq	$-0x14D,%rax	# 42B76B 48 C7 C0 B3 FE FF FF 
	lea	-0x08(%rbp),%rbp	# 42B772 48 8D 6D F8 
	call	 ( THROW ) 	# 42B776 E8 39 9E FD FF 
//\ CR ." ))33 " .S KEY DROP

// TO >>))  |))

	mov	%rax, ( >>))+5  ) (%rip)	# 42B77B 48 89 5 E FF FF FF 
	mov	0x00(%rbp),%rax	# 42B782 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42B786 48 8D 6D 8 
	call	 ( |)) ) 	# 42B78A E8 51 FF FF FF 
//\ abort

// ;

	ret		# 42B78F C3 
// 

//: %_l: CREATE DUP   , 1+ DOES> @ %r_x REX.RBX 2*	TO REX.RBX 0 TO REG>8 ;

%_ldcoma:
	call	 ( CREATE ) 	# 42B790 E8 B 3A FE FF 
	mov	%rax,-0x08(%rbp)	# 42B795 48 89 45 F8 
	lea	-0x08(%rbp),%rbp	# 42B799 48 8D 6D F8 
	call	 ( , ) 	# 42B79D E8 78 97 FD FF 
	lea	0x01(%rax),%rax	# 42B7A2 48 8D 40 1 
	call	 ( (DOES>) ) 	# 42B7A6 E8 DC 3A FE FF 
	mov	%rax,-0x08(%rbp)	# 42B7AB 48 89 45 F8 
	pop	%rax	# 42B7AF 58 
	mov	(%rax),%rax	# 42B7B0 48 8B 0 
	lea	-0x08(%rbp),%rbp	# 42B7B3 48 8D 6D F8 
	call	 ( %r_x ) 	# 42B7B7 E8 27 FE FF FF 
	mov	%rax,-0x08(%rbp)	# 42B7BC 48 89 45 F8 
	mov	 ( REX.RBX+5  ) (%rip),%rax	# 42B7C0 48 8B 5 88 FE FF FF 
	lea	(%rax,%rax,1),%rax	# 42B7C7 48 8D 4 0 
	mov	%rax, ( REX.RBX+5  ) (%rip)	# 42B7CB 48 89 5 7D FE FF FF 
	movq	$0x0, ( REG>8+5  ) (%rip)	# 42B7D2 48 C7 5 8C FE FF FF 0 0 0 0 
	mov	-0x08(%rbp),%rax	# 42B7DD 48 8B 45 F8 
	ret		# 42B7E1 C3 
//: %_x: CREATE DUP   , 1+ DOES> @ %r_x REX.RBX 2*	TO REX.RBX 1 TO OSIZE ;

%_xdcoma:
	call	 ( CREATE ) 	# 42B7E2 E8 B9 39 FE FF 
	mov	%rax,-0x08(%rbp)	# 42B7E7 48 89 45 F8 
	lea	-0x08(%rbp),%rbp	# 42B7EB 48 8D 6D F8 
	call	 ( , ) 	# 42B7EF E8 26 97 FD FF 
	lea	0x01(%rax),%rax	# 42B7F4 48 8D 40 1 
	call	 ( (DOES>) ) 	# 42B7F8 E8 8A 3A FE FF 
	mov	%rax,-0x08(%rbp)	# 42B7FD 48 89 45 F8 
	pop	%rax	# 42B801 58 
	mov	(%rax),%rax	# 42B802 48 8B 0 
	lea	-0x08(%rbp),%rbp	# 42B805 48 8D 6D F8 
	call	 ( %r_x ) 	# 42B809 E8 D5 FD FF FF 
	mov	%rax,-0x08(%rbp)	# 42B80E 48 89 45 F8 
	mov	 ( REX.RBX+5  ) (%rip),%rax	# 42B812 48 8B 5 36 FE FF FF 
	lea	(%rax,%rax,1),%rax	# 42B819 48 8D 4 0 
	mov	%rax, ( REX.RBX+5  ) (%rip)	# 42B81D 48 89 5 2B FE FF FF 
	movq	$0x1, ( OSIZE+5  ) (%rip)	# 42B824 48 C7 5 47 FE FF FF 1 0 0 0 
	mov	-0x08(%rbp),%rax	# 42B82F 48 8B 45 F8 
	ret		# 42B833 C3 
//: %r8b: %_l: DOES> @ %r_x REX.RBX 2* 1+ TO REX.RBX ;

%r8bdcoma:
	call	 ( %_l: ) 	# 42B834 E8 57 FF FF FF 
	call	 ( (DOES>) ) 	# 42B839 E8 49 3A FE FF 
	mov	%rax,-0x08(%rbp)	# 42B83E 48 89 45 F8 
	pop	%rax	# 42B842 58 
	mov	(%rax),%rax	# 42B843 48 8B 0 
	lea	-0x08(%rbp),%rbp	# 42B846 48 8D 6D F8 
	call	 ( %r_x ) 	# 42B84A E8 94 FD FF FF 
	mov	%rax,-0x08(%rbp)	# 42B84F 48 89 45 F8 
	mov	 ( REX.RBX+5  ) (%rip),%rax	# 42B853 48 8B 5 F5 FD FF FF 
	lea	(%rax,%rax,1),%rax	# 42B85A 48 8D 4 0 
	lea	0x01(%rax),%rax	# 42B85E 48 8D 40 1 
	mov	%rax, ( REX.RBX+5  ) (%rip)	# 42B862 48 89 5 E6 FD FF FF 
	mov	-0x08(%rbp),%rax	# 42B869 48 8B 45 F8 
	ret		# 42B86D C3 
//

//: %e_x: %_l: DOES> @ %r_x REX.RBX 2*    TO REX.RBX 1 TO REG>8 ;

%e_xdcoma:
	call	 ( %_l: ) 	# 42B86E E8 1D FF FF FF 
	call	 ( (DOES>) ) 	# 42B873 E8 F 3A FE FF 
	mov	%rax,-0x08(%rbp)	# 42B878 48 89 45 F8 
	pop	%rax	# 42B87C 58 
	mov	(%rax),%rax	# 42B87D 48 8B 0 
	lea	-0x08(%rbp),%rbp	# 42B880 48 8D 6D F8 
	call	 ( %r_x ) 	# 42B884 E8 5A FD FF FF 
	mov	%rax,-0x08(%rbp)	# 42B889 48 89 45 F8 
	mov	 ( REX.RBX+5  ) (%rip),%rax	# 42B88D 48 8B 5 BB FD FF FF 
	lea	(%rax,%rax,1),%rax	# 42B894 48 8D 4 0 
	mov	%rax, ( REX.RBX+5  ) (%rip)	# 42B898 48 89 5 B0 FD FF FF 
	movq	$0x1, ( REG>8+5  ) (%rip)	# 42B89F 48 C7 5 BF FD FF FF 1 0 0 0 
	mov	-0x08(%rbp),%rax	# 42B8AA 48 8B 45 F8 
	ret		# 42B8AE C3 
//: %r8d: %_l: DOES> @ %r_x REX.RBX 2* 1+ TO REX.RBX 1 TO REG>8 ;

%r8ddcoma:
	call	 ( %_l: ) 	# 42B8AF E8 DC FE FF FF 
	call	 ( (DOES>) ) 	# 42B8B4 E8 CE 39 FE FF 
	mov	%rax,-0x08(%rbp)	# 42B8B9 48 89 45 F8 
	pop	%rax	# 42B8BD 58 
	mov	(%rax),%rax	# 42B8BE 48 8B 0 
	lea	-0x08(%rbp),%rbp	# 42B8C1 48 8D 6D F8 
	call	 ( %r_x ) 	# 42B8C5 E8 19 FD FF FF 
	mov	%rax,-0x08(%rbp)	# 42B8CA 48 89 45 F8 
	mov	 ( REX.RBX+5  ) (%rip),%rax	# 42B8CE 48 8B 5 7A FD FF FF 
	lea	(%rax,%rax,1),%rax	# 42B8D5 48 8D 4 0 
	lea	0x01(%rax),%rax	# 42B8D9 48 8D 40 1 
	mov	%rax, ( REX.RBX+5  ) (%rip)	# 42B8DD 48 89 5 6B FD FF FF 
	movq	$0x1, ( REG>8+5  ) (%rip)	# 42B8E4 48 C7 5 7A FD FF FF 1 0 0 0 
	mov	-0x08(%rbp),%rax	# 42B8EF 48 8B 45 F8 
	ret		# 42B8F3 C3 
//

//: %r_x: %_l: DOES> @ %r_x REX.RBX 2*    TO REX.RBX  #(( IF DEPTH TO R_DEPTH BREAK $8 TO REX_W 1 TO REG>8 ;

%r_xdcoma:
	call	 ( %_l: ) 	# 42B8F4 E8 97 FE FF FF 
	call	 ( (DOES>) ) 	# 42B8F9 E8 89 39 FE FF 
	mov	%rax,-0x08(%rbp)	# 42B8FE 48 89 45 F8 
	pop	%rax	# 42B902 58 
	mov	(%rax),%rax	# 42B903 48 8B 0 
	lea	-0x08(%rbp),%rbp	# 42B906 48 8D 6D F8 
	call	 ( %r_x ) 	# 42B90A E8 D4 FC FF FF 
	mov	%rax,-0x08(%rbp)	# 42B90F 48 89 45 F8 
	mov	 ( REX.RBX+5  ) (%rip),%rax	# 42B913 48 8B 5 35 FD FF FF 
	lea	(%rax,%rax,1),%rax	# 42B91A 48 8D 4 0 
	mov	%rax, ( REX.RBX+5  ) (%rip)	# 42B91E 48 89 5 2A FD FF FF 
	mov	 ( #((+5  ) (%rip),%rax	# 42B925 48 8B 5 16 FD FF FF 
	test	%rax,%rax	# 42B92C 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42B92F 48 8B 45 F8 
	jz	 ( %r_x:+5A  ) 	# 42B933 F 84 15 0 0 0 
	call	 ( DEPTH ) 	# 42B939 E8 68 97 FD FF 
	mov	%rax, ( R_DEPTH+5  ) (%rip)	# 42B93E 48 89 5 3E FD FF FF 
	mov	0x00(%rbp),%rax	# 42B945 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42B949 48 8D 6D 8 
	ret		# 42B94D C3 
	movq	$0x8, ( REX_W+5  ) (%rip)	# 42B94E 48 C7 5 3 FD FF FF 8 0 0 0 
	movq	$0x1, ( REG>8+5  ) (%rip)	# 42B959 48 C7 5 5 FD FF FF 1 0 0 0 
	ret		# 42B964 C3 
//: %r_n: %_l: DOES> @ %r_x REX.RBX 2* 1+

%r_ndcoma:
	call	 ( %_l: ) 	# 42B965 E8 26 FE FF FF 
	call	 ( (DOES>) ) 	# 42B96A E8 18 39 FE FF 
	mov	%rax,-0x08(%rbp)	# 42B96F 48 89 45 F8 
	pop	%rax	# 42B973 58 
	mov	(%rax),%rax	# 42B974 48 8B 0 
	lea	-0x08(%rbp),%rbp	# 42B977 48 8D 6D F8 
	call	 ( %r_x ) 	# 42B97B E8 63 FC FF FF 
	mov	%rax,-0x08(%rbp)	# 42B980 48 89 45 F8 
	mov	 ( REX.RBX+5  ) (%rip),%rax	# 42B984 48 8B 5 C4 FC FF FF 
	lea	(%rax,%rax,1),%rax	# 42B98B 48 8D 4 0 
	lea	0x01(%rax),%rax	# 42B98F 48 8D 40 1 
	mov	%rax, ( REX.RBX+5  ) (%rip)	# 42B993 48 89 5 B5 FC FF FF 
//\  CR ." %r_n=" .S KEY DROP

// TO REX.RBX  #(( IF DEPTH TO R_DEPTH BREAK $8 TO REX_W 1 TO REG>8 ;

	mov	 ( #((+5  ) (%rip),%rax	# 42B99A 48 8B 5 A1 FC FF FF 
	test	%rax,%rax	# 42B9A1 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42B9A4 48 8B 45 F8 
	jz	 ( %r_n:+5E  ) 	# 42B9A8 F 84 15 0 0 0 
	call	 ( DEPTH ) 	# 42B9AE E8 F3 96 FD FF 
	mov	%rax, ( R_DEPTH+5  ) (%rip)	# 42B9B3 48 89 5 C9 FC FF FF 
	mov	0x00(%rbp),%rax	# 42B9BA 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42B9BE 48 8D 6D 8 
	ret		# 42B9C2 C3 
	movq	$0x8, ( REX_W+5  ) (%rip)	# 42B9C3 48 C7 5 8E FC FF FF 8 0 0 0 
	movq	$0x1, ( REG>8+5  ) (%rip)	# 42B9CE 48 C7 5 90 FC FF FF 1 0 0 0 
	ret		# 42B9D9 C3 
//

//0

//%_l: %al %_l: %cl %_l: %dl %_l: %bl %_l: %ah %_l: %ch %_l: %dh %_l: %bh

	add	%ch,%al	# 42B9DA 0 E8 
	lret		# 42B9DC CB 
stD	# 42B9DD FD 
	g4??	%edi	# 42B9DE FF FF 
	add	%al,(%rax)	# 42B9E0 0 0 
	add	%al,(%rax)	# 42B9E2 0 0 
	add	%al,(%rax)	# 42B9E4 0 0 
	add	%al,(%rax)	# 42B9E6 0 0 
	mov	-0x08(%rbp),%eax	# 42B9E8 8B 45 F8 
%cl:
	call	 ( %_l:+1B  ) 	# 42B9EB E8 BB FD FF FF 
	add	%eax,(%rax)	# 42B9F0 1 0 
	add	%al,(%rax)	# 42B9F2 0 0 
	add	%al,(%rax)	# 42B9F4 0 0 
	add	%al,(%rax)	# 42B9F6 0 0 
	add	%al,(%rax)	# 42B9F8 0 0 
	add	%ch,%al	# 42B9FA 0 E8 
	stos	%eax,%es:(%rdi)		# 42B9FC AB 
stD	# 42B9FD FD 
	g4??	%edi	# 42B9FE FF FF 
	add	(%rax),%al	# 42BA00 2 0 
	add	%al,(%rax)	# 42BA02 0 0 
	add	%al,(%rax)	# 42BA04 0 0 
	add	%al,(%rax)	# 42BA06 0 0 
	add	%al,(%rax)	# 42BA08 0 0 
	add	%ch,%al	# 42BA0A 0 E8 
	wait		# 42BA0C 9B 
stD	# 42BA0D FD 
	g4??	%edi	# 42BA0E FF FF 
	add	(%rax),%eax	# 42BA10 3 0 
	add	%al,(%rax)	# 42BA12 0 0 
	add	%al,(%rax)	# 42BA14 0 0 
	add	%al,(%rax)	# 42BA16 0 0 
	add	%al,(%rax)	# 42BA18 0 0 
	add	%ch,%al	# 42BA1A 0 E8 
	mov	%ebp,%edi	# 42BA1C 8B FD 
	g4??	%edi	# 42BA1E FF FF 
	add	$0x00,%al	# 42BA20 4 0 
	add	%al,(%rax)	# 42BA22 0 0 
	add	%al,(%rax)	# 42BA24 0 0 
	add	%al,(%rax)	# 42BA26 0 0 
	add	%al,(%rax)	# 42BA28 0 0 
	add	%ch,%al	# 42BA2A 0 E8 
	jNp	 ( %ch ) 	# 42BA2C 7B FD 
	g4??	%edi	# 42BA2E FF FF 
	add	$0x0,%eax	# 42BA30 5 0 0 0 0 
	add	%al,(%rax)	# 42BA35 0 0 
	add	%al,(%rax)	# 42BA37 0 0 
	add	%al,(%rax)	# 42BA39 0 0 
%dh:
	call	 ( %_l:+1B  ) 	# 42BA3B E8 6B FD FF FF 
	add	$0x00,%al	# 42BA40 6 0 
	add	%al,(%rax)	# 42BA42 0 0 
	add	%al,(%rax)	# 42BA44 0 0 
	add	%al,(%rax)	# 42BA46 0 0 
	add	%al,(%rax)	# 42BA48 0 0 
	add	%ch,%al	# 42BA4A 0 E8 
	pop	%rbx	# 42BA4C 5B 
stD	# 42BA4D FD 
	g4??	%edi	# 42BA4E FF FF 
	add	$0x0,%eax	# 42BA50 7 0 0 0 0 
	add	%al,(%rax)	# 42BA55 0 0 
	add	%al,(%rax)	# 42BA57 0 0 
//DROP

//

//0

//%r_x: %rax %r_x: %rcx %r_x: %rdx %r_x: %rbx %r_x: %rsp %r_x: %rbp %r_x: %rsi %r_x: %rdi

	add	%al,(%rax)	# 42BA59 0 0 
%rax:
	call	 ( %r_x:+A  ) 	# 42BA5B E8 9E FE FF FF 
	add	%al,(%rax)	# 42BA60 0 0 
	add	%al,(%rax)	# 42BA62 0 0 
	add	%al,(%rax)	# 42BA64 0 0 
	add	%al,(%rax)	# 42BA66 0 0 
	add	%al,(%rax)	# 42BA68 0 0 
	add	%ch,%al	# 42BA6A 0 E8 
	mov	%esi,%A 	# 42BA6C 8E FE 
	g4??	%edi	# 42BA6E FF FF 
	add	%eax,(%rax)	# 42BA70 1 0 
	add	%al,(%rax)	# 42BA72 0 0 
	add	%al,(%rax)	# 42BA74 0 0 
	add	%al,(%rax)	# 42BA76 0 0 
	add	%al,(%rax)	# 42BA78 0 0 
	add	%ch,%al	# 42BA7A 0 E8 
	jle	 ( %rdx+1  ) 	# 42BA7C 7E FE 
	g4??	%edi	# 42BA7E FF FF 
	add	(%rax),%al	# 42BA80 2 0 
	add	%al,(%rax)	# 42BA82 0 0 
	add	%al,(%rax)	# 42BA84 0 0 
	add	%al,(%rax)	# 42BA86 0 0 
	add	%al,(%rax)	# 42BA88 0 0 
	add	%ch,%al	# 42BA8A 0 E8 
	outsb	%ds:(%rsi),(%dx)		# 42BA8C 6E 
	g4??	%bh	# 42BA8D FE FF 
	inc	(%rbx)	# 42BA8F FF 3 
	add	%al,(%rax)	# 42BA91 0 0 
	add	%al,(%rax)	# 42BA93 0 0 
	add	%al,(%rax)	# 42BA95 0 0 
	add	%al,(%rax)	# 42BA97 0 0 
	add	%al,(%rax)	# 42BA99 0 0 
%rsp:
	call	 ( %r_x:+A  ) 	# 42BA9B E8 5E FE FF FF 
	add	$0x00,%al	# 42BAA0 4 0 
	add	%al,(%rax)	# 42BAA2 0 0 
	add	%al,(%rax)	# 42BAA4 0 0 
	add	%al,(%rax)	# 42BAA6 0 0 
	add	%al,(%rax)	# 42BAA8 0 0 
	add	%ch,%al	# 42BAAA 0 E8 
	g4??	%dil	# 42BAAC 4E FE FF 
	inc	 ( %rbp+A  ) (%rip)	# 42BAAF FF 5 0 0 0 0 
	add	%al,(%rax)	# 42BAB5 0 0 
	add	%al,(%rax)	# 42BAB7 0 0 
	add	%al,(%rax)	# 42BAB9 0 0 
%rsi:
	call	 ( %r_x:+A  ) 	# 42BABB E8 3E FE FF FF 
	add	$0x00,%al	# 42BAC0 6 0 
	add	%al,(%rax)	# 42BAC2 0 0 
	add	%al,(%rax)	# 42BAC4 0 0 
	add	%al,(%rax)	# 42BAC6 0 0 
	add	%al,(%rax)	# 42BAC8 0 0 
	add	%ch,%al	# 42BACA 0 E8 
	sub	$-0x02,%al	# 42BACC 2E FE 
	g4??	%edi	# 42BACE FF FF 
	add	$0x0,%eax	# 42BAD0 7 0 0 0 0 
	add	%al,(%rax)	# 42BAD5 0 0 
	add	%al,(%rax)	# 42BAD7 0 0 
//DROP

//

//0

//%r_n: %r8 %r_n: %r9 %r_n: %r10 %r_n: %r11 %r_n: %r12 %r_n: %r13 %r_n: %r14 %r_n: %r15

	add	%al,(%rax)	# 42BAD9 0 0 
%r8:
	call	 ( %r_n:+A  ) 	# 42BADB E8 8F FE FF FF 
	add	%al,(%rax)	# 42BAE0 0 0 
	add	%al,(%rax)	# 42BAE2 0 0 
	add	%al,(%rax)	# 42BAE4 0 0 
	add	%al,(%rax)	# 42BAE6 0 0 
	add	%al,(%rax)	# 42BAE8 0 0 
	add	%ch,%al	# 42BAEA 0 E8 
	jNle	 ( %r9+1  ) 	# 42BAEC 7F FE 
	g4??	%edi	# 42BAEE FF FF 
	add	%eax,(%rax)	# 42BAF0 1 0 
	add	%al,(%rax)	# 42BAF2 0 0 
	add	%al,(%rax)	# 42BAF4 0 0 
	add	%al,(%rax)	# 42BAF6 0 0 
	add	%al,(%rax)	# 42BAF8 0 0 
	add	%ch,%al	# 42BAFA 0 E8 
	outsl	%ds:(%rsi),(%dx)		# 42BAFC 6F 
	g4??	%bh	# 42BAFD FE FF 
	inc	(%rdx)	# 42BAFF FF 2 
	add	%al,(%rax)	# 42BB01 0 0 
	add	%al,(%rax)	# 42BB03 0 0 
	add	%al,(%rax)	# 42BB05 0 0 
	add	%al,(%rax)	# 42BB07 0 0 
	add	%al,(%rax)	# 42BB09 0 0 
%r11:
	call	 ( %r_n:+A  ) 	# 42BB0B E8 5F FE FF FF 
	add	(%rax),%eax	# 42BB10 3 0 
	add	%al,(%rax)	# 42BB12 0 0 
	add	%al,(%rax)	# 42BB14 0 0 
	add	%al,(%rax)	# 42BB16 0 0 
	add	%al,(%rax)	# 42BB18 0 0 
	add	%ch,%al	# 42BB1A 0 E8 
	g4??	%r15lB	# 42BB1C 4F FE FF 
	inc	(%rax,%rax,1)	# 42BB1F FF 4 0 
	add	%al,(%rax)	# 42BB22 0 0 
	add	%al,(%rax)	# 42BB24 0 0 
	add	%al,(%rax)	# 42BB26 0 0 
	add	%al,(%rax)	# 42BB28 0 0 
	add	%ch,%al	# 42BB2A 0 E8 
	cmp	$0x5FFFFFE,%eax	# 42BB2C 3F FE FF FF 5 
	add	%al,(%rax)	# 42BB31 0 0 
	add	%al,(%rax)	# 42BB33 0 0 
	add	%al,(%rax)	# 42BB35 0 0 
	add	%al,(%rax)	# 42BB37 0 0 
	add	%al,(%rax)	# 42BB39 0 0 
%r14:
	call	 ( %r_n:+A  ) 	# 42BB3B E8 2F FE FF FF 
	add	$0x00,%al	# 42BB40 6 0 
	add	%al,(%rax)	# 42BB42 0 0 
	add	%al,(%rax)	# 42BB44 0 0 
	add	%al,(%rax)	# 42BB46 0 0 
	add	%al,(%rax)	# 42BB48 0 0 
	add	%ch,%al	# 42BB4A 0 E8 
	sbb	$0x7FFFFFE,%eax	# 42BB4C 1F FE FF FF 7 
	add	%al,(%rax)	# 42BB51 0 0 
	add	%al,(%rax)	# 42BB53 0 0 
	add	%al,(%rax)	# 42BB55 0 0 
	add	%al,(%rax)	# 42BB57 0 0 
//DROP

//

//

//0

//%e_x: %eax %e_x: %ecx %e_x: %edx %e_x: %ebx %e_x: %esp %e_x: %ebp %e_x: %esi %e_x: %edi

	add	%al,(%rax)	# 42BB59 0 0 
%eax:
	call	 ( %e_x:+A  ) 	# 42BB5B E8 18 FD FF FF 
	add	%al,(%rax)	# 42BB60 0 0 
	add	%al,(%rax)	# 42BB62 0 0 
	add	%al,(%rax)	# 42BB64 0 0 
	add	%al,(%rax)	# 42BB66 0 0 
	add	%al,(%rax)	# 42BB68 0 0 
	add	%ch,%al	# 42BB6A 0 E8 
	or	%bh,%ch	# 42BB6C 8 FD 
	g4??	%edi	# 42BB6E FF FF 
	add	%eax,(%rax)	# 42BB70 1 0 
	add	%al,(%rax)	# 42BB72 0 0 
	add	%al,(%rax)	# 42BB74 0 0 
	add	%al,(%rax)	# 42BB76 0 0 
	add	%al,(%rax)	# 42BB78 0 0 
	add	%ch,%al	# 42BB7A 0 E8 
clC	# 42BB7C F8 
clD	# 42BB7D FC 
	g4??	%edi	# 42BB7E FF FF 
	add	(%rax),%al	# 42BB80 2 0 
	add	%al,(%rax)	# 42BB82 0 0 
	add	%al,(%rax)	# 42BB84 0 0 
	add	%al,(%rax)	# 42BB86 0 0 
	add	%al,(%rax)	# 42BB88 0 0 
	add	%ch,%al	# 42BB8A 0 E8 
	call	 ( _STEKC+3F1631D  ) 	# 42BB8C E8 FC FF FF 3 
	add	%al,(%rax)	# 42BB91 0 0 
	add	%al,(%rax)	# 42BB93 0 0 
	add	%al,(%rax)	# 42BB95 0 0 
	add	%al,(%rax)	# 42BB97 0 0 
	add	%al,(%rax)	# 42BB99 0 0 
%esp:
	call	 ( %e_x:+A  ) 	# 42BB9B E8 D8 FC FF FF 
	add	$0x00,%al	# 42BBA0 4 0 
	add	%al,(%rax)	# 42BBA2 0 0 
	add	%al,(%rax)	# 42BBA4 0 0 
	add	%al,(%rax)	# 42BBA6 0 0 
	add	%al,(%rax)	# 42BBA8 0 0 
	add	%ch,%al	# 42BBAA 0 E8 
	enter	$0xFFFC,$0xFF	# 42BBAC C8 FC FF FF 
	add	$0x0,%eax	# 42BBB0 5 0 0 0 0 
	add	%al,(%rax)	# 42BBB5 0 0 
	add	%al,(%rax)	# 42BBB7 0 0 
	add	%al,(%rax)	# 42BBB9 0 0 
%esi:
	call	 ( %e_x:+A  ) 	# 42BBBB E8 B8 FC FF FF 
	add	$0x00,%al	# 42BBC0 6 0 
	add	%al,(%rax)	# 42BBC2 0 0 
	add	%al,(%rax)	# 42BBC4 0 0 
	add	%al,(%rax)	# 42BBC6 0 0 
	add	%al,(%rax)	# 42BBC8 0 0 
	add	%ch,%al	# 42BBCA 0 E8 
	test	$-0x04,%al	# 42BBCC A8 FC 
	g4??	%edi	# 42BBCE FF FF 
	add	$0x0,%eax	# 42BBD0 7 0 0 0 0 
	add	%al,(%rax)	# 42BBD5 0 0 
	add	%al,(%rax)	# 42BBD7 0 0 
//DROP

//

//0

//%_x: %ax %_x: %cx %_x: %dx %_x: %bx %_x: %sp %_x: %bp %_x: %si %_x: %di

	add	%al,(%rax)	# 42BBD9 0 0 
%ax:
	call	 ( %_x:+1B  ) 	# 42BBDB E8 1D FC FF FF 
	add	%al,(%rax)	# 42BBE0 0 0 
	add	%al,(%rax)	# 42BBE2 0 0 
	add	%al,(%rax)	# 42BBE4 0 0 
	add	%al,(%rax)	# 42BBE6 0 0 
	add	%al,(%rax)	# 42BBE8 0 0 
	add	%ch,%al	# 42BBEA 0 E8 
	or	$0x1FFFFFC,%eax	# 42BBEC D FC FF FF 1 
	add	%al,(%rax)	# 42BBF1 0 0 
	add	%al,(%rax)	# 42BBF3 0 0 
	add	%al,(%rax)	# 42BBF5 0 0 
	add	%al,(%rax)	# 42BBF7 0 0 
	add	%al,(%rax)	# 42BBF9 0 0 
%dx:
	call	 ( %_x:+1B  ) 	# 42BBFB E8 FD FB FF FF 
	add	(%rax),%al	# 42BC00 2 0 
	add	%al,(%rax)	# 42BC02 0 0 
	add	%al,(%rax)	# 42BC04 0 0 
	add	%al,(%rax)	# 42BC06 0 0 
	add	%al,(%rax)	# 42BC08 0 0 
	add	%ch,%al	# 42BC0A 0 E8 
	in	(%dx),%eax		# 42BC0C ED 
stI	# 42BC0D FB 
	g4??	%edi	# 42BC0E FF FF 
	add	(%rax),%eax	# 42BC10 3 0 
	add	%al,(%rax)	# 42BC12 0 0 
	add	%al,(%rax)	# 42BC14 0 0 
	add	%al,(%rax)	# 42BC16 0 0 
	add	%al,(%rax)	# 42BC18 0 0 
	add	%ch,%al	# 42BC1A 0 E8 
	.byte	0xDD	# 42BC1C DD 
stI	# 42BC1D FB 
	g4??	%edi	# 42BC1E FF FF 
	add	$0x00,%al	# 42BC20 4 0 
	add	%al,(%rax)	# 42BC22 0 0 
	add	%al,(%rax)	# 42BC24 0 0 
	add	%al,(%rax)	# 42BC26 0 0 
	add	%al,(%rax)	# 42BC28 0 0 
	add	%ch,%al	# 42BC2A 0 E8 
	int	$-0x05	# 42BC2C CD FB 
	g4??	%edi	# 42BC2E FF FF 
	add	$0x0,%eax	# 42BC30 5 0 0 0 0 
	add	%al,(%rax)	# 42BC35 0 0 
	add	%al,(%rax)	# 42BC37 0 0 
	add	%al,(%rax)	# 42BC39 0 0 
%si:
	call	 ( %_x:+1B  ) 	# 42BC3B E8 BD FB FF FF 
	add	$0x00,%al	# 42BC40 6 0 
	add	%al,(%rax)	# 42BC42 0 0 
	add	%al,(%rax)	# 42BC44 0 0 
	add	%al,(%rax)	# 42BC46 0 0 
	add	%al,(%rax)	# 42BC48 0 0 
	add	%ch,%al	# 42BC4A 0 E8 
	lods	%ds:(%rsi),%eax		# 42BC4C AD 
stI	# 42BC4D FB 
	g4??	%edi	# 42BC4E FF FF 
	add	$0x0,%eax	# 42BC50 7 0 0 0 0 
	add	%al,(%rax)	# 42BC55 0 0 
	add	%al,(%rax)	# 42BC57 0 0 
//DROP

//

//0

//%r8d: %r8d %r8d: %r9d %r8d: %r10d %r8d: %r11d %r8d: %r12d %r8d: %r13d %r8d: %r14d %r8d: %r15d

	add	%al,(%rax)	# 42BC59 0 0 
%r8d:
	call	 ( %r8d:+A  ) 	# 42BC5B E8 59 FC FF FF 
	add	%al,(%rax)	# 42BC60 0 0 
	add	%al,(%rax)	# 42BC62 0 0 
	add	%al,(%rax)	# 42BC64 0 0 
	add	%al,(%rax)	# 42BC66 0 0 
	add	%al,(%rax)	# 42BC68 0 0 
	add	%ch,%al	# 42BC6A 0 E8 
clD	# 42BC6C 49 FC 
	g4??	%edi	# 42BC6E FF FF 
	add	%eax,(%rax)	# 42BC70 1 0 
	add	%al,(%rax)	# 42BC72 0 0 
	add	%al,(%rax)	# 42BC74 0 0 
	add	%al,(%rax)	# 42BC76 0 0 
	add	%al,(%rax)	# 42BC78 0 0 
	add	%ch,%al	# 42BC7A 0 E8 
	cmp	%edi,%esp	# 42BC7C 39 FC 
	g4??	%edi	# 42BC7E FF FF 
	add	(%rax),%al	# 42BC80 2 0 
	add	%al,(%rax)	# 42BC82 0 0 
	add	%al,(%rax)	# 42BC84 0 0 
	add	%al,(%rax)	# 42BC86 0 0 
	add	%al,(%rax)	# 42BC88 0 0 
	add	%ch,%al	# 42BC8A 0 E8 
	sub	%edi,%esp	# 42BC8C 29 FC 
	g4??	%edi	# 42BC8E FF FF 
	add	(%rax),%eax	# 42BC90 3 0 
	add	%al,(%rax)	# 42BC92 0 0 
	add	%al,(%rax)	# 42BC94 0 0 
	add	%al,(%rax)	# 42BC96 0 0 
	add	%al,(%rax)	# 42BC98 0 0 
	add	%ch,%al	# 42BC9A 0 E8 
	sbb	%edi,%esp	# 42BC9C 19 FC 
	g4??	%edi	# 42BC9E FF FF 
	add	$0x00,%al	# 42BCA0 4 0 
	add	%al,(%rax)	# 42BCA2 0 0 
	add	%al,(%rax)	# 42BCA4 0 0 
	add	%al,(%rax)	# 42BCA6 0 0 
	add	%al,(%rax)	# 42BCA8 0 0 
	add	%ch,%al	# 42BCAA 0 E8 
	or	%edi,%esp	# 42BCAC 9 FC 
	g4??	%edi	# 42BCAE FF FF 
	add	$0x0,%eax	# 42BCB0 5 0 0 0 0 
	add	%al,(%rax)	# 42BCB5 0 0 
	add	%al,(%rax)	# 42BCB7 0 0 
	add	%al,(%rax)	# 42BCB9 0 0 
%r14d:
	call	 ( %r8d:+A  ) 	# 42BCBB E8 F9 FB FF FF 
	add	$0x00,%al	# 42BCC0 6 0 
	add	%al,(%rax)	# 42BCC2 0 0 
	add	%al,(%rax)	# 42BCC4 0 0 
	add	%al,(%rax)	# 42BCC6 0 0 
	add	%al,(%rax)	# 42BCC8 0 0 
	add	%ch,%al	# 42BCCA 0 E8 
	jmp	 ( _STEKC+7F1645C  ) 	# 42BCCC E9 FB FF FF 7 
	add	%al,(%rax)	# 42BCD1 0 0 
	add	%al,(%rax)	# 42BCD3 0 0 
	add	%al,(%rax)	# 42BCD5 0 0 
	add	%ch,%al	# 42BCD7 0 E8 
//DROP

//

//: PARAM:

// CREATE PARM_HESH ,  0 TO PARM_HESH

	ret		# 42BCD9 C3 
	xor	$-0x02,%al	# 42BCDA 34 FE 
	dec	-0x77(%rax)	# 42BCDC FF 48 89 
clC	# 42BCDF 45 F8 
	mov	 ( PARM_HESH+5  ) (%rip),%rax	# 42BCE1 48 8B 5 9D F8 FF FF 
	lea	-0x08(%rbp),%rbp	# 42BCE8 48 8D 6D F8 
	call	 ( , ) 	# 42BCEC E8 29 92 FD FF 
	movq	$0x0, ( PARM_HESH+5  ) (%rip)	# 42BCF1 48 C7 5 89 F8 FF FF 0 0 0 0 
// DOES>  @ PARM_HESH =

	call	 ( (DOES>) ) 	# 42BCFC E8 86 35 FE FF 
	mov	%rax,-0x08(%rbp)	# 42BD01 48 89 45 F8 
	pop	%rax	# 42BD05 58 
	mov	(%rax),%rax	# 42BD06 48 8B 0 
	xor	 ( PARM_HESH+5  ) (%rip),%rax	# 42BD09 48 33 5 75 F8 FF FF 
	sub	$0x01,%rax	# 42BD10 48 83 E8 1 
	sbb	%rax,%rax	# 42BD14 48 19 C0 
	lea	-0x08(%rbp),%rbp	# 42BD17 48 8D 6D F8 
// ;

	ret		# 42BD1B C3 
//

// %r_x			PARAM: #%r_x

	add	%al,(%rax)	# 42BD1C 0 0 
	add	%al,(%rax)	# 42BD1E 0 0 
	add	%al,(%rax)	# 42BD20 0 0 
	add	%ch,%al	# 42BD22 0 E8 
	.byte	0xD9	# 42BD24 D9 
	g4??	%edi	# 42BD25 FF FF 
	inc	(%rcx)	# 42BD27 FF 1 
	add	%al,(%rax)	# 42BD29 0 0 
	add	%al,(%rax)	# 42BD2B 0 0 
	add	%al,(%rax)	# 42BD2D 0 0 
	add	%al,(%rax)	# 42BD2F 0 0 
// %r_x	%r_x		PARAM: #%r_x,%r_x

	add	%al,(%rax)	# 42BD31 0 0 
hash%r_xcom%r_x:
	call	 ( PARAM:+29  ) 	# 42BD33 E8 C9 FF FF FF 
	add	$0x0,%eax	# 42BD38 5 0 0 0 0 
	add	%al,(%rax)	# 42BD3D 0 0 
	add	%al,(%rax)	# 42BD3F 0 0 
// $$	%r_x		PARAM: #$,%r_x

	add	%al,(%rax)	# 42BD41 0 0 
hashdolcom%r_x:
	call	 ( PARAM:+29  ) 	# 42BD43 E8 B9 FF FF FF 
	or	%eax,(%rax)	# 42BD48 9 0 
	add	%al,(%rax)	# 42BD4A 0 0 
	add	%al,(%rax)	# 42BD4C 0 0 
	add	%al,(%rax)	# 42BD4E 0 0 
//\ %_l	%_l		PARAM: #%_l,%_l

// 0 (( %r_x |))		PARAM: #(%r_x)

	add	%al,(%rax)	# 42BD50 0 0 
	add	%ch,%al	# 42BD52 0 E8 
	test	$0x38FFFFFF,%eax	# 42BD54 A9 FF FF FF 38 
	add	%al,(%rax)	# 42BD59 0 0 
	add	%al,(%rax)	# 42BD5B 0 0 
	add	%al,(%rax)	# 42BD5D 0 0 
	add	%al,(%rax)	# 42BD5F 0 0 
// 0 (( %r_x %r_x |))	PARAM: #(%r_x,%r_x)

	add	%al,(%rax)	# 42BD61 0 0 
hashcbig%r_xcom%r_xcend:
	call	 ( PARAM:+29  ) 	# 42BD63 E8 99 FF FF FF 
	.byte	0xD8	# 42BD68 D8 
	add	%al,(%rax)	# 42BD69 0 0 
	add	%al,(%rax)	# 42BD6B 0 0 
	add	%al,(%rax)	# 42BD6D 0 0 
	add	%al,(%rax)	# 42BD6F 0 0 
// 0 (( %r_x |)) %r_x	PARAM: #(%r_x),%r_x

	add	%al,(%rax)	# 42BD71 0 0 
hashcbig%r_xcendcom%r_x:
	call	 ( PARAM:+29  ) 	# 42BD73 E8 89 FF FF FF 
	loope	 ( #(%r_x),%r_x+7  ) 	# 42BD78 E1 0 
	add	%al,(%rax)	# 42BD7A 0 0 
	add	%al,(%rax)	# 42BD7C 0 0 
	add	%al,(%rax)	# 42BD7E 0 0 
// 0 (( %r_x %r_x |)) %r_x	PARAM: #(%r_x,%r_x),%r_x

	add	%al,(%rax)	# 42BD80 0 0 
	add	%ch,%al	# 42BD82 0 E8 
	jNs	 ( #(%r_x,%r_x),%r_x+2  ) 	# 42BD84 79 FF 
	g4??	%edi	# 42BD86 FF FF 
	.byte	0x61	# 42BD88 61 
	add	(%rax),%eax	# 42BD89 3 0 
	add	%al,(%rax)	# 42BD8B 0 0 
	add	%al,(%rax)	# 42BD8D 0 0 
	add	%al,(%rax)	# 42BD8F 0 0 
//

// $$ 0 (( %r_x |))		PARAM: #$,(%r_x)

	add	%al,(%rax)	# 42BD91 0 0 
hashdolcomcbig%r_xcend:
	call	 ( PARAM:+29  ) 	# 42BD93 E8 69 FF FF FF 
	mov	$0x0,%eax	# 42BD98 B8 0 0 0 0 
	add	%al,(%rax)	# 42BD9D 0 0 
	add	%al,(%rax)	# 42BD9F 0 0 
// $$ 0 (( %r_x %r_x |))		PARAM: #$,(%r_x,%r_x)

	add	%al,(%rax)	# 42BDA1 0 0 
hashdolcomcbig%r_xcom%r_xcend:
	call	 ( PARAM:+29  ) 	# 42BDA3 E8 59 FF FF FF 
	.byte	0xD8	# 42BDA8 D8 
	add	(%rax),%al	# 42BDA9 2 0 
	add	%al,(%rax)	# 42BDAB 0 0 
	add	%al,(%rax)	# 42BDAD 0 0 
	add	%al,(%rax)	# 42BDAF 0 0 
//

// %r_x 0 (( %r_x |)) 	PARAM: #%r_x,(%r_x)

	add	%al,(%rax)	# 42BDB1 0 0 
hash%r_xcomcbig%r_xcend:
	call	 ( PARAM:+29  ) 	# 42BDB3 E8 49 FF FF FF 
	js	 ( #%r_x,(%r_x)+7  ) 	# 42BDB8 78 0 
	add	%al,(%rax)	# 42BDBA 0 0 
	add	%al,(%rax)	# 42BDBC 0 0 
	add	%al,(%rax)	# 42BDBE 0 0 
// %r_x 0 (( %r_x %r_x |)) PARAM: #%r_x,(%r_x,%r_x)	

	add	%al,(%rax)	# 42BDC0 0 0 
	add	%ch,%al	# 42BDC2 0 E8 
	cmp	%edi,%edi	# 42BDC4 39 FF 
	g4??	%edi	# 42BDC6 FF FF 
	.byte	0xD8	# 42BDC8 D8 
	add	%eax,(%rax)	# 42BDC9 1 0 
	add	%al,(%rax)	# 42BDCB 0 0 
	add	%al,(%rax)	# 42BDCD 0 0 
	add	%al,(%rax)	# 42BDCF 0 0 
// 0 (( %rip |))		PARAM: #(%rip)

	add	%al,(%rax)	# 42BDD1 0 0 
hashcbig%ripcend:
	call	 ( PARAM:+29  ) 	# 42BDD3 E8 29 FF FF FF 
	add	%al,(%rax)	# 42BDD8 48 0 0 
	add	%al,(%rax)	# 42BDDB 0 0 
	add	%al,(%rax)	# 42BDDD 0 0 
	add	%al,(%rax)	# 42BDDF 0 0 
//

//

//CREATE TAB_(r,r)	0 C, 2 C, 1 C, 3 C,

	add	%al,(%rax)	# 42BDE1 0 0 
TAB_cbigrcomrcend:
	call	 ( DOCREATE ) 	# 42BDE3 E8 38 8B FD FF 
	add	%al,(%rdx)	# 42BDE8 0 2 
	add	%eax,(%rbx)	# 42BDEA 1 3 
//CREATE TAB_(r)r		0 C, 4 C, 2 C, 3 C, 4 C, 5 C, 6 C, 7 C,

	add	%al,(%rax)	# 42BDEC 0 0 
	add	%al,(%rax)	# 42BDEE 0 0 
	add	%al,(%rax)	# 42BDF0 0 0 
	add	%ch,%al	# 42BDF2 0 E8 
	sub	%cl,0x400FFFD(%rbx)	# 42BDF4 28 8B FD FF 0 4 
	add	(%rbx),%al	# 42BDFA 2 3 
	add	$0x05,%al	# 42BDFC 4 5 
	add	$0x07,%al	# 42BDFE 6 7 
//CREATE TAB_r(r)		0 C, 1 C, 2 C, 3 C, 4 C, 5 C, 6 C, 7 C,

	add	%al,(%rax)	# 42BE00 0 0 
	add	%ch,%al	# 42BE02 0 E8 
	sbb	%cl,0x100FFFD(%rbx)	# 42BE04 18 8B FD FF 0 1 
	add	(%rbx),%al	# 42BE0A 2 3 
	add	$0x05,%al	# 42BE0C 4 5 
	add	$0x07,%al	# 42BE0E 6 7 
//

//CREATE TAB_(r,r)r	0 C, 4 C, 2 C, 6 C, 1 C, 5 C, 3 C, 7 C,

	add	%al,(%rax)	# 42BE10 0 0 
	add	%ch,%al	# 42BE12 0 E8 
	or	%cl,0x400FFFD(%rbx)	# 42BE14 8 8B FD FF 0 4 
	add	(%rsi),%al	# 42BE1A 2 6 
	add	%eax, ( endbr64 ) (%rip)	# 42BE1C 1 5 3 7 0 0 
//CREATE TAB_r(r,r)	0 C, 2 C, 1 C, 3 C, 4 C, 6 C, 5 C, 7 C,

	add	%ch,%al	# 42BE22 0 E8 
clC	# 42BE24 F8 
	mov	%ch,%bh	# 42BE25 8A FD 
	inc	(%rax)	# 42BE27 FF 0 
	add	(%rcx),%al	# 42BE29 2 1 
	add	(%rsi,%rax,1),%eax	# 42BE2B 3 4 6 
	add	$0x45894807,%eax	# 42BE2E 5 7 48 89 45 
//

//: REX,

//  REX.RBX

clC	# 42BE33 F8 
	mov	 ( REX.RBX+5  ) (%rip),%rax	# 42BE34 48 8B 5 14 F8 FF FF 
	mov	%rax,-0x10(%rbp)	# 42BE3B 48 89 45 F0 
//\ MO_TST_VAL-ON

// DUP 7 U>

	mov	%rax,-0x18(%rbp)	# 42BE3F 48 89 45 E8 
	mov	$0x7,%eax	# 42BE43 B8 7 0 0 0 
	cmp	-0x18(%rbp),%rax	# 42BE48 48 3B 45 E8 
	sbb	%rax,%rax	# 42BE4C 48 19 C0 
	test	%rax,%rax	# 42BE4F 48 85 C0 
	mov	-0x10(%rbp),%rax	# 42BE52 48 8B 45 F0 
//	IF    -333 THROW THEN

	lea	-0x08(%rbp),%rbp	# 42BE56 48 8D 6D F8 
	jz	 ( REX,+44  ) 	# 42BE5A F 84 14 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42BE60 48 89 45 F8 
	movq	$-0x14D,%rax	# 42BE64 48 C7 C0 B3 FE FF FF 
	lea	-0x08(%rbp),%rbp	# 42BE6B 48 8D 6D F8 
	call	 ( THROW ) 	# 42BE6F E8 40 97 FD FF 
//\ MO_TST_VAL-Off

//\ CR ." REX20=" .S KEY DROP

// #(%r_x,%r_x)		IF TAB_(r,r)	+ C@ THEN

	call	 ( #(%r_x,%r_x) ) 	# 42BE74 E8 EA FE FF FF 
	test	%rax,%rax	# 42BE79 48 85 C0 
	mov	0x00(%rbp),%rax	# 42BE7C 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42BE80 48 8D 6D 8 
	jz	 ( REX,+6C  ) 	# 42BE84 F 84 12 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42BE8A 48 89 45 F8 
	lea	 ( TAB_(r,r)+5  ) (%rip),%rax	# 42BE8E 48 8D 5 53 FF FF FF 
	add	-0x08(%rbp),%rax	# 42BE95 48 3 45 F8 
	movzb	(%rax),%eax	# 42BE99 F B6 0 
// #(%r_x),%r_x 

	call	 ( #(%r_x),%r_x ) 	# 42BE9C E8 D2 FE FF FF 
//\ CR ." REX40=" .S KEY DROP

//  	IF TAB_(r)r	+ C@ THEN

	test	%rax,%rax	# 42BEA1 48 85 C0 
	mov	0x00(%rbp),%rax	# 42BEA4 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42BEA8 48 8D 6D 8 
	jz	 ( REX,+94  ) 	# 42BEAC F 84 12 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42BEB2 48 89 45 F8 
	lea	 ( TAB_(r)r+5  ) (%rip),%rax	# 42BEB6 48 8D 5 3B FF FF FF 
	add	-0x08(%rbp),%rax	# 42BEBD 48 3 45 F8 
	movzb	(%rax),%eax	# 42BEC1 F B6 0 
// #(%r_x,%r_x),%r_x	IF TAB_(r,r)r	+ C@ THEN

	call	 ( #(%r_x,%r_x),%r_x ) 	# 42BEC4 E8 BA FE FF FF 
	test	%rax,%rax	# 42BEC9 48 85 C0 
	mov	0x00(%rbp),%rax	# 42BECC 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42BED0 48 8D 6D 8 
	jz	 ( REX,+BC  ) 	# 42BED4 F 84 12 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42BEDA 48 89 45 F8 
	lea	 ( TAB_(r,r)r+5  ) (%rip),%rax	# 42BEDE 48 8D 5 33 FF FF FF 
	add	-0x08(%rbp),%rax	# 42BEE5 48 3 45 F8 
	movzb	(%rax),%eax	# 42BEE9 F B6 0 
// #%r_x,(%r_x)		IF TAB_r(r)	+ C@ THEN

	call	 ( #%r_x,(%r_x) ) 	# 42BEEC E8 C2 FE FF FF 
	test	%rax,%rax	# 42BEF1 48 85 C0 
	mov	0x00(%rbp),%rax	# 42BEF4 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42BEF8 48 8D 6D 8 
	jz	 ( REX,+E4  ) 	# 42BEFC F 84 12 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42BF02 48 89 45 F8 
	lea	 ( TAB_r(r)+5  ) (%rip),%rax	# 42BF06 48 8D 5 FB FE FF FF 
	add	-0x08(%rbp),%rax	# 42BF0D 48 3 45 F8 
	movzb	(%rax),%eax	# 42BF11 F B6 0 
// #%r_x,(%r_x,%r_x)	IF TAB_r(r,r)	+ C@ THEN

	call	 ( #%r_x,(%r_x,%r_x) ) 	# 42BF14 E8 AA FE FF FF 
	test	%rax,%rax	# 42BF19 48 85 C0 
	mov	0x00(%rbp),%rax	# 42BF1C 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42BF20 48 8D 6D 8 
	jz	 ( REX,+10C  ) 	# 42BF24 F 84 12 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42BF2A 48 89 45 F8 
	lea	 ( TAB_r(r,r)+5  ) (%rip),%rax	# 42BF2E 48 8D 5 F3 FE FF FF 
	add	-0x08(%rbp),%rax	# 42BF35 48 3 45 F8 
	movzb	(%rax),%eax	# 42BF39 F B6 0 
// REX_W OR $40 OR C,

	or	 ( REX_W+5  ) (%rip),%rax	# 42BF3C 48 B 5 19 F7 FF FF 
	or	$0x40,%rax	# 42BF43 48 D 40 0 0 0 
	call	 ( C, ) 	# 42BF49 E8 2A 90 FD FF 
//  0 TO REX_W  0 TO REX.RBX

	movq	$0x0, ( REX_W+5  ) (%rip)	# 42BF4E 48 C7 5 3 F7 FF FF 0 0 0 0 
	movq	$0x0, ( REX.RBX+5  ) (%rip)	# 42BF59 48 C7 5 EB F6 FF FF 0 0 0 0 
//;

	ret		# 42BF64 C3 
//

//: ?OSIZE, OSIZE IF $66 C, 0 TO OSIZE THEN ;

queOSIZEcom:
	mov	%rax,-0x08(%rbp)	# 42BF65 48 89 45 F8 
	mov	 ( OSIZE+5  ) (%rip),%rax	# 42BF69 48 8B 5 6 F7 FF FF 
	test	%rax,%rax	# 42BF70 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42BF73 48 8B 45 F8 
	jz	 ( ?OSIZE,+35  ) 	# 42BF77 F 84 1D 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42BF7D 48 89 45 F8 
	mov	$0x66,%eax	# 42BF81 B8 66 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42BF86 48 8D 6D F8 
	call	 ( C, ) 	# 42BF8A E8 E9 8F FD FF 
	movq	$0x0, ( OSIZE+5  ) (%rip)	# 42BF8F 48 C7 5 DC F6 FF FF 0 0 0 0 
	ret		# 42BF9A C3 
//

//: ?REX,  ?OSIZE,  REX@ IF REX, THEN  ;

queREXcom:
	call	 ( ?OSIZE, ) 	# 42BF9B E8 C5 FF FF FF 
	mov	%rax,-0x08(%rbp)	# 42BFA0 48 89 45 F8 
	mov	 ( REX.RBX+5  ) (%rip),%rax	# 42BFA4 48 8B 5 A4 F6 FF FF 
	or	 ( REX_W+5  ) (%rip),%rax	# 42BFAB 48 B 5 AA F6 FF FF 
	test	%rax,%rax	# 42BFB2 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42BFB5 48 8B 45 F8 
	jz	 ( ?REX,+29  ) 	# 42BFB9 F 84 5 0 0 0 
	call	 ( REX, ) 	# 42BFBF E8 6C FE FF FF 
	ret		# 42BFC4 C3 
//

//

//: DO|;  ( cod -- )

// ?REX,

DOlend:
	call	 ( ?REX, ) 	# 42BFC5 E8 D1 FF FF FF 
//  OR  C,

	or	0x00(%rbp),%rax	# 42BFCA 48 B 45 0 
	lea	0x08(%rbp),%rbp	# 42BFCE 48 8D 6D 8 
	call	 ( C, ) 	# 42BFD2 E8 A1 8F FD FF 
// 0 TO PARM_HESH 1 TO REG>8 ;

	movq	$0x0, ( PARM_HESH+5  ) (%rip)	# 42BFD7 48 C7 5 A3 F5 FF FF 0 0 0 0 
	movq	$0x1, ( REG>8+5  ) (%rip)	# 42BFE2 48 C7 5 7C F6 FF FF 1 0 0 0 
	ret		# 42BFED C3 
//

//: |;

// POSTPONE  DO|;

lend:
	mov	%rax,-0x08(%rbp)	# 42BFEE 48 89 45 F8 
	mov	$0x42BFC5,%eax	# 42BFF2 B8 C5 BF 42 0 
	lea	-0x08(%rbp),%rbp	# 42BFF7 48 8D 6D F8 
	call	 ( COMPILE, ) 	# 42BFFB E8 B9 A FE FF 
// POSTPONE ;

	call	 ( ; ) 	# 42C000 E8 77 39 FE FF 
//; IMMEDIATE

	ret		# 42C005 C3 
//

//: data16	$66 C, ; 

data16:
	mov	%rax,-0x08(%rbp)	# 42C006 48 89 45 F8 
	mov	$0x66,%eax	# 42C00A B8 66 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C00F 48 8D 6D F8 
	call	 ( C, ) 	# 42C013 E8 60 8F FD FF 
	ret		# 42C018 C3 
//

//\	6c                   	insb   (%dx),%es:(%rdi)

//\	6d                   	insl   (%dx),%es:(%rdi)

//\	6e                   	outsb  %ds:(%rsi),(%dx)

//\	6f                   	outsl  %ds:(%rsi),(%dx)

//\	a4                   	movsb  %ds:(%rsi),%es:(%rdi)

//\ c8 05 11 22          	enter  $0x1105,$0x22

//

//: ret		$c3 C, ;

ret:
	mov	%rax,-0x08(%rbp)	# 42C019 48 89 45 F8 
	mov	$0xC3,%eax	# 42C01D B8 C3 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C022 48 8D 6D F8 
	call	 ( C, ) 	# 42C026 E8 4D 8F FD FF 
	ret		# 42C02B C3 
//: retq		$c3 C, ;

retq:
	mov	%rax,-0x08(%rbp)	# 42C02C 48 89 45 F8 
	mov	$0xC3,%eax	# 42C030 B8 C3 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C035 48 8D 6D F8 
	call	 ( C, ) 	# 42C039 E8 3A 8F FD FF 
	ret		# 42C03E C3 
//: nop		$90 C, ;

nop:
	mov	%rax,-0x08(%rbp)	# 42C03F 48 89 45 F8 
	mov	$0x90,%eax	# 42C043 B8 90 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C048 48 8D 6D F8 
	call	 ( C, ) 	# 42C04C E8 27 8F FD FF 
	ret		# 42C051 C3 
//: cwtl		$98 C, ;

cwtl:
	mov	%rax,-0x08(%rbp)	# 42C052 48 89 45 F8 
	mov	$0x98,%eax	# 42C056 B8 98 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C05B 48 8D 6D F8 
	call	 ( C, ) 	# 42C05F E8 14 8F FD FF 
	ret		# 42C064 C3 
//: cltd		$99 C, ;

cltd:
	mov	%rax,-0x08(%rbp)	# 42C065 48 89 45 F8 
	mov	$0x99,%eax	# 42C069 B8 99 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C06E 48 8D 6D F8 
	call	 ( C, ) 	# 42C072 E8 1 8F FD FF 
	ret		# 42C077 C3 
//: fwait 	$9b C, ;

fwait:
	mov	%rax,-0x08(%rbp)	# 42C078 48 89 45 F8 
	mov	$0x9B,%eax	# 42C07C B8 9B 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C081 48 8D 6D F8 
	call	 ( C, ) 	# 42C085 E8 EE 8E FD FF 
	ret		# 42C08A C3 
//: pushfq	$9c C, ;

pushfq:
	mov	%rax,-0x08(%rbp)	# 42C08B 48 89 45 F8 
	mov	$0x9C,%eax	# 42C08F B8 9C 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C094 48 8D 6D F8 
	call	 ( C, ) 	# 42C098 E8 DB 8E FD FF 
	ret		# 42C09D C3 
//: popfq 	$9d C, ;

popfq:
	mov	%rax,-0x08(%rbp)	# 42C09E 48 89 45 F8 
	mov	$0x9D,%eax	# 42C0A2 B8 9D 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C0A7 48 8D 6D F8 
	call	 ( C, ) 	# 42C0AB E8 C8 8E FD FF 
	ret		# 42C0B0 C3 
//: sahf  	$9e C, ;

sahf:
	mov	%rax,-0x08(%rbp)	# 42C0B1 48 89 45 F8 
	mov	$0x9E,%eax	# 42C0B5 B8 9E 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C0BA 48 8D 6D F8 
	call	 ( C, ) 	# 42C0BE E8 B5 8E FD FF 
	ret		# 42C0C3 C3 
//: lahf  	$9f C, ;

lahf:
	mov	%rax,-0x08(%rbp)	# 42C0C4 48 89 45 F8 
	mov	$0x9F,%eax	# 42C0C8 B8 9F 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C0CD 48 8D 6D F8 
	call	 ( C, ) 	# 42C0D1 E8 A2 8E FD FF 
	ret		# 42C0D6 C3 
//: movsl  	$a5 C, ;

movsl:
	mov	%rax,-0x08(%rbp)	# 42C0D7 48 89 45 F8 
	mov	$0xA5,%eax	# 42C0DB B8 A5 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C0E0 48 8D 6D F8 
	call	 ( C, ) 	# 42C0E4 E8 8F 8E FD FF 
	ret		# 42C0E9 C3 
//: cmpsb  	$a6 C, ;

cmpsb:
	mov	%rax,-0x08(%rbp)	# 42C0EA 48 89 45 F8 
	mov	$0xA6,%eax	# 42C0EE B8 A6 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C0F3 48 8D 6D F8 
	call	 ( C, ) 	# 42C0F7 E8 7C 8E FD FF 
	ret		# 42C0FC C3 
//: cmpsl  	$a7 C, ;

cmpsl:
	mov	%rax,-0x08(%rbp)	# 42C0FD 48 89 45 F8 
	mov	$0xA7,%eax	# 42C101 B8 A7 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C106 48 8D 6D F8 
	call	 ( C, ) 	# 42C10A E8 69 8E FD FF 
	ret		# 42C10F C3 
//: stosb  	$aa C, ;

stosb:
	mov	%rax,-0x08(%rbp)	# 42C110 48 89 45 F8 
	mov	$0xAA,%eax	# 42C114 B8 AA 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C119 48 8D 6D F8 
	call	 ( C, ) 	# 42C11D E8 56 8E FD FF 
	ret		# 42C122 C3 
//: stos  	$ab C, ;

stos:
	mov	%rax,-0x08(%rbp)	# 42C123 48 89 45 F8 
	mov	$0xAB,%eax	# 42C127 B8 AB 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C12C 48 8D 6D F8 
	call	 ( C, ) 	# 42C130 E8 43 8E FD FF 
	ret		# 42C135 C3 
//: lodsb  	$ac C, ;

lodsb:
	mov	%rax,-0x08(%rbp)	# 42C136 48 89 45 F8 
	mov	$0xAC,%eax	# 42C13A B8 AC 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C13F 48 8D 6D F8 
	call	 ( C, ) 	# 42C143 E8 30 8E FD FF 
	ret		# 42C148 C3 
//: lods  	$ad C, ;

lods:
	mov	%rax,-0x08(%rbp)	# 42C149 48 89 45 F8 
	mov	$0xAD,%eax	# 42C14D B8 AD 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C152 48 8D 6D F8 
	call	 ( C, ) 	# 42C156 E8 1D 8E FD FF 
	ret		# 42C15B C3 
//: scasb  	$ae C, ;

scasb:
	mov	%rax,-0x08(%rbp)	# 42C15C 48 89 45 F8 
	mov	$0xAE,%eax	# 42C160 B8 AE 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C165 48 8D 6D F8 
	call	 ( C, ) 	# 42C169 E8 A 8E FD FF 
	ret		# 42C16E C3 
//: scas  	$af C, ;

scas:
	mov	%rax,-0x08(%rbp)	# 42C16F 48 89 45 F8 
	mov	$0xAF,%eax	# 42C173 B8 AF 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C178 48 8D 6D F8 
	call	 ( C, ) 	# 42C17C E8 F7 8D FD FF 
	ret		# 42C181 C3 
//: lret		$cb C, ;

lret:
	mov	%rax,-0x08(%rbp)	# 42C182 48 89 45 F8 
	mov	$0xCB,%eax	# 42C186 B8 CB 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C18B 48 8D 6D F8 
	call	 ( C, ) 	# 42C18F E8 E4 8D FD FF 
	ret		# 42C194 C3 
//: int3		$cc C, ;

int3:
	mov	%rax,-0x08(%rbp)	# 42C195 48 89 45 F8 
	mov	$0xCC,%eax	# 42C199 B8 CC 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C19E 48 8D 6D F8 
	call	 ( C, ) 	# 42C1A2 E8 D1 8D FD FF 
	ret		# 42C1A7 C3 
//: lock  	$f0 C, ;

lock:
	mov	%rax,-0x08(%rbp)	# 42C1A8 48 89 45 F8 
	mov	$0xF0,%eax	# 42C1AC B8 F0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C1B1 48 8D 6D F8 
	call	 ( C, ) 	# 42C1B5 E8 BE 8D FD FF 
	ret		# 42C1BA C3 
//: icebp  	$f1 C, ; \ int1

icebp:
	mov	%rax,-0x08(%rbp)	# 42C1BB 48 89 45 F8 
	mov	$0xF1,%eax	# 42C1BF B8 F1 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C1C4 48 8D 6D F8 
	call	 ( C, ) 	# 42C1C8 E8 AB 8D FD FF 
	ret		# 42C1CD C3 
//: rep		$f3 C, ;

rep:
	mov	%rax,-0x08(%rbp)	# 42C1CE 48 89 45 F8 
	mov	$0xF3,%eax	# 42C1D2 B8 F3 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C1D7 48 8D 6D F8 
	call	 ( C, ) 	# 42C1DB E8 98 8D FD FF 
	ret		# 42C1E0 C3 
//: hlt		$f4 C, ;

hlt:
	mov	%rax,-0x08(%rbp)	# 42C1E1 48 89 45 F8 
	mov	$0xF4,%eax	# 42C1E5 B8 F4 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C1EA 48 8D 6D F8 
	call	 ( C, ) 	# 42C1EE E8 85 8D FD FF 
	ret		# 42C1F3 C3 
//: cmc		$f5 C, ;

cmc:
	mov	%rax,-0x08(%rbp)	# 42C1F4 48 89 45 F8 
	mov	$0xF5,%eax	# 42C1F8 B8 F5 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C1FD 48 8D 6D F8 
	call	 ( C, ) 	# 42C201 E8 72 8D FD FF 
	ret		# 42C206 C3 
//: clc		$f8 C, ;

clc:
	mov	%rax,-0x08(%rbp)	# 42C207 48 89 45 F8 
	mov	$0xF8,%eax	# 42C20B B8 F8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C210 48 8D 6D F8 
	call	 ( C, ) 	# 42C214 E8 5F 8D FD FF 
	ret		# 42C219 C3 
//: stc		$f9 C, ;

stc:
	mov	%rax,-0x08(%rbp)	# 42C21A 48 89 45 F8 
	mov	$0xF9,%eax	# 42C21E B8 F9 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C223 48 8D 6D F8 
	call	 ( C, ) 	# 42C227 E8 4C 8D FD FF 
	ret		# 42C22C C3 
//: cli		$fa C, ;

cli:
	mov	%rax,-0x08(%rbp)	# 42C22D 48 89 45 F8 
	mov	$0xFA,%eax	# 42C231 B8 FA 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C236 48 8D 6D F8 
	call	 ( C, ) 	# 42C23A E8 39 8D FD FF 
	ret		# 42C23F C3 
//: sti		$fb C, ;

sti:
	mov	%rax,-0x08(%rbp)	# 42C240 48 89 45 F8 
	mov	$0xFB,%eax	# 42C244 B8 FB 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C249 48 8D 6D F8 
	call	 ( C, ) 	# 42C24D E8 26 8D FD FF 
	ret		# 42C252 C3 
//: cld		$fc C, ;

cld:
	mov	%rax,-0x08(%rbp)	# 42C253 48 89 45 F8 
	mov	$0xFC,%eax	# 42C257 B8 FC 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C25C 48 8D 6D F8 
	call	 ( C, ) 	# 42C260 E8 13 8D FD FF 
	ret		# 42C265 C3 
//: std		$fd C, ;

std:
	mov	%rax,-0x08(%rbp)	# 42C266 48 89 45 F8 
	mov	$0xFD,%eax	# 42C26A B8 FD 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C26F 48 8D 6D F8 
	call	 ( C, ) 	# 42C273 E8 0 8D FD FF 
	ret		# 42C278 C3 
//

//: syscall	$050F W, ;

syscall:
	mov	%rax,-0x08(%rbp)	# 42C279 48 89 45 F8 
	mov	$0x50F,%eax	# 42C27D B8 F 5 0 0 
	lea	-0x08(%rbp),%rbp	# 42C282 48 8D 6D F8 
	call	 ( W, ) 	# 42C286 E8 CB 8C FD FF 
	ret		# 42C28B C3 
//: clts		$060F W, ;

clts:
	mov	%rax,-0x08(%rbp)	# 42C28C 48 89 45 F8 
	mov	$0x60F,%eax	# 42C290 B8 F 6 0 0 
	lea	-0x08(%rbp),%rbp	# 42C295 48 8D 6D F8 
	call	 ( W, ) 	# 42C299 E8 B8 8C FD FF 
	ret		# 42C29E C3 
//: invd		$080F W, ;

invd:
	mov	%rax,-0x08(%rbp)	# 42C29F 48 89 45 F8 
	mov	$0x80F,%eax	# 42C2A3 B8 F 8 0 0 
	lea	-0x08(%rbp),%rbp	# 42C2A8 48 8D 6D F8 
	call	 ( W, ) 	# 42C2AC E8 A5 8C FD FF 
	ret		# 42C2B1 C3 
//: wbinvd	$090F W, ;

wbinvd:
	mov	%rax,-0x08(%rbp)	# 42C2B2 48 89 45 F8 
	mov	$0x90F,%eax	# 42C2B6 B8 F 9 0 0 
	lea	-0x08(%rbp),%rbp	# 42C2BB 48 8D 6D F8 
	call	 ( W, ) 	# 42C2BF E8 92 8C FD FF 
	ret		# 42C2C4 C3 
//: ud2		$0B0F W, ;

ud2:
	mov	%rax,-0x08(%rbp)	# 42C2C5 48 89 45 F8 
	mov	$0xB0F,%eax	# 42C2C9 B8 F B 0 0 
	lea	-0x08(%rbp),%rbp	# 42C2CE 48 8D 6D F8 
	call	 ( W, ) 	# 42C2D2 E8 7F 8C FD FF 
	ret		# 42C2D7 C3 
//: femms   	$0e0f W, ;

femms:
	mov	%rax,-0x08(%rbp)	# 42C2D8 48 89 45 F8 
	mov	$0xE0F,%eax	# 42C2DC B8 F E 0 0 
	lea	-0x08(%rbp),%rbp	# 42C2E1 48 8D 6D F8 
	call	 ( W, ) 	# 42C2E5 E8 6C 8C FD FF 
	ret		# 42C2EA C3 
//: wrmsr   	$300f W, ;

wrmsr:
	mov	%rax,-0x08(%rbp)	# 42C2EB 48 89 45 F8 
	mov	$0x300F,%eax	# 42C2EF B8 F 30 0 0 
	lea	-0x08(%rbp),%rbp	# 42C2F4 48 8D 6D F8 
	call	 ( W, ) 	# 42C2F8 E8 59 8C FD FF 
	ret		# 42C2FD C3 
//: rdtsc   	$310f W, ;

rdtsc:
	mov	%rax,-0x08(%rbp)	# 42C2FE 48 89 45 F8 
	mov	$0x310F,%eax	# 42C302 B8 F 31 0 0 
	lea	-0x08(%rbp),%rbp	# 42C307 48 8D 6D F8 
	call	 ( W, ) 	# 42C30B E8 46 8C FD FF 
	ret		# 42C310 C3 
//: rdmsr   	$320f W, ;

rdmsr:
	mov	%rax,-0x08(%rbp)	# 42C311 48 89 45 F8 
	mov	$0x320F,%eax	# 42C315 B8 F 32 0 0 
	lea	-0x08(%rbp),%rbp	# 42C31A 48 8D 6D F8 
	call	 ( W, ) 	# 42C31E E8 33 8C FD FF 
	ret		# 42C323 C3 
//: rdpmc   	$330f W, ;

rdpmc:
	mov	%rax,-0x08(%rbp)	# 42C324 48 89 45 F8 
	mov	$0x330F,%eax	# 42C328 B8 F 33 0 0 
	lea	-0x08(%rbp),%rbp	# 42C32D 48 8D 6D F8 
	call	 ( W, ) 	# 42C331 E8 20 8C FD FF 
	ret		# 42C336 C3 
//: sysenter	$340f W, ; 

sysenter:
	mov	%rax,-0x08(%rbp)	# 42C337 48 89 45 F8 
	mov	$0x340F,%eax	# 42C33B B8 F 34 0 0 
	lea	-0x08(%rbp),%rbp	# 42C340 48 8D 6D F8 
	call	 ( W, ) 	# 42C344 E8 D 8C FD FF 
	ret		# 42C349 C3 
//: sysexit 	$350f W, ;

sysexit:
	mov	%rax,-0x08(%rbp)	# 42C34A 48 89 45 F8 
	mov	$0x350F,%eax	# 42C34E B8 F 35 0 0 
	lea	-0x08(%rbp),%rbp	# 42C353 48 8D 6D F8 
	call	 ( W, ) 	# 42C357 E8 FA 8B FD FF 
	ret		# 42C35C C3 
//: getsec  	$370f W, ;

getsec:
	mov	%rax,-0x08(%rbp)	# 42C35D 48 89 45 F8 
	mov	$0x370F,%eax	# 42C361 B8 F 37 0 0 
	lea	-0x08(%rbp),%rbp	# 42C366 48 8D 6D F8 
	call	 ( W, ) 	# 42C36A E8 E7 8B FD FF 
	ret		# 42C36F C3 
//: emms    	$770f W, ;

emms:
	mov	%rax,-0x08(%rbp)	# 42C370 48 89 45 F8 
	mov	$0x770F,%eax	# 42C374 B8 F 77 0 0 
	lea	-0x08(%rbp),%rbp	# 42C379 48 8D 6D F8 
	call	 ( W, ) 	# 42C37D E8 D4 8B FD FF 
	ret		# 42C382 C3 
//: cpuid   	$a20f W, ;

cpuid:
	mov	%rax,-0x08(%rbp)	# 42C383 48 89 45 F8 
	mov	$0xA20F,%eax	# 42C387 B8 F A2 0 0 
	lea	-0x08(%rbp),%rbp	# 42C38C 48 8D 6D F8 
	call	 ( W, ) 	# 42C390 E8 C1 8B FD FF 
	ret		# 42C395 C3 
//: rsm     	$aa0f W, ;

rsm:
	mov	%rax,-0x08(%rbp)	# 42C396 48 89 45 F8 
	mov	$0xAA0F,%eax	# 42C39A B8 F AA 0 0 
	lea	-0x08(%rbp),%rbp	# 42C39F 48 8D 6D F8 
	call	 ( W, ) 	# 42C3A3 E8 AE 8B FD FF 
	ret		# 42C3A8 C3 
//: ud1     	$b90f W, ; 

ud1:
	mov	%rax,-0x08(%rbp)	# 42C3A9 48 89 45 F8 
	mov	$0xB90F,%eax	# 42C3AD B8 F B9 0 0 
	lea	-0x08(%rbp),%rbp	# 42C3B2 48 8D 6D F8 
	call	 ( W, ) 	# 42C3B6 E8 9B 8B FD FF 
	ret		# 42C3BB C3 
//

//

//: cltq		$9848 W, ;               	

cltq:
	mov	%rax,-0x08(%rbp)	# 42C3BC 48 89 45 F8 
	mov	$0x9848,%eax	# 42C3C0 B8 48 98 0 0 
	lea	-0x08(%rbp),%rbp	# 42C3C5 48 8D 6D F8 
	call	 ( W, ) 	# 42C3C9 E8 88 8B FD FF 
	ret		# 42C3CE C3 
//: cqto		$9948 W, ;               	

cqto:
	mov	%rax,-0x08(%rbp)	# 42C3CF 48 89 45 F8 
	mov	$0x9948,%eax	# 42C3D3 B8 48 99 0 0 
	lea	-0x08(%rbp),%rbp	# 42C3D8 48 8D 6D F8 
	call	 ( W, ) 	# 42C3DC E8 75 8B FD FF 
	ret		# 42C3E1 C3 
//: lretq		$cb48 W, ;               	

lretq:
	mov	%rax,-0x08(%rbp)	# 42C3E2 48 89 45 F8 
	mov	$0xCB48,%eax	# 42C3E6 B8 48 CB 0 0 
	lea	-0x08(%rbp),%rbp	# 42C3EB 48 8D 6D F8 
	call	 ( W, ) 	# 42C3EF E8 62 8B FD FF 
	ret		# 42C3F4 C3 
//

//: rex	 	$40 C, ;

rex:
	mov	%rax,-0x08(%rbp)	# 42C3F5 48 89 45 F8 
	mov	$0x40,%eax	# 42C3F9 B8 40 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C3FE 48 8D 6D F8 
	call	 ( C, ) 	# 42C402 E8 71 8B FD FF 
	ret		# 42C407 C3 
//: rex.B		$41 C, ;

rexdotB:
	mov	%rax,-0x08(%rbp)	# 42C408 48 89 45 F8 
	mov	$0x41,%eax	# 42C40C B8 41 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C411 48 8D 6D F8 
	call	 ( C, ) 	# 42C415 E8 5E 8B FD FF 
	ret		# 42C41A C3 
//: rex.X		$42 C, ;

rexdotX:
	mov	%rax,-0x08(%rbp)	# 42C41B 48 89 45 F8 
	mov	$0x42,%eax	# 42C41F B8 42 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C424 48 8D 6D F8 
	call	 ( C, ) 	# 42C428 E8 4B 8B FD FF 
	ret		# 42C42D C3 
//: rex.XB	$43 C, ;

rexdotXB:
	mov	%rax,-0x08(%rbp)	# 42C42E 48 89 45 F8 
	mov	$0x43,%eax	# 42C432 B8 43 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C437 48 8D 6D F8 
	call	 ( C, ) 	# 42C43B E8 38 8B FD FF 
	ret		# 42C440 C3 
//: rex.R		$44 C, ;

rexdotR:
	mov	%rax,-0x08(%rbp)	# 42C441 48 89 45 F8 
	mov	$0x44,%eax	# 42C445 B8 44 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C44A 48 8D 6D F8 
	call	 ( C, ) 	# 42C44E E8 25 8B FD FF 
	ret		# 42C453 C3 
//: rex.RB	$45 C, ;

rexdotRB:
	mov	%rax,-0x08(%rbp)	# 42C454 48 89 45 F8 
	mov	$0x45,%eax	# 42C458 B8 45 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C45D 48 8D 6D F8 
	call	 ( C, ) 	# 42C461 E8 12 8B FD FF 
	ret		# 42C466 C3 
//: rex.RX	$46 C, ;

rexdotRX:
	mov	%rax,-0x08(%rbp)	# 42C467 48 89 45 F8 
	mov	$0x46,%eax	# 42C46B B8 46 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C470 48 8D 6D F8 
	call	 ( C, ) 	# 42C474 E8 FF 8A FD FF 
	ret		# 42C479 C3 
//: rex.RXB	$47 C, ;

rexdotRXB:
	mov	%rax,-0x08(%rbp)	# 42C47A 48 89 45 F8 
	mov	$0x47,%eax	# 42C47E B8 47 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C483 48 8D 6D F8 
	call	 ( C, ) 	# 42C487 E8 EC 8A FD FF 
	ret		# 42C48C C3 
//: REX.W		$48 C, ;

REXdotW:
	mov	%rax,-0x08(%rbp)	# 42C48D 48 89 45 F8 
	mov	$0x48,%eax	# 42C491 B8 48 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C496 48 8D 6D F8 
	call	 ( C, ) 	# 42C49A E8 D9 8A FD FF 
	ret		# 42C49F C3 
//: REX_WB	$49 C, ;

REX_WB:
	mov	%rax,-0x08(%rbp)	# 42C4A0 48 89 45 F8 
	mov	$0x49,%eax	# 42C4A4 B8 49 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C4A9 48 8D 6D F8 
	call	 ( C, ) 	# 42C4AD E8 C6 8A FD FF 
	ret		# 42C4B2 C3 
//: REX_WX	$4a C, ;

REX_WX:
	mov	%rax,-0x08(%rbp)	# 42C4B3 48 89 45 F8 
	mov	$0x4A,%eax	# 42C4B7 B8 4A 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C4BC 48 8D 6D F8 
	call	 ( C, ) 	# 42C4C0 E8 B3 8A FD FF 
	ret		# 42C4C5 C3 
//: REX_WXB	$4b C, ;

REX_WXB:
	mov	%rax,-0x08(%rbp)	# 42C4C6 48 89 45 F8 
	mov	$0x4B,%eax	# 42C4CA B8 4B 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C4CF 48 8D 6D F8 
	call	 ( C, ) 	# 42C4D3 E8 A0 8A FD FF 
	ret		# 42C4D8 C3 
//: REX_WR	$4c C, ;

REX_WR:
	mov	%rax,-0x08(%rbp)	# 42C4D9 48 89 45 F8 
	mov	$0x4C,%eax	# 42C4DD B8 4C 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C4E2 48 8D 6D F8 
	call	 ( C, ) 	# 42C4E6 E8 8D 8A FD FF 
	ret		# 42C4EB C3 
//: REX_WRB	$4d C, ;

REX_WRB:
	mov	%rax,-0x08(%rbp)	# 42C4EC 48 89 45 F8 
	mov	$0x4D,%eax	# 42C4F0 B8 4D 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C4F5 48 8D 6D F8 
	call	 ( C, ) 	# 42C4F9 E8 7A 8A FD FF 
	ret		# 42C4FE C3 
//: REX_WRX	$4e C, ;

REX_WRX:
	mov	%rax,-0x08(%rbp)	# 42C4FF 48 89 45 F8 
	mov	$0x4E,%eax	# 42C503 B8 4E 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C508 48 8D 6D F8 
	call	 ( C, ) 	# 42C50C E8 67 8A FD FF 
	ret		# 42C511 C3 
//: REX_WRXB 	$4f C, ;

REX_WRXB:
	mov	%rax,-0x08(%rbp)	# 42C512 48 89 45 F8 
	mov	$0x4F,%eax	# 42C516 B8 4F 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C51B 48 8D 6D F8 
	call	 ( C, ) 	# 42C51F E8 54 8A FD FF 
	ret		# 42C524 C3 
//

//: endbr64    $fa1e0ff3 L, ;

endbr64:
	mov	%rax,-0x08(%rbp)	# 42C525 48 89 45 F8 
	mov	$0xFA1E0FF3,%eax	# 42C529 B8 F3 F 1E FA 
	lea	-0x08(%rbp),%rbp	# 42C52E 48 8D 6D F8 
	call	 ( L, ) 	# 42C532 E8 FE 89 FD FF 
	ret		# 42C537 C3 
//

//

//: not_  ( c -- cod )

//  ?REX,  $f6 REG>8 OR C, ;

not_:
	call	 ( ?REX, ) 	# 42C538 E8 5E FA FF FF 
	mov	%rax,-0x08(%rbp)	# 42C53D 48 89 45 F8 
	movq	$0xF6,-0x10(%rbp)	# 42C541 48 C7 45 F0 F6 0 0 0 
	mov	 ( REG>8+5  ) (%rip),%rax	# 42C549 48 8B 5 19 F1 FF FF 
	or	-0x10(%rbp),%rax	# 42C550 48 B 45 F0 
	lea	-0x08(%rbp),%rbp	# 42C554 48 8D 6D F8 
	call	 ( C, ) 	# 42C558 E8 1B 8A FD FF 
	ret		# 42C55D C3 
//

//: inc, 	?REX, $ff C, $C0 |;

inccom:
	call	 ( ?REX, ) 	# 42C55E E8 38 FA FF FF 
	mov	%rax,-0x08(%rbp)	# 42C563 48 89 45 F8 
	mov	$0xFF,%eax	# 42C567 B8 FF 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C56C 48 8D 6D F8 
	call	 ( C, ) 	# 42C570 E8 3 8A FD FF 
	mov	%rax,-0x08(%rbp)	# 42C575 48 89 45 F8 
	mov	$0xC0,%eax	# 42C579 B8 C0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C57E 48 8D 6D F8 
	call	 ( DO|; ) 	# 42C582 E8 3E FA FF FF 
	ret		# 42C587 C3 
//: dec, 	?REX, $ff C, $C8 |;

deccom:
	call	 ( ?REX, ) 	# 42C588 E8 E FA FF FF 
	mov	%rax,-0x08(%rbp)	# 42C58D 48 89 45 F8 
	mov	$0xFF,%eax	# 42C591 B8 FF 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C596 48 8D 6D F8 
	call	 ( C, ) 	# 42C59A E8 D9 89 FD FF 
	mov	%rax,-0x08(%rbp)	# 42C59F 48 89 45 F8 
	mov	$0xC8,%eax	# 42C5A3 B8 C8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C5A8 48 8D 6D F8 
	call	 ( DO|; ) 	# 42C5AC E8 14 FA FF FF 
	ret		# 42C5B1 C3 
//: bswap,	?REX, $0f C, $C8 |;

bswapcom:
	call	 ( ?REX, ) 	# 42C5B2 E8 E4 F9 FF FF 
	mov	%rax,-0x08(%rbp)	# 42C5B7 48 89 45 F8 
	mov	$0xF,%eax	# 42C5BB B8 F 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C5C0 48 8D 6D F8 
	call	 ( C, ) 	# 42C5C4 E8 AF 89 FD FF 
	mov	%rax,-0x08(%rbp)	# 42C5C9 48 89 45 F8 
	mov	$0xC8,%eax	# 42C5CD B8 C8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C5D2 48 8D 6D F8 
	call	 ( DO|; ) 	# 42C5D6 E8 EA F9 FF FF 
	ret		# 42C5DB C3 
//

//: (()),

//\ CR ." ((00=)" .S KEY DROP

// #%r_x IF  OR	$C0 DO|; 	BREAK

cbigcbigcendcendcom:
	call	 ( #%r_x ) 	# 42C5DC E8 42 F7 FF FF 
	test	%rax,%rax	# 42C5E1 48 85 C0 
	mov	0x00(%rbp),%rax	# 42C5E4 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42C5E8 48 8D 6D 8 
	jz	 ( (()),+29  ) 	# 42C5EC F 84 13 0 0 0 
	or	0x00(%rbp),%rax	# 42C5F2 48 B 45 0 
	mov	%rax,0x00(%rbp)	# 42C5F6 48 89 45 0 
	mov	$0xC0,%eax	# 42C5FA B8 C0 0 0 0 
	call	 ( DO|; ) 	# 42C5FF E8 C1 F9 FF FF 
	ret		# 42C604 C3 
//

// #(%rip) IF 5 DO|; ((OFFSET L,  BREAK

	call	 ( #(%rip) ) 	# 42C605 E8 C9 F7 FF FF 
	test	%rax,%rax	# 42C60A 48 85 C0 
	mov	0x00(%rbp),%rax	# 42C60D 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42C611 48 8D 6D 8 
	jz	 ( (()),+66  ) 	# 42C615 F 84 27 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42C61B 48 89 45 F8 
	mov	$0x5,%eax	# 42C61F B8 5 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C624 48 8D 6D F8 
	call	 ( DO|; ) 	# 42C628 E8 98 F9 FF FF 
	mov	%rax,-0x08(%rbp)	# 42C62D 48 89 45 F8 
	mov	 ( ((OFFSET+5  ) (%rip),%rax	# 42C631 48 8B 5 FD EF FF FF 
	lea	-0x08(%rbp),%rbp	# 42C638 48 8D 6D F8 
	call	 ( L, ) 	# 42C63C E8 F4 88 FD FF 
	ret		# 42C641 C3 
// #(%r_x)

	call	 ( #(%r_x) ) 	# 42C642 E8 C F7 FF FF 
//\ CR ." ((22=)" .S KEY DROP

// IF	>>)) IF 4 DO|; 3 << 5 OR >>)) OR C, ((OFFSET L,	BREAK

	test	%rax,%rax	# 42C647 48 85 C0 
	mov	0x00(%rbp),%rax	# 42C64A 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42C64E 48 8D 6D 8 
	jz	 ( (()),+219  ) 	# 42C652 F 84 9D 1 0 0 
	mov	%rax,-0x08(%rbp)	# 42C658 48 89 45 F8 
	mov	 ( >>))+5  ) (%rip),%rax	# 42C65C 48 8B 5 2D F0 FF FF 
	test	%rax,%rax	# 42C663 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42C666 48 8B 45 F8 
	jz	 ( (()),+D1  ) 	# 42C66A F 84 3D 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42C670 48 89 45 F8 
	mov	$0x4,%eax	# 42C674 B8 4 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C679 48 8D 6D F8 
	call	 ( DO|; ) 	# 42C67D E8 43 F9 FF FF 
	shl	$0x03,%rax	# 42C682 48 C1 E0 3 
	or	$0x5,%rax	# 42C686 48 D 5 0 0 0 
	or	 ( >>))+5  ) (%rip),%rax	# 42C68C 48 B 5 FD EF FF FF 
	call	 ( C, ) 	# 42C693 E8 E0 88 FD FF 
	mov	%rax,-0x08(%rbp)	# 42C698 48 89 45 F8 
	mov	 ( ((OFFSET+5  ) (%rip),%rax	# 42C69C 48 8B 5 92 EF FF FF 
	lea	-0x08(%rbp),%rbp	# 42C6A3 48 8D 6D F8 
	call	 ( L, ) 	# 42C6A7 E8 89 88 FD FF 
	ret		# 42C6AC C3 
//	OVER 5 = ((OFFSET OR 

	mov	%rax,-0x08(%rbp)	# 42C6AD 48 89 45 F8 
	mov	0x00(%rbp),%rax	# 42C6B1 48 8B 45 0 
	xor	$0x5,%rax	# 42C6B5 48 35 5 0 0 0 
	sub	$0x01,%rax	# 42C6BB 48 83 E8 1 
	sbb	%rax,%rax	# 42C6BF 48 19 C0 
	or	 ( ((OFFSET+5  ) (%rip),%rax	# 42C6C2 48 B 5 6C EF FF FF 
	test	%rax,%rax	# 42C6C9 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42C6CC 48 8B 45 F8 
//  IF	((OFFSET SHORT?

	jz	 ( (()),+1D7  ) 	# 42C6D0 F 84 DD 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42C6D6 48 89 45 F8 
	mov	 ( ((OFFSET+5  ) (%rip),%rax	# 42C6DA 48 8B 5 54 EF FF FF 
	lea	-0x08(%rbp),%rbp	# 42C6E1 48 8D 6D F8 
	call	 ( SHORT? ) 	# 42C6E5 E8 70 8F FD FF 
//	IF	$40 OR OVER DO|; 4 = IF $24 C, THEN ((OFFSET C,

	test	%rax,%rax	# 42C6EA 48 85 C0 
	mov	0x00(%rbp),%rax	# 42C6ED 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42C6F1 48 8D 6D 8 
	jz	 ( (()),+17B  ) 	# 42C6F5 F 84 5C 0 0 0 
	or	$0x40,%rax	# 42C6FB 48 D 40 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42C701 48 89 45 F8 
	mov	0x00(%rbp),%rax	# 42C705 48 8B 45 0 
	lea	-0x08(%rbp),%rbp	# 42C709 48 8D 6D F8 
	call	 ( DO|; ) 	# 42C70D E8 B3 F8 FF FF 
	xor	$0x4,%rax	# 42C712 48 35 4 0 0 0 
	sub	$0x01,%rax	# 42C718 48 83 E8 1 
	sbb	%rax,%rax	# 42C71C 48 19 C0 
	test	%rax,%rax	# 42C71F 48 85 C0 
	mov	0x00(%rbp),%rax	# 42C722 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42C726 48 8D 6D 8 
	jz	 ( (()),+166  ) 	# 42C72A F 84 12 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42C730 48 89 45 F8 
	mov	$0x24,%eax	# 42C734 B8 24 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C739 48 8D 6D F8 
	call	 ( C, ) 	# 42C73D E8 36 88 FD FF 
	mov	%rax,-0x08(%rbp)	# 42C742 48 89 45 F8 
	mov	 ( ((OFFSET+5  ) (%rip),%rax	# 42C746 48 8B 5 E8 EE FF FF 
	lea	-0x08(%rbp),%rbp	# 42C74D 48 8D 6D F8 
	call	 ( C, ) 	# 42C751 E8 22 88 FD FF 
//	BREAK	$80 OR OVER DO|; 4 = IF $24 C, THEN ((OFFSET L,

	ret		# 42C756 C3 
	or	$0x80,%rax	# 42C757 48 D 80 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42C75D 48 89 45 F8 
	mov	0x00(%rbp),%rax	# 42C761 48 8B 45 0 
	lea	-0x08(%rbp),%rbp	# 42C765 48 8D 6D F8 
	call	 ( DO|; ) 	# 42C769 E8 57 F8 FF FF 
	xor	$0x4,%rax	# 42C76E 48 35 4 0 0 0 
	sub	$0x01,%rax	# 42C774 48 83 E8 1 
	sbb	%rax,%rax	# 42C778 48 19 C0 
	test	%rax,%rax	# 42C77B 48 85 C0 
	mov	0x00(%rbp),%rax	# 42C77E 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42C782 48 8D 6D 8 
	jz	 ( (()),+1C2  ) 	# 42C786 F 84 12 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42C78C 48 89 45 F8 
	mov	$0x24,%eax	# 42C790 B8 24 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C795 48 8D 6D F8 
	call	 ( C, ) 	# 42C799 E8 DA 87 FD FF 
	mov	%rax,-0x08(%rbp)	# 42C79E 48 89 45 F8 
	mov	 ( ((OFFSET+5  ) (%rip),%rax	# 42C7A2 48 8B 5 8C EE FF FF 
	lea	-0x08(%rbp),%rbp	# 42C7A9 48 8D 6D F8 
	call	 ( L, ) 	# 42C7AD E8 83 87 FD FF 
//  BREAK

	ret		# 42C7B2 C3 
//     OVER DO|; 4 = IF $24 C, THEN

	mov	%rax,-0x08(%rbp)	# 42C7B3 48 89 45 F8 
	mov	0x00(%rbp),%rax	# 42C7B7 48 8B 45 0 
	lea	-0x08(%rbp),%rbp	# 42C7BB 48 8D 6D F8 
	call	 ( DO|; ) 	# 42C7BF E8 1 F8 FF FF 
	xor	$0x4,%rax	# 42C7C4 48 35 4 0 0 0 
	sub	$0x01,%rax	# 42C7CA 48 83 E8 1 
	sbb	%rax,%rax	# 42C7CE 48 19 C0 
	test	%rax,%rax	# 42C7D1 48 85 C0 
	mov	0x00(%rbp),%rax	# 42C7D4 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42C7D8 48 8D 6D 8 
	jz	 ( (()),+218  ) 	# 42C7DC F 84 12 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42C7E2 48 89 45 F8 
	mov	$0x24,%eax	# 42C7E6 B8 24 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C7EB 48 8D 6D F8 
	call	 ( C, ) 	# 42C7EF E8 84 87 FD FF 
//\ CR ." ((22=)" .S KEY DROP

// BREAK

	ret		# 42C7F4 C3 
// #(%r_x,%r_x) 

	call	 ( #(%r_x,%r_x) ) 	# 42C7F5 E8 69 F5 FF FF 
// IF	2 PICK 5 = \ %rbp

	test	%rax,%rax	# 42C7FA 48 85 C0 
	mov	0x00(%rbp),%rax	# 42C7FD 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42C801 48 8D 6D 8 
	jz	 ( (()),+334  ) 	# 42C805 F 84 5 1 0 0 
	mov	%rax,-0x08(%rbp)	# 42C80B 48 89 45 F8 
	mov	$0x2,%eax	# 42C80F B8 2 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C814 48 8D 6D F8 
	call	 ( PICK ) 	# 42C818 E8 AF 7F FD FF 
	xor	$0x5,%rax	# 42C81D 48 35 5 0 0 0 
	sub	$0x01,%rax	# 42C823 48 83 E8 1 
	sbb	%rax,%rax	# 42C827 48 19 C0 
//	((OFFSET OR

	or	 ( ((OFFSET+5  ) (%rip),%rax	# 42C82A 48 B 5 4 EE FF FF 
//  IF	((OFFSET SHORT? 

	test	%rax,%rax	# 42C831 48 85 C0 
	mov	0x00(%rbp),%rax	# 42C834 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42C838 48 8D 6D 8 
	jz	 ( (()),+309  ) 	# 42C83C F 84 A3 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42C842 48 89 45 F8 
	mov	 ( ((OFFSET+5  ) (%rip),%rax	# 42C846 48 8B 5 E8 ED FF FF 
	lea	-0x08(%rbp),%rbp	# 42C84D 48 8D 6D F8 
	call	 ( SHORT? ) 	# 42C851 E8 4 8E FD FF 
//	IF	$44 DO|; 3 << OR >>)) OR C, ((OFFSET C, 

	test	%rax,%rax	# 42C856 48 85 C0 
	mov	0x00(%rbp),%rax	# 42C859 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42C85D 48 8D 6D 8 
	jz	 ( (()),+2CA  ) 	# 42C861 F 84 3F 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42C867 48 89 45 F8 
	mov	$0x44,%eax	# 42C86B B8 44 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C870 48 8D 6D F8 
	call	 ( DO|; ) 	# 42C874 E8 4C F7 FF FF 
	shl	$0x03,%rax	# 42C879 48 C1 E0 3 
	or	0x00(%rbp),%rax	# 42C87D 48 B 45 0 
	or	 ( >>))+5  ) (%rip),%rax	# 42C881 48 B 5 8 EE FF FF 
	lea	0x08(%rbp),%rbp	# 42C888 48 8D 6D 8 
	call	 ( C, ) 	# 42C88C E8 E7 86 FD FF 
	mov	%rax,-0x08(%rbp)	# 42C891 48 89 45 F8 
	mov	 ( ((OFFSET+5  ) (%rip),%rax	# 42C895 48 8B 5 99 ED FF FF 
	lea	-0x08(%rbp),%rbp	# 42C89C 48 8D 6D F8 
	call	 ( C, ) 	# 42C8A0 E8 D3 86 FD FF 
//	BREAK	$84 DO|; 3 << OR >>)) OR C, ((OFFSET L, 

	ret		# 42C8A5 C3 
	mov	%rax,-0x08(%rbp)	# 42C8A6 48 89 45 F8 
	mov	$0x84,%eax	# 42C8AA B8 84 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C8AF 48 8D 6D F8 
	call	 ( DO|; ) 	# 42C8B3 E8 D F7 FF FF 
	shl	$0x03,%rax	# 42C8B8 48 C1 E0 3 
	or	0x00(%rbp),%rax	# 42C8BC 48 B 45 0 
	or	 ( >>))+5  ) (%rip),%rax	# 42C8C0 48 B 5 C9 ED FF FF 
	lea	0x08(%rbp),%rbp	# 42C8C7 48 8D 6D 8 
	call	 ( C, ) 	# 42C8CB E8 A8 86 FD FF 
	mov	%rax,-0x08(%rbp)	# 42C8D0 48 89 45 F8 
	mov	 ( ((OFFSET+5  ) (%rip),%rax	# 42C8D4 48 8B 5 5A ED FF FF 
	lea	-0x08(%rbp),%rbp	# 42C8DB 48 8D 6D F8 
	call	 ( L, ) 	# 42C8DF E8 51 86 FD FF 
//  BREAK \ ." #(%r_x,%r_x)=<" CR .S ." >" CR KEY DROP

	ret		# 42C8E4 C3 
//     4 DO|;  3 << OR >>)) OR C,

	mov	%rax,-0x08(%rbp)	# 42C8E5 48 89 45 F8 
	mov	$0x4,%eax	# 42C8E9 B8 4 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C8EE 48 8D 6D F8 
	call	 ( DO|; ) 	# 42C8F2 E8 CE F6 FF FF 
	shl	$0x03,%rax	# 42C8F7 48 C1 E0 3 
	or	0x00(%rbp),%rax	# 42C8FB 48 B 45 0 
	or	 ( >>))+5  ) (%rip),%rax	# 42C8FF 48 B 5 8A ED FF FF 
	lea	0x08(%rbp),%rbp	# 42C906 48 8D 6D 8 
	call	 ( C, ) 	# 42C90A E8 69 86 FD FF 
// BREAK

	ret		# 42C90F C3 
//   -333 THROW

	mov	%rax,-0x08(%rbp)	# 42C910 48 89 45 F8 
	movq	$-0x14D,%rax	# 42C914 48 C7 C0 B3 FE FF FF 
	lea	-0x08(%rbp),%rbp	# 42C91B 48 8D 6D F8 
	call	 ( THROW ) 	# 42C91F E8 90 8C FD FF 
//  ;

	ret		# 42C924 C3 
//

//: $f6(()), ?REX, $f6 C, (()), ;

dolf6cbigcbigcendcendcom:
	call	 ( ?REX, ) 	# 42C925 E8 71 F6 FF FF 
	mov	%rax,-0x08(%rbp)	# 42C92A 48 89 45 F8 
	mov	$0xF6,%eax	# 42C92E B8 F6 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C933 48 8D 6D F8 
	call	 ( C, ) 	# 42C937 E8 3C 86 FD FF 
	call	 ( (()), ) 	# 42C93C E8 9B FC FF FF 
	ret		# 42C941 C3 
//: notb,		$10 $f6(()), ;

notbcom:
	mov	%rax,-0x08(%rbp)	# 42C942 48 89 45 F8 
	mov	$0x10,%eax	# 42C946 B8 10 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C94B 48 8D 6D F8 
	call	 ( $f6(()), ) 	# 42C94F E8 D1 FF FF FF 
	ret		# 42C954 C3 
//: negb,		$18 $f6(()), ;

negbcom:
	mov	%rax,-0x08(%rbp)	# 42C955 48 89 45 F8 
	mov	$0x18,%eax	# 42C959 B8 18 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C95E 48 8D 6D F8 
	call	 ( $f6(()), ) 	# 42C962 E8 BE FF FF FF 
	ret		# 42C967 C3 
//: mulb,		$20 $f6(()), ;

mulbcom:
	mov	%rax,-0x08(%rbp)	# 42C968 48 89 45 F8 
	mov	$0x20,%eax	# 42C96C B8 20 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C971 48 8D 6D F8 
	call	 ( $f6(()), ) 	# 42C975 E8 AB FF FF FF 
	ret		# 42C97A C3 
//: imulb,	$28 $f6(()), ;

imulbcom:
	mov	%rax,-0x08(%rbp)	# 42C97B 48 89 45 F8 
	mov	$0x28,%eax	# 42C97F B8 28 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C984 48 8D 6D F8 
	call	 ( $f6(()), ) 	# 42C988 E8 98 FF FF FF 
	ret		# 42C98D C3 
//: divb,		$30 $f6(()), ;

divbcom:
	mov	%rax,-0x08(%rbp)	# 42C98E 48 89 45 F8 
	mov	$0x30,%eax	# 42C992 B8 30 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C997 48 8D 6D F8 
	call	 ( $f6(()), ) 	# 42C99B E8 85 FF FF FF 
	ret		# 42C9A0 C3 
//: idivb,	$38 $f6(()), ;

idivbcom:
	mov	%rax,-0x08(%rbp)	# 42C9A1 48 89 45 F8 
	mov	$0x38,%eax	# 42C9A5 B8 38 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C9AA 48 8D 6D F8 
	call	 ( $f6(()), ) 	# 42C9AE E8 72 FF FF FF 
	ret		# 42C9B3 C3 
//

//: $66f7(()), ?REX, $66f6 REG>8 OR W, (()), ;

dol66f7cbigcbigcendcendcom:
	call	 ( ?REX, ) 	# 42C9B4 E8 E2 F5 FF FF 
	mov	%rax,-0x08(%rbp)	# 42C9B9 48 89 45 F8 
	movq	$0x66F6,-0x10(%rbp)	# 42C9BD 48 C7 45 F0 F6 66 0 0 
	mov	 ( REG>8+5  ) (%rip),%rax	# 42C9C5 48 8B 5 9D EC FF FF 
	or	-0x10(%rbp),%rax	# 42C9CC 48 B 45 F0 
	lea	-0x08(%rbp),%rbp	# 42C9D0 48 8D 6D F8 
	call	 ( W, ) 	# 42C9D4 E8 7D 85 FD FF 
	call	 ( (()), ) 	# 42C9D9 E8 FE FB FF FF 
	ret		# 42C9DE C3 
//: notw,		$10 $66f7(()), ;

notwcom:
	mov	%rax,-0x08(%rbp)	# 42C9DF 48 89 45 F8 
	mov	$0x10,%eax	# 42C9E3 B8 10 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C9E8 48 8D 6D F8 
	call	 ( $66f7(()), ) 	# 42C9EC E8 C3 FF FF FF 
	ret		# 42C9F1 C3 
//: negw,		$18 $66f7(()), ;

negwcom:
	mov	%rax,-0x08(%rbp)	# 42C9F2 48 89 45 F8 
	mov	$0x18,%eax	# 42C9F6 B8 18 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42C9FB 48 8D 6D F8 
	call	 ( $66f7(()), ) 	# 42C9FF E8 B0 FF FF FF 
	ret		# 42CA04 C3 
//: mulw,		$20 $66f7(()), ;

mulwcom:
	mov	%rax,-0x08(%rbp)	# 42CA05 48 89 45 F8 
	mov	$0x20,%eax	# 42CA09 B8 20 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CA0E 48 8D 6D F8 
	call	 ( $66f7(()), ) 	# 42CA12 E8 9D FF FF FF 
	ret		# 42CA17 C3 
//: imulw,	$28 $66f7(()), ;

imulwcom:
	mov	%rax,-0x08(%rbp)	# 42CA18 48 89 45 F8 
	mov	$0x28,%eax	# 42CA1C B8 28 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CA21 48 8D 6D F8 
	call	 ( $66f7(()), ) 	# 42CA25 E8 8A FF FF FF 
	ret		# 42CA2A C3 
//: divw,		$30 $66f7(()), ;

divwcom:
	mov	%rax,-0x08(%rbp)	# 42CA2B 48 89 45 F8 
	mov	$0x30,%eax	# 42CA2F B8 30 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CA34 48 8D 6D F8 
	call	 ( $66f7(()), ) 	# 42CA38 E8 77 FF FF FF 
	ret		# 42CA3D C3 
//: idivw,	$38 $66f7(()), ;

idivwcom:
	mov	%rax,-0x08(%rbp)	# 42CA3E 48 89 45 F8 
	mov	$0x38,%eax	# 42CA42 B8 38 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CA47 48 8D 6D F8 
	call	 ( $66f7(()), ) 	# 42CA4B E8 64 FF FF FF 
	ret		# 42CA50 C3 
//

//: $f7(()), ?REX, $f6 REG>8 OR C, (()), ;

dolf7cbigcbigcendcendcom:
	call	 ( ?REX, ) 	# 42CA51 E8 45 F5 FF FF 
	mov	%rax,-0x08(%rbp)	# 42CA56 48 89 45 F8 
	movq	$0xF6,-0x10(%rbp)	# 42CA5A 48 C7 45 F0 F6 0 0 0 
	mov	 ( REG>8+5  ) (%rip),%rax	# 42CA62 48 8B 5 0 EC FF FF 
	or	-0x10(%rbp),%rax	# 42CA69 48 B 45 F0 
	lea	-0x08(%rbp),%rbp	# 42CA6D 48 8D 6D F8 
	call	 ( C, ) 	# 42CA71 E8 2 85 FD FF 
	call	 ( (()), ) 	# 42CA76 E8 61 FB FF FF 
	ret		# 42CA7B C3 
//: notl,		$10 $f7(()), ;

notlcom:
	mov	%rax,-0x08(%rbp)	# 42CA7C 48 89 45 F8 
	mov	$0x10,%eax	# 42CA80 B8 10 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CA85 48 8D 6D F8 
	call	 ( $f7(()), ) 	# 42CA89 E8 C3 FF FF FF 
	ret		# 42CA8E C3 
//: negl,		$18 $f7(()), ;

neglcom:
	mov	%rax,-0x08(%rbp)	# 42CA8F 48 89 45 F8 
	mov	$0x18,%eax	# 42CA93 B8 18 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CA98 48 8D 6D F8 
	call	 ( $f7(()), ) 	# 42CA9C E8 B0 FF FF FF 
	ret		# 42CAA1 C3 
//: mull,		$20 $f7(()), ;

mullcom:
	mov	%rax,-0x08(%rbp)	# 42CAA2 48 89 45 F8 
	mov	$0x20,%eax	# 42CAA6 B8 20 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CAAB 48 8D 6D F8 
	call	 ( $f7(()), ) 	# 42CAAF E8 9D FF FF FF 
	ret		# 42CAB4 C3 
//: imull,	$28 $f7(()), ;

imullcom:
	mov	%rax,-0x08(%rbp)	# 42CAB5 48 89 45 F8 
	mov	$0x28,%eax	# 42CAB9 B8 28 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CABE 48 8D 6D F8 
	call	 ( $f7(()), ) 	# 42CAC2 E8 8A FF FF FF 
	ret		# 42CAC7 C3 
//: divl,		$30 $f7(()), ;

divlcom:
	mov	%rax,-0x08(%rbp)	# 42CAC8 48 89 45 F8 
	mov	$0x30,%eax	# 42CACC B8 30 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CAD1 48 8D 6D F8 
	call	 ( $f7(()), ) 	# 42CAD5 E8 77 FF FF FF 
	ret		# 42CADA C3 
//: idivl,	$38 $f7(()), ;

idivlcom:
	mov	%rax,-0x08(%rbp)	# 42CADB 48 89 45 F8 
	mov	$0x38,%eax	# 42CADF B8 38 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CAE4 48 8D 6D F8 
	call	 ( $f7(()), ) 	# 42CAE8 E8 64 FF FF FF 
	ret		# 42CAED C3 
//

//: not,		$10 $f7(()), ;

notcom:
	mov	%rax,-0x08(%rbp)	# 42CAEE 48 89 45 F8 
	mov	$0x10,%eax	# 42CAF2 B8 10 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CAF7 48 8D 6D F8 
	call	 ( $f7(()), ) 	# 42CAFB E8 51 FF FF FF 
	ret		# 42CB00 C3 
//: neg,		$18 $f7(()), ;

negcom:
	mov	%rax,-0x08(%rbp)	# 42CB01 48 89 45 F8 
	mov	$0x18,%eax	# 42CB05 B8 18 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CB0A 48 8D 6D F8 
	call	 ( $f7(()), ) 	# 42CB0E E8 3E FF FF FF 
	ret		# 42CB13 C3 
//: mul,		$20 $f7(()), ;

mulcom:
	mov	%rax,-0x08(%rbp)	# 42CB14 48 89 45 F8 
	mov	$0x20,%eax	# 42CB18 B8 20 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CB1D 48 8D 6D F8 
	call	 ( $f7(()), ) 	# 42CB21 E8 2B FF FF FF 
	ret		# 42CB26 C3 
//: div,		$30 $f7(()), ;

divcom:
	mov	%rax,-0x08(%rbp)	# 42CB27 48 89 45 F8 
	mov	$0x30,%eax	# 42CB2B B8 30 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CB30 48 8D 6D F8 
	call	 ( $f7(()), ) 	# 42CB34 E8 18 FF FF FF 
	ret		# 42CB39 C3 
//: idiv,		$38 $f7(()), ;

idivcom:
	mov	%rax,-0x08(%rbp)	# 42CB3A 48 89 45 F8 
	mov	$0x38,%eax	# 42CB3E B8 38 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CB43 48 8D 6D F8 
	call	 ( $f7(()), ) 	# 42CB47 E8 5 FF FF FF 
	ret		# 42CB4C C3 
//

//: notq,		$8 TO REX_W not,	; 

notqcom:
	movq	$0x8, ( REX_W+5  ) (%rip)	# 42CB4D 48 C7 5 4 EB FF FF 8 0 0 0 
	call	 ( not, ) 	# 42CB58 E8 91 FF FF FF 
	ret		# 42CB5D C3 
//: negq,		$8 TO REX_W neg,	; 

negqcom:
	movq	$0x8, ( REX_W+5  ) (%rip)	# 42CB5E 48 C7 5 F3 EA FF FF 8 0 0 0 
	call	 ( neg, ) 	# 42CB69 E8 93 FF FF FF 
	ret		# 42CB6E C3 
//: mulq,		$8 TO REX_W mul,	; 

mulqcom:
	movq	$0x8, ( REX_W+5  ) (%rip)	# 42CB6F 48 C7 5 E2 EA FF FF 8 0 0 0 
	call	 ( mul, ) 	# 42CB7A E8 95 FF FF FF 
	ret		# 42CB7F C3 
//: imulq,	$48 C, $f7 C, $28 (()), ;

imulqcom:
	mov	%rax,-0x08(%rbp)	# 42CB80 48 89 45 F8 
	mov	$0x48,%eax	# 42CB84 B8 48 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CB89 48 8D 6D F8 
	call	 ( C, ) 	# 42CB8D E8 E6 83 FD FF 
	mov	%rax,-0x08(%rbp)	# 42CB92 48 89 45 F8 
	mov	$0xF7,%eax	# 42CB96 B8 F7 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CB9B 48 8D 6D F8 
	call	 ( C, ) 	# 42CB9F E8 D4 83 FD FF 
	mov	%rax,-0x08(%rbp)	# 42CBA4 48 89 45 F8 
	mov	$0x28,%eax	# 42CBA8 B8 28 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CBAD 48 8D 6D F8 
	call	 ( (()), ) 	# 42CBB1 E8 26 FA FF FF 
	ret		# 42CBB6 C3 
//: divq,		$8 TO REX_W div,	; 

divqcom:
	movq	$0x8, ( REX_W+5  ) (%rip)	# 42CBB7 48 C7 5 9A EA FF FF 8 0 0 0 
	call	 ( div, ) 	# 42CBC2 E8 60 FF FF FF 
	ret		# 42CBC7 C3 
//: idivq,	$8 TO REX_W idiv,	;  

idivqcom:
	movq	$0x8, ( REX_W+5  ) (%rip)	# 42CBC8 48 C7 5 89 EA FF FF 8 0 0 0 
	call	 ( idiv, ) 	# 42CBD3 E8 62 FF FF FF 
	ret		# 42CBD8 C3 
//

//

//: $f(()), ?REX, $f C, C, 0 (()), ;

dolfcbigcbigcendcendcom:
	call	 ( ?REX, ) 	# 42CBD9 E8 BD F3 FF FF 
	mov	%rax,-0x08(%rbp)	# 42CBDE 48 89 45 F8 
	mov	$0xF,%eax	# 42CBE2 B8 F 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CBE7 48 8D 6D F8 
	call	 ( C, ) 	# 42CBEB E8 88 83 FD FF 
	call	 ( C, ) 	# 42CBF0 E8 83 83 FD FF 
	mov	%rax,-0x08(%rbp)	# 42CBF5 48 89 45 F8 
	mov	$0x0,%eax	# 42CBF9 B8 0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CBFE 48 8D 6D F8 
	call	 ( (()), ) 	# 42CC02 E8 D5 F9 FF FF 
	ret		# 42CC07 C3 
//: sldt,		$00 $f(()), ;

sldtcom:
	mov	%rax,-0x08(%rbp)	# 42CC08 48 89 45 F8 
	mov	$0x0,%eax	# 42CC0C B8 0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CC11 48 8D 6D F8 
	call	 ( $f(()), ) 	# 42CC15 E8 BF FF FF FF 
	ret		# 42CC1A C3 
//: sgdt,		$01 $f(()), ;

sgdtcom:
	mov	%rax,-0x08(%rbp)	# 42CC1B 48 89 45 F8 
	mov	$0x1,%eax	# 42CC1F B8 1 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CC24 48 8D 6D F8 
	call	 ( $f(()), ) 	# 42CC28 E8 AC FF FF FF 
	ret		# 42CC2D C3 
//: prefetch,	$0d $f(()), ;

prefetchcom:
	mov	%rax,-0x08(%rbp)	# 42CC2E 48 89 45 F8 
	mov	$0xD,%eax	# 42CC32 B8 D 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CC37 48 8D 6D F8 
	call	 ( $f(()), ) 	# 42CC3B E8 99 FF FF FF 
	ret		# 42CC40 C3 
//: fxsave, 	$ae $f(()), ;

fxsavecom:
	mov	%rax,-0x08(%rbp)	# 42CC41 48 89 45 F8 
	mov	$0xAE,%eax	# 42CC45 B8 AE 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CC4A 48 8D 6D F8 
	call	 ( $f(()), ) 	# 42CC4E E8 86 FF FF FF 
	ret		# 42CC53 C3 
//

//: SET,

//	$f C, C,

SETcom:
	mov	%rax,-0x08(%rbp)	# 42CC54 48 89 45 F8 
	mov	$0xF,%eax	# 42CC58 B8 F 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CC5D 48 8D 6D F8 
	call	 ( C, ) 	# 42CC61 E8 12 83 FD FF 
	call	 ( C, ) 	# 42CC66 E8 D 83 FD FF 
//  #%r_x

	call	 ( #%r_x ) 	# 42CC6B E8 B3 F0 FF FF 
//\ CR ." SET00=" .S KEY DROP

//	IF \ REG>8 IF -333 THROW THEN

	test	%rax,%rax	# 42CC70 48 85 C0 
	mov	0x00(%rbp),%rax	# 42CC73 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42CC77 48 8D 6D 8 
	jz	 ( SET,+40  ) 	# 42CC7B F 84 13 0 0 0 
// $C0 DO|; BREAK

	mov	%rax,-0x08(%rbp)	# 42CC81 48 89 45 F8 
	mov	$0xC0,%eax	# 42CC85 B8 C0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CC8A 48 8D 6D F8 
	call	 ( DO|; ) 	# 42CC8E E8 32 F3 FF FF 
	ret		# 42CC93 C3 
//  0 (()), ;

	mov	%rax,-0x08(%rbp)	# 42CC94 48 89 45 F8 
	mov	$0x0,%eax	# 42CC98 B8 0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CC9D 48 8D 6D F8 
	call	 ( (()), ) 	# 42CCA1 E8 36 F9 FF FF 
	ret		# 42CCA6 C3 
//

//

//: seto, 	$90 SET, ;

setocom:
	mov	%rax,-0x08(%rbp)	# 42CCA7 48 89 45 F8 
	mov	$0x90,%eax	# 42CCAB B8 90 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CCB0 48 8D 6D F8 
	call	 ( SET, ) 	# 42CCB4 E8 9B FF FF FF 
	ret		# 42CCB9 C3 
//: setno,	$91 SET, ;

setnocom:
	mov	%rax,-0x08(%rbp)	# 42CCBA 48 89 45 F8 
	mov	$0x91,%eax	# 42CCBE B8 91 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CCC3 48 8D 6D F8 
	call	 ( SET, ) 	# 42CCC7 E8 88 FF FF FF 
	ret		# 42CCCC C3 
//: setb, 	$92 SET, ;

setbcom:
	mov	%rax,-0x08(%rbp)	# 42CCCD 48 89 45 F8 
	mov	$0x92,%eax	# 42CCD1 B8 92 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CCD6 48 8D 6D F8 
	call	 ( SET, ) 	# 42CCDA E8 75 FF FF FF 
	ret		# 42CCDF C3 
//: setae,	$93 SET, ;

setaecom:
	mov	%rax,-0x08(%rbp)	# 42CCE0 48 89 45 F8 
	mov	$0x93,%eax	# 42CCE4 B8 93 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CCE9 48 8D 6D F8 
	call	 ( SET, ) 	# 42CCED E8 62 FF FF FF 
	ret		# 42CCF2 C3 
//: sete, 	$94 SET, ;

setecom:
	mov	%rax,-0x08(%rbp)	# 42CCF3 48 89 45 F8 
	mov	$0x94,%eax	# 42CCF7 B8 94 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CCFC 48 8D 6D F8 
	call	 ( SET, ) 	# 42CD00 E8 4F FF FF FF 
	ret		# 42CD05 C3 
//: setne,	$95 SET, ;

setnecom:
	mov	%rax,-0x08(%rbp)	# 42CD06 48 89 45 F8 
	mov	$0x95,%eax	# 42CD0A B8 95 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CD0F 48 8D 6D F8 
	call	 ( SET, ) 	# 42CD13 E8 3C FF FF FF 
	ret		# 42CD18 C3 
//: setbe,	$96 SET, ;

setbecom:
	mov	%rax,-0x08(%rbp)	# 42CD19 48 89 45 F8 
	mov	$0x96,%eax	# 42CD1D B8 96 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CD22 48 8D 6D F8 
	call	 ( SET, ) 	# 42CD26 E8 29 FF FF FF 
	ret		# 42CD2B C3 
//: seta,		$97 SET, ;

setacom:
	mov	%rax,-0x08(%rbp)	# 42CD2C 48 89 45 F8 
	mov	$0x97,%eax	# 42CD30 B8 97 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CD35 48 8D 6D F8 
	call	 ( SET, ) 	# 42CD39 E8 16 FF FF FF 
	ret		# 42CD3E C3 
//: sets, 	$98 SET, ;

setscom:
	mov	%rax,-0x08(%rbp)	# 42CD3F 48 89 45 F8 
	mov	$0x98,%eax	# 42CD43 B8 98 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CD48 48 8D 6D F8 
	call	 ( SET, ) 	# 42CD4C E8 3 FF FF FF 
	ret		# 42CD51 C3 
//: setns,	$99 SET, ;

setnscom:
	mov	%rax,-0x08(%rbp)	# 42CD52 48 89 45 F8 
	mov	$0x99,%eax	# 42CD56 B8 99 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CD5B 48 8D 6D F8 
	call	 ( SET, ) 	# 42CD5F E8 F0 FE FF FF 
	ret		# 42CD64 C3 
//: setp, 	$9a SET, ;

setpcom:
	mov	%rax,-0x08(%rbp)	# 42CD65 48 89 45 F8 
	mov	$0x9A,%eax	# 42CD69 B8 9A 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CD6E 48 8D 6D F8 
	call	 ( SET, ) 	# 42CD72 E8 DD FE FF FF 
	ret		# 42CD77 C3 
//: setnp,	$9b SET, ;

setnpcom:
	mov	%rax,-0x08(%rbp)	# 42CD78 48 89 45 F8 
	mov	$0x9B,%eax	# 42CD7C B8 9B 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CD81 48 8D 6D F8 
	call	 ( SET, ) 	# 42CD85 E8 CA FE FF FF 
	ret		# 42CD8A C3 
//: setl, 	$9c SET, ;

setlcom:
	mov	%rax,-0x08(%rbp)	# 42CD8B 48 89 45 F8 
	mov	$0x9C,%eax	# 42CD8F B8 9C 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CD94 48 8D 6D F8 
	call	 ( SET, ) 	# 42CD98 E8 B7 FE FF FF 
	ret		# 42CD9D C3 
//: setge,	$9d SET, ;

setgecom:
	mov	%rax,-0x08(%rbp)	# 42CD9E 48 89 45 F8 
	mov	$0x9D,%eax	# 42CDA2 B8 9D 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CDA7 48 8D 6D F8 
	call	 ( SET, ) 	# 42CDAB E8 A4 FE FF FF 
	ret		# 42CDB0 C3 
//: setle,	$9e SET, ;

setlecom:
	mov	%rax,-0x08(%rbp)	# 42CDB1 48 89 45 F8 
	mov	$0x9E,%eax	# 42CDB5 B8 9E 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CDBA 48 8D 6D F8 
	call	 ( SET, ) 	# 42CDBE E8 91 FE FF FF 
	ret		# 42CDC3 C3 
//: setg, 	$9f SET, ;

setgcom:
	mov	%rax,-0x08(%rbp)	# 42CDC4 48 89 45 F8 
	mov	$0x9F,%eax	# 42CDC8 B8 9F 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CDCD 48 8D 6D F8 
	call	 ( SET, ) 	# 42CDD1 E8 7E FE FF FF 
	ret		# 42CDD6 C3 
//

//: INCL,  ?REX, $FF C, 0 (()), ;

INCLcom:
	call	 ( ?REX, ) 	# 42CDD7 E8 BF F1 FF FF 
	mov	%rax,-0x08(%rbp)	# 42CDDC 48 89 45 F8 
	mov	$0xFF,%eax	# 42CDE0 B8 FF 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CDE5 48 8D 6D F8 
	call	 ( C, ) 	# 42CDE9 E8 8A 81 FD FF 
	mov	%rax,-0x08(%rbp)	# 42CDEE 48 89 45 F8 
	mov	$0x0,%eax	# 42CDF2 B8 0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CDF7 48 8D 6D F8 
	call	 ( (()), ) 	# 42CDFB E8 DC F7 FF FF 
	ret		# 42CE00 C3 
//

//: DECL,

//  #(%r_x,%r_x) IF	?REX, $FF C, 8 (()), BREAK

DECLcom:
	call	 ( #(%r_x,%r_x) ) 	# 42CE01 E8 5D EF FF FF 
	test	%rax,%rax	# 42CE06 48 85 C0 
	mov	0x00(%rbp),%rax	# 42CE09 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42CE0D 48 8D 6D 8 
	jz	 ( DECL,+40  ) 	# 42CE11 F 84 2A 0 0 0 
	call	 ( ?REX, ) 	# 42CE17 E8 7F F1 FF FF 
	mov	%rax,-0x08(%rbp)	# 42CE1C 48 89 45 F8 
	mov	$0xFF,%eax	# 42CE20 B8 FF 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CE25 48 8D 6D F8 
	call	 ( C, ) 	# 42CE29 E8 4A 81 FD FF 
	mov	%rax,-0x08(%rbp)	# 42CE2E 48 89 45 F8 
	mov	$0x8,%eax	# 42CE32 B8 8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CE37 48 8D 6D F8 
	call	 ( (()), ) 	# 42CE3B E8 9C F7 FF FF 
	ret		# 42CE40 C3 
//  8 OR INCL, ;

	or	$0x8,%rax	# 42CE41 48 D 8 0 0 0 
	call	 ( INCL, ) 	# 42CE47 E8 8B FF FF FF 
	ret		# 42CE4C C3 
//: INCQ, 	$8 TO REX_W incl, ;

INCQcom:
	movq	$0x8, ( REX_W+5  ) (%rip)	# 42CE4D 48 C7 5 4 E8 FF FF 8 0 0 0 
	call	 ( INCL, ) 	# 42CE58 E8 7A FF FF FF 
	ret		# 42CE5D C3 
//: DECQ, 	$8 TO REX_W decl, ;

DECQcom:
	movq	$0x8, ( REX_W+5  ) (%rip)	# 42CE5E 48 C7 5 F3 E7 FF FF 8 0 0 0 
	call	 ( DECL, ) 	# 42CE69 E8 93 FF FF FF 
	ret		# 42CE6E C3 
//

//

//: POP,  REX.RBX ?DUP IF $40 OR C, THEN

POPcom:
	mov	%rax,-0x08(%rbp)	# 42CE6F 48 89 45 F8 
	mov	 ( REX.RBX+5  ) (%rip),%rax	# 42CE73 48 8B 5 D5 E7 FF FF 
	lea	-0x08(%rbp),%rbp	# 42CE7A 48 8D 6D F8 
	call	 ( ?DUP ) 	# 42CE7E E8 B1 78 FD FF 
	test	%rax,%rax	# 42CE83 48 85 C0 
	mov	0x00(%rbp),%rax	# 42CE86 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42CE8A 48 8D 6D 8 
	jz	 ( POP,+30  ) 	# 42CE8E F 84 B 0 0 0 
	or	$0x40,%rax	# 42CE94 48 D 40 0 0 0 
	call	 ( C, ) 	# 42CE9A E8 D9 80 FD FF 
//    #%r_x IF 0 TO  REX.RBX  0 TO  REX_W  $58 DO|; break

	call	 ( #%r_x ) 	# 42CE9F E8 7F EE FF FF 
	test	%rax,%rax	# 42CEA4 48 85 C0 
	mov	0x00(%rbp),%rax	# 42CEA7 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42CEAB 48 8D 6D 8 
	jz	 ( POP,+6F  ) 	# 42CEAF F 84 29 0 0 0 
	movq	$0x0, ( REX.RBX+5  ) (%rip)	# 42CEB5 48 C7 5 8F E7 FF FF 0 0 0 0 
	movq	$0x0, ( REX_W+5  ) (%rip)	# 42CEC0 48 C7 5 91 E7 FF FF 0 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42CECB 48 89 45 F8 
	mov	$0x58,%eax	# 42CECF B8 58 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CED4 48 8D 6D F8 
	call	 ( DO|; ) 	# 42CED8 E8 E8 F0 FF FF 
	ret		# 42CEDD C3 
//  $8f C, 0 (()), ;

	mov	%rax,-0x08(%rbp)	# 42CEDE 48 89 45 F8 
	mov	$0x8F,%eax	# 42CEE2 B8 8F 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CEE7 48 8D 6D F8 
	call	 ( C, ) 	# 42CEEB E8 88 80 FD FF 
	mov	%rax,-0x08(%rbp)	# 42CEF0 48 89 45 F8 
	mov	$0x0,%eax	# 42CEF4 B8 0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CEF9 48 8D 6D F8 
	call	 ( (()), ) 	# 42CEFD E8 DA F6 FF FF 
	ret		# 42CF02 C3 
//

//: PUSH, REX.RBX ?DUP IF $40 OR C, THEN

PUSHcom:
	mov	%rax,-0x08(%rbp)	# 42CF03 48 89 45 F8 
	mov	 ( REX.RBX+5  ) (%rip),%rax	# 42CF07 48 8B 5 41 E7 FF FF 
	lea	-0x08(%rbp),%rbp	# 42CF0E 48 8D 6D F8 
	call	 ( ?DUP ) 	# 42CF12 E8 1D 78 FD FF 
	test	%rax,%rax	# 42CF17 48 85 C0 
	mov	0x00(%rbp),%rax	# 42CF1A 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42CF1E 48 8D 6D 8 
	jz	 ( PUSH,+30  ) 	# 42CF22 F 84 B 0 0 0 
	or	$0x40,%rax	# 42CF28 48 D 40 0 0 0 
	call	 ( C, ) 	# 42CF2E E8 45 80 FD FF 
//    #%r_x IF 0 TO  REX.RBX  0 TO  REX_W  $50 DO|; break

	call	 ( #%r_x ) 	# 42CF33 E8 EB ED FF FF 
	test	%rax,%rax	# 42CF38 48 85 C0 
	mov	0x00(%rbp),%rax	# 42CF3B 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42CF3F 48 8D 6D 8 
	jz	 ( PUSH,+6F  ) 	# 42CF43 F 84 29 0 0 0 
	movq	$0x0, ( REX.RBX+5  ) (%rip)	# 42CF49 48 C7 5 FB E6 FF FF 0 0 0 0 
	movq	$0x0, ( REX_W+5  ) (%rip)	# 42CF54 48 C7 5 FD E6 FF FF 0 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42CF5F 48 89 45 F8 
	mov	$0x50,%eax	# 42CF63 B8 50 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CF68 48 8D 6D F8 
	call	 ( DO|; ) 	# 42CF6C E8 54 F0 FF FF 
	ret		# 42CF71 C3 
//  $ff C, $30 (()), ;

	mov	%rax,-0x08(%rbp)	# 42CF72 48 89 45 F8 
	mov	$0xFF,%eax	# 42CF76 B8 FF 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CF7B 48 8D 6D F8 
	call	 ( C, ) 	# 42CF7F E8 F4 7F FD FF 
	mov	%rax,-0x08(%rbp)	# 42CF84 48 89 45 F8 
	mov	$0x30,%eax	# 42CF88 B8 30 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CF8D 48 8D 6D F8 
	call	 ( (()), ) 	# 42CF91 E8 46 F6 FF FF 
	ret		# 42CF96 C3 
//

//: >PARM ( cfa )  >BODY @ TO PARM_HESH ;

greatPARM:
	mov	0x05(%rax),%rax	# 42CF97 48 8B 40 5 
	mov	%rax, ( PARM_HESH+5  ) (%rip)	# 42CF9B 48 89 5 E3 E5 FF FF 
	mov	0x00(%rbp),%rax	# 42CFA2 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42CFA6 48 8D 6D 8 
	ret		# 42CFAA C3 
//

//0 VALUE SREX_W

SREX_W:
	call	 ( DOVALUE ) 	# 42CFAB E8 62 79 FD FF 
	add	%al,(%rax)	# 42CFB0 0 0 
	add	%al,(%rax)	# 42CFB2 0 0 
	add	%al,(%rax)	# 42CFB4 0 0 
	add	%al,(%rax)	# 42CFB6 0 0 
//

//

//: ADD| ( c --  )

//       

//  REX_W TO SREX_W  ?REX,

ADDl:
	mov	%rax,-0x08(%rbp)	# 42CFB8 48 89 45 F8 
	mov	 ( REX_W+5  ) (%rip),%rax	# 42CFBC 48 8B 5 99 E6 FF FF 
	mov	%rax, ( SREX_W+5  ) (%rip)	# 42CFC3 48 89 5 E6 FF FF FF 
	mov	-0x08(%rbp),%rax	# 42CFCA 48 8B 45 F8 
	call	 ( ?REX, ) 	# 42CFCE E8 C8 EF FF FF 
//  #$,%r_x  IF   \ $imm reg cod

	call	 ( #$,%r_x ) 	# 42CFD3 E8 6B ED FF FF 
	test	%rax,%rax	# 42CFD8 48 85 C0 
	mov	0x00(%rbp),%rax	# 42CFDB 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42CFDF 48 8D 6D 8 
	jz	 ( ADD|+17D  ) 	# 42CFE3 F 84 4C 1 0 0 
//		2 PICK SHORT?

	mov	%rax,-0x08(%rbp)	# 42CFE9 48 89 45 F8 
	mov	$0x2,%eax	# 42CFED B8 2 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42CFF2 48 8D 6D F8 
	call	 ( PICK ) 	# 42CFF6 E8 D1 77 FD FF 
	call	 ( SHORT? ) 	# 42CFFB E8 5A 86 FD FF 
//		IF

	test	%rax,%rax	# 42D000 48 85 C0 
	mov	0x00(%rbp),%rax	# 42D003 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42D007 48 8D 6D 8 
	jz	 ( ADD|+C8  ) 	# 42D00B F 84 6F 0 0 0 
//			OVER REG>8 OR 0= \  al

	mov	%rax,-0x08(%rbp)	# 42D011 48 89 45 F8 
	mov	0x00(%rbp),%rax	# 42D015 48 8B 45 0 
	or	 ( REG>8+5  ) (%rip),%rax	# 42D019 48 B 5 49 E6 FF FF 
	sub	$0x01,%rax	# 42D020 48 83 E8 1 
	sbb	%rax,%rax	# 42D024 48 19 C0 
	test	%rax,%rax	# 42D027 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42D02A 48 8B 45 F8 
//			IF  nip 4  DO|;  C,

	jz	 ( ADD|+90  ) 	# 42D02E F 84 14 0 0 0 
	mov	%rax,0x00(%rbp)	# 42D034 48 89 45 0 
	mov	$0x4,%eax	# 42D038 B8 4 0 0 0 
	call	 ( DO|; ) 	# 42D03D E8 83 EF FF FF 
	call	 ( C, ) 	# 42D042 E8 31 7F FD FF 
//			BREAK

	ret		# 42D047 C3 
//

//			REG>8 3 * $80 OR C, $C0 OR DO|;  C,

	mov	%rax,-0x08(%rbp)	# 42D048 48 89 45 F8 
	mov	 ( REG>8+5  ) (%rip),%rax	# 42D04C 48 8B 5 16 E6 FF FF 
	mov	%rax,-0x10(%rbp)	# 42D053 48 89 45 F0 
	mov	$0x3,%eax	# 42D057 B8 3 0 0 0 
		imulq	-0x10(%rbp)	# 42D05C 48 F7 6D F0 
	or	$0x80,%rax	# 42D060 48 D 80 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D066 48 8D 6D F8 
	call	 ( C, ) 	# 42D06A E8 9 7F FD FF 
	or	$0xC0,%rax	# 42D06F 48 D C0 0 0 0 
	call	 ( DO|; ) 	# 42D075 E8 4B EF FF FF 
	call	 ( C, ) 	# 42D07A E8 F9 7E FD FF 
//		BREAK		

	ret		# 42D07F C3 
//		OVER 0= \  ax

	mov	%rax,-0x08(%rbp)	# 42D080 48 89 45 F8 
	mov	0x00(%rbp),%rax	# 42D084 48 8B 45 0 
	sub	$0x01,%rax	# 42D088 48 83 E8 1 
	sbb	%rax,%rax	# 42D08C 48 19 C0 
	test	%rax,%rax	# 42D08F 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42D092 48 8B 45 F8 
//		IF	nip

	jz	 ( ADD|+129  ) 	# 42D096 F 84 45 0 0 0 
	mov	%rax,0x00(%rbp)	# 42D09C 48 89 45 0 
//			4 REG>8 OR

	movq	$0x4,-0x08(%rbp)	# 42D0A0 48 C7 45 F8 4 0 0 0 
	mov	 ( REG>8+5  ) (%rip),%rax	# 42D0A8 48 8B 5 BA E5 FF FF 
	or	-0x08(%rbp),%rax	# 42D0AF 48 B 45 F8 
//		    REG>8 IF DO|; L, BREAK DO|; C,

	mov	%rax,-0x08(%rbp)	# 42D0B3 48 89 45 F8 
	mov	 ( REG>8+5  ) (%rip),%rax	# 42D0B7 48 8B 5 AB E5 FF FF 
	test	%rax,%rax	# 42D0BE 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42D0C1 48 8B 45 F8 
	jz	 ( ADD|+11E  ) 	# 42D0C5 F 84 B 0 0 0 
	call	 ( DO|; ) 	# 42D0CB E8 F5 EE FF FF 
	call	 ( L, ) 	# 42D0D0 E8 60 7E FD FF 
	ret		# 42D0D5 C3 
	call	 ( DO|; ) 	# 42D0D6 E8 EA EE FF FF 
	call	 ( C, ) 	# 42D0DB E8 98 7E FD FF 
//		BREAK

	ret		# 42D0E0 C3 
//			$80 REG>8 OR C, $C0

	mov	%rax,-0x08(%rbp)	# 42D0E1 48 89 45 F8 
	movq	$0x80,-0x10(%rbp)	# 42D0E5 48 C7 45 F0 80 0 0 0 
	mov	 ( REG>8+5  ) (%rip),%rax	# 42D0ED 48 8B 5 75 E5 FF FF 
	or	-0x10(%rbp),%rax	# 42D0F4 48 B 45 F0 
	lea	-0x08(%rbp),%rbp	# 42D0F8 48 8D 6D F8 
	call	 ( C, ) 	# 42D0FC E8 77 7E FD FF 
	xor	$0xC0,%rax	# 42D101 48 35 C0 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42D107 48 89 45 F8 
	mov	 ( REG>8+5  ) (%rip),%rax	# 42D10B 48 8B 5 57 E5 FF FF 
//		  XOR  REG>8 IF DO|; L, BREAK DO|; C,

	test	%rax,%rax	# 42D112 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42D115 48 8B 45 F8 
	jz	 ( ADD|+172  ) 	# 42D119 F 84 B 0 0 0 
	call	 ( DO|; ) 	# 42D11F E8 A1 EE FF FF 
	call	 ( L, ) 	# 42D124 E8 C 7E FD FF 
	ret		# 42D129 C3 
	call	 ( DO|; ) 	# 42D12A E8 96 EE FF FF 
	call	 ( C, ) 	# 42D12F E8 44 7E FD FF 
//	    BREAK

	ret		# 42D134 C3 
//

// #$,(%r_x)	IF  \  $imm reg cod			

	call	 ( #$,(%r_x) ) 	# 42D135 E8 59 EC FF FF 
	test	%rax,%rax	# 42D13A 48 85 C0 
	mov	0x00(%rbp),%rax	# 42D13D 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42D141 48 8D 6D 8 
	jz	 ( ADD|+225  ) 	# 42D145 F 84 92 0 0 0 
//			2 PICK SHORT?

	mov	%rax,-0x08(%rbp)	# 42D14B 48 89 45 F8 
	mov	$0x2,%eax	# 42D14F B8 2 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D154 48 8D 6D F8 
	call	 ( PICK ) 	# 42D158 E8 6F 76 FD FF 
	call	 ( SHORT? ) 	# 42D15D E8 F8 84 FD FF 
//			IF	$83 C,	['] #(%r_x) >PARM (()), C,

	test	%rax,%rax	# 42D162 48 85 C0 
	mov	0x00(%rbp),%rax	# 42D165 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42D169 48 8D 6D 8 
	jz	 ( ADD|+1F0  ) 	# 42D16D F 84 35 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42D173 48 89 45 F8 
	mov	$0x83,%eax	# 42D177 B8 83 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D17C 48 8D 6D F8 
	call	 ( C, ) 	# 42D180 E8 F3 7D FD FF 
	mov	%rax,-0x08(%rbp)	# 42D185 48 89 45 F8 
	mov	$0x42BD53,%eax	# 42D189 B8 53 BD 42 0 
	mov	0x05(%rax),%rax	# 42D18E 48 8B 40 5 
	mov	%rax, ( PARM_HESH+5  ) (%rip)	# 42D192 48 89 5 EC E3 FF FF 
	mov	-0x08(%rbp),%rax	# 42D199 48 8B 45 F8 
	call	 ( (()), ) 	# 42D19D E8 3A F4 FF FF 
	call	 ( C, ) 	# 42D1A2 E8 D1 7D FD FF 
//			BREAK	$81 C,	['] #(%r_x) >PARM (()), L, 

	ret		# 42D1A7 C3 
	mov	%rax,-0x08(%rbp)	# 42D1A8 48 89 45 F8 
	mov	$0x81,%eax	# 42D1AC B8 81 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D1B1 48 8D 6D F8 
	call	 ( C, ) 	# 42D1B5 E8 BE 7D FD FF 
	mov	%rax,-0x08(%rbp)	# 42D1BA 48 89 45 F8 
	mov	$0x42BD53,%eax	# 42D1BE B8 53 BD 42 0 
	mov	0x05(%rax),%rax	# 42D1C3 48 8B 40 5 
	mov	%rax, ( PARM_HESH+5  ) (%rip)	# 42D1C7 48 89 5 B7 E3 FF FF 
	mov	-0x08(%rbp),%rax	# 42D1CE 48 8B 45 F8 
	call	 ( (()), ) 	# 42D1D2 E8 5 F4 FF FF 
	call	 ( L, ) 	# 42D1D7 E8 59 7D FD FF 
//		BREAK

	ret		# 42D1DC C3 
//

// #$,(%r_x,%r_x)	IF  \  $imm reg cod			

	call	 ( #$,(%r_x,%r_x) ) 	# 42D1DD E8 C1 EB FF FF 
	test	%rax,%rax	# 42D1E2 48 85 C0 
	mov	0x00(%rbp),%rax	# 42D1E5 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42D1E9 48 8D 6D 8 
	jz	 ( ADD|+2CD  ) 	# 42D1ED F 84 92 0 0 0 
//			3 PICK SHORT?

	mov	%rax,-0x08(%rbp)	# 42D1F3 48 89 45 F8 
	mov	$0x3,%eax	# 42D1F7 B8 3 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D1FC 48 8D 6D F8 
	call	 ( PICK ) 	# 42D200 E8 C7 75 FD FF 
	call	 ( SHORT? ) 	# 42D205 E8 50 84 FD FF 
//			IF	$83 C,	['] #(%r_x,%r_x) >PARM (()), C,

	test	%rax,%rax	# 42D20A 48 85 C0 
	mov	0x00(%rbp),%rax	# 42D20D 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42D211 48 8D 6D 8 
	jz	 ( ADD|+298  ) 	# 42D215 F 84 35 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42D21B 48 89 45 F8 
	mov	$0x83,%eax	# 42D21F B8 83 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D224 48 8D 6D F8 
	call	 ( C, ) 	# 42D228 E8 4B 7D FD FF 
	mov	%rax,-0x08(%rbp)	# 42D22D 48 89 45 F8 
	mov	$0x42BD63,%eax	# 42D231 B8 63 BD 42 0 
	mov	0x05(%rax),%rax	# 42D236 48 8B 40 5 
	mov	%rax, ( PARM_HESH+5  ) (%rip)	# 42D23A 48 89 5 44 E3 FF FF 
	mov	-0x08(%rbp),%rax	# 42D241 48 8B 45 F8 
	call	 ( (()), ) 	# 42D245 E8 92 F3 FF FF 
	call	 ( C, ) 	# 42D24A E8 29 7D FD FF 
//			BREAK	$81 C,	['] #(%r_x,%r_x) >PARM (()), L, 

	ret		# 42D24F C3 
	mov	%rax,-0x08(%rbp)	# 42D250 48 89 45 F8 
	mov	$0x81,%eax	# 42D254 B8 81 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D259 48 8D 6D F8 
	call	 ( C, ) 	# 42D25D E8 16 7D FD FF 
	mov	%rax,-0x08(%rbp)	# 42D262 48 89 45 F8 
	mov	$0x42BD63,%eax	# 42D266 B8 63 BD 42 0 
	mov	0x05(%rax),%rax	# 42D26B 48 8B 40 5 
	mov	%rax, ( PARM_HESH+5  ) (%rip)	# 42D26F 48 89 5 F E3 FF FF 
	mov	-0x08(%rbp),%rax	# 42D276 48 8B 45 F8 
	call	 ( (()), ) 	# 42D27A E8 5D F3 FF FF 
	call	 ( L, ) 	# 42D27F E8 B1 7C FD FF 
//		BREAK

	ret		# 42D284 C3 
//

//\  #%_l,%_l   IF C, SWAP 3 << OR $C0 DO|; BREAK

//

// REG>8 OR

	or	 ( REG>8+5  ) (%rip),%rax	# 42D285 48 B 5 DD E3 FF FF 
//

//  #%r_x,%r_x		IF C, SWAP 3 << OR $C0 DO|; BREAK

	call	 ( #%r_x,%r_x ) 	# 42D28C E8 A2 EA FF FF 
	test	%rax,%rax	# 42D291 48 85 C0 
	mov	0x00(%rbp),%rax	# 42D294 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42D298 48 8D 6D 8 
	jz	 ( ADD|+317  ) 	# 42D29C F 84 2D 0 0 0 
	call	 ( C, ) 	# 42D2A2 E8 D1 7C FD FF 
	mov	0x00(%rbp),%rdx	# 42D2A7 48 8B 55 0 
	mov	%rax,0x00(%rbp)	# 42D2AB 48 89 45 0 
	mov	%rdx,-0x08(%rbp)	# 42D2AF 48 89 55 F8 
	mov	$0x03,%cl	# 42D2B3 B1 3 
	mov	-0x08(%rbp),%rax	# 42D2B5 48 8B 45 F8 
	shlq	%cl,%rax	# 42D2B9 48 D3 E0 
	or	0x00(%rbp),%rax	# 42D2BC 48 B 45 0 
	mov	%rax,0x00(%rbp)	# 42D2C0 48 89 45 0 
	mov	$0xC0,%eax	# 42D2C4 B8 C0 0 0 0 
	call	 ( DO|; ) 	# 42D2C9 E8 F7 EC FF FF 
	ret		# 42D2CE C3 
//

//  #%r_x,(%r_x)		IF C, SWAP 3 << ['] #(%r_x)	>PARM (()), BREAK

	call	 ( #%r_x,(%r_x) ) 	# 42D2CF E8 DF EA FF FF 
	test	%rax,%rax	# 42D2D4 48 85 C0 
	mov	0x00(%rbp),%rax	# 42D2D7 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42D2DB 48 8D 6D 8 
	jz	 ( ADD|+365  ) 	# 42D2DF F 84 38 0 0 0 
	call	 ( C, ) 	# 42D2E5 E8 8E 7C FD FF 
	mov	0x00(%rbp),%rdx	# 42D2EA 48 8B 55 0 
	mov	%rax,0x00(%rbp)	# 42D2EE 48 89 45 0 
	mov	%rdx,-0x08(%rbp)	# 42D2F2 48 89 55 F8 
	mov	$0x03,%cl	# 42D2F6 B1 3 
	mov	-0x08(%rbp),%rax	# 42D2F8 48 8B 45 F8 
	shlq	%cl,%rax	# 42D2FC 48 D3 E0 
	mov	%rax,-0x08(%rbp)	# 42D2FF 48 89 45 F8 
	mov	$0x42BD53,%eax	# 42D303 B8 53 BD 42 0 
	mov	0x05(%rax),%rax	# 42D308 48 8B 40 5 
	mov	%rax, ( PARM_HESH+5  ) (%rip)	# 42D30C 48 89 5 72 E2 FF FF 
	mov	-0x08(%rbp),%rax	# 42D313 48 8B 45 F8 
	call	 ( (()), ) 	# 42D317 E8 C0 F2 FF FF 
	ret		# 42D31C C3 
//  #%r_x,(%r_x,%r_x)	IF C, ROT  3 << ['] #(%r_x,%r_x) >PARM (()), BREAK

	call	 ( #%r_x,(%r_x,%r_x) ) 	# 42D31D E8 A1 EA FF FF 
	test	%rax,%rax	# 42D322 48 85 C0 
	mov	0x00(%rbp),%rax	# 42D325 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42D329 48 8D 6D 8 
	jz	 ( ADD|+3B2  ) 	# 42D32D F 84 37 0 0 0 
	call	 ( C, ) 	# 42D333 E8 40 7C FD FF 
	mov	0x00(%rbp),%rdx	# 42D338 48 8B 55 0 
	mov	%rax,0x00(%rbp)	# 42D33C 48 89 45 0 
	mov	0x08(%rbp),%rax	# 42D340 48 8B 45 8 
	mov	%rdx,0x08(%rbp)	# 42D344 48 89 55 8 
	shl	$0x03,%rax	# 42D348 48 C1 E0 3 
	mov	%rax,-0x08(%rbp)	# 42D34C 48 89 45 F8 
	mov	$0x42BD63,%eax	# 42D350 B8 63 BD 42 0 
	mov	0x05(%rax),%rax	# 42D355 48 8B 40 5 
	mov	%rax, ( PARM_HESH+5  ) (%rip)	# 42D359 48 89 5 25 E2 FF FF 
	mov	-0x08(%rbp),%rax	# 42D360 48 8B 45 F8 
	call	 ( (()), ) 	# 42D364 E8 73 F2 FF FF 
	ret		# 42D369 C3 
//

//  2 OR

	or	$0x2,%rax	# 42D36A 48 D 2 0 0 0 
//

//  #(%r_x),%r_x		IF C, 3 << ['] #(%r_x)		>PARM (()), BREAK

	call	 ( #(%r_x),%r_x ) 	# 42D370 E8 FE E9 FF FF 
	test	%rax,%rax	# 42D375 48 85 C0 
	mov	0x00(%rbp),%rax	# 42D378 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42D37C 48 8D 6D 8 
	jz	 ( ADD|+3F5  ) 	# 42D380 F 84 27 0 0 0 
	call	 ( C, ) 	# 42D386 E8 ED 7B FD FF 
	shl	$0x03,%rax	# 42D38B 48 C1 E0 3 
	mov	%rax,-0x08(%rbp)	# 42D38F 48 89 45 F8 
	mov	$0x42BD53,%eax	# 42D393 B8 53 BD 42 0 
	mov	0x05(%rax),%rax	# 42D398 48 8B 40 5 
	mov	%rax, ( PARM_HESH+5  ) (%rip)	# 42D39C 48 89 5 E2 E1 FF FF 
	mov	-0x08(%rbp),%rax	# 42D3A3 48 8B 45 F8 
	call	 ( (()), ) 	# 42D3A7 E8 30 F2 FF FF 
	ret		# 42D3AC C3 
//  #(%r_x,%r_x),%r_x	IF C, 3 << ['] #(%r_x,%r_x)	>PARM (()), BREAK

	call	 ( #(%r_x,%r_x),%r_x ) 	# 42D3AD E8 D1 E9 FF FF 
	test	%rax,%rax	# 42D3B2 48 85 C0 
	mov	0x00(%rbp),%rax	# 42D3B5 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42D3B9 48 8D 6D 8 
	jz	 ( ADD|+432  ) 	# 42D3BD F 84 27 0 0 0 
	call	 ( C, ) 	# 42D3C3 E8 B0 7B FD FF 
	shl	$0x03,%rax	# 42D3C8 48 C1 E0 3 
	mov	%rax,-0x08(%rbp)	# 42D3CC 48 89 45 F8 
	mov	$0x42BD63,%eax	# 42D3D0 B8 63 BD 42 0 
	mov	0x05(%rax),%rax	# 42D3D5 48 8B 40 5 
	mov	%rax, ( PARM_HESH+5  ) (%rip)	# 42D3D9 48 89 5 A5 E1 FF FF 
	mov	-0x08(%rbp),%rax	# 42D3E0 48 8B 45 F8 
	call	 ( (()), ) 	# 42D3E4 E8 F3 F1 FF FF 
	ret		# 42D3E9 C3 
//  -333 THROW

	mov	%rax,-0x08(%rbp)	# 42D3EA 48 89 45 F8 
	movq	$-0x14D,%rax	# 42D3EE 48 C7 C0 B3 FE FF FF 
	lea	-0x08(%rbp),%rbp	# 42D3F5 48 8D 6D F8 
	call	 ( THROW ) 	# 42D3F9 E8 B6 81 FD FF 
//;

	ret		# 42D3FE C3 
//

//: add,	0x00 ADD| ;

addcom:
	mov	%rax,-0x08(%rbp)	# 42D3FF 48 89 45 F8 
	mov	$0x0,%eax	# 42D403 B8 0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D408 48 8D 6D F8 
	call	 ( ADD| ) 	# 42D40C E8 A7 FB FF FF 
	ret		# 42D411 C3 
//: or,	0x08 ADD| ;

orcom:
	mov	%rax,-0x08(%rbp)	# 42D412 48 89 45 F8 
	mov	$0x8,%eax	# 42D416 B8 8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D41B 48 8D 6D F8 
	call	 ( ADD| ) 	# 42D41F E8 94 FB FF FF 
	ret		# 42D424 C3 
//: adc,	0x10 ADD| ;

adccom:
	mov	%rax,-0x08(%rbp)	# 42D425 48 89 45 F8 
	mov	$0x10,%eax	# 42D429 B8 10 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D42E 48 8D 6D F8 
	call	 ( ADD| ) 	# 42D432 E8 81 FB FF FF 
	ret		# 42D437 C3 
//: sbb,	0x18 ADD| ;

sbbcom:
	mov	%rax,-0x08(%rbp)	# 42D438 48 89 45 F8 
	mov	$0x18,%eax	# 42D43C B8 18 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D441 48 8D 6D F8 
	call	 ( ADD| ) 	# 42D445 E8 6E FB FF FF 
	ret		# 42D44A C3 
//: AND,	0x20 ADD| ;

ANDcom:
	mov	%rax,-0x08(%rbp)	# 42D44B 48 89 45 F8 
	mov	$0x20,%eax	# 42D44F B8 20 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D454 48 8D 6D F8 
	call	 ( ADD| ) 	# 42D458 E8 5B FB FF FF 
	ret		# 42D45D C3 
//: sub,	0x28 ADD| ;

subcom:
	mov	%rax,-0x08(%rbp)	# 42D45E 48 89 45 F8 
	mov	$0x28,%eax	# 42D462 B8 28 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D467 48 8D 6D F8 
	call	 ( ADD| ) 	# 42D46B E8 48 FB FF FF 
	ret		# 42D470 C3 
//: xor,	0x30 ADD| ;

xorcom:
	mov	%rax,-0x08(%rbp)	# 42D471 48 89 45 F8 
	mov	$0x30,%eax	# 42D475 B8 30 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D47A 48 8D 6D F8 
	call	 ( ADD| ) 	# 42D47E E8 35 FB FF FF 
	ret		# 42D483 C3 
//: cmp, 	0x38 ADD| ;

cmpcom:
	mov	%rax,-0x08(%rbp)	# 42D484 48 89 45 F8 
	mov	$0x38,%eax	# 42D488 B8 38 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D48D 48 8D 6D F8 
	call	 ( ADD| ) 	# 42D491 E8 22 FB FF FF 
	ret		# 42D496 C3 
//

//: imul, ?REX,  #%r_x,%r_x	IF $af0f W, SWAP 3 << OR $C0 DO|; BREAK

imulcom:
	call	 ( ?REX, ) 	# 42D497 E8 FF EA FF FF 
	call	 ( #%r_x,%r_x ) 	# 42D49C E8 92 E8 FF FF 
	test	%rax,%rax	# 42D4A1 48 85 C0 
	mov	0x00(%rbp),%rax	# 42D4A4 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42D4A8 48 8D 6D 8 
	jz	 ( imul,+55  ) 	# 42D4AC F 84 3A 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42D4B2 48 89 45 F8 
	mov	$0xAF0F,%eax	# 42D4B6 B8 F AF 0 0 
	lea	-0x08(%rbp),%rbp	# 42D4BB 48 8D 6D F8 
	call	 ( W, ) 	# 42D4BF E8 92 7A FD FF 
	mov	0x00(%rbp),%rdx	# 42D4C4 48 8B 55 0 
	mov	%rax,0x00(%rbp)	# 42D4C8 48 89 45 0 
	mov	%rdx,-0x08(%rbp)	# 42D4CC 48 89 55 F8 
	mov	$0x03,%cl	# 42D4D0 B1 3 
	mov	-0x08(%rbp),%rax	# 42D4D2 48 8B 45 F8 
	shlq	%cl,%rax	# 42D4D6 48 D3 E0 
	or	0x00(%rbp),%rax	# 42D4D9 48 B 45 0 
	mov	%rax,0x00(%rbp)	# 42D4DD 48 89 45 0 
	mov	$0xC0,%eax	# 42D4E1 B8 C0 0 0 0 
	call	 ( DO|; ) 	# 42D4E6 E8 DA EA FF FF 
	ret		# 42D4EB C3 
//  #(%r_x),%r_x		IF $0f C, $af ADD|  BREAK

	call	 ( #(%r_x),%r_x ) 	# 42D4EC E8 82 E8 FF FF 
	test	%rax,%rax	# 42D4F1 48 85 C0 
	mov	0x00(%rbp),%rax	# 42D4F4 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42D4F8 48 8D 6D 8 
	jz	 ( imul,+90  ) 	# 42D4FC F 84 25 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42D502 48 89 45 F8 
	mov	$0xF,%eax	# 42D506 B8 F 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D50B 48 8D 6D F8 
	call	 ( C, ) 	# 42D50F E8 64 7A FD FF 
	mov	%rax,-0x08(%rbp)	# 42D514 48 89 45 F8 
	mov	$0xAF,%eax	# 42D518 B8 AF 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D51D 48 8D 6D F8 
	call	 ( ADD| ) 	# 42D521 E8 92 FA FF FF 
	ret		# 42D526 C3 
//  #(%r_x,%r_x),%r_x	IF $0f C, $af ADD|  BREAK 

	call	 ( #(%r_x,%r_x),%r_x ) 	# 42D527 E8 57 E8 FF FF 
	test	%rax,%rax	# 42D52C 48 85 C0 
	mov	0x00(%rbp),%rax	# 42D52F 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42D533 48 8D 6D 8 
	jz	 ( imul,+CB  ) 	# 42D537 F 84 25 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42D53D 48 89 45 F8 
	mov	$0xF,%eax	# 42D541 B8 F 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D546 48 8D 6D F8 
	call	 ( C, ) 	# 42D54A E8 29 7A FD FF 
	mov	%rax,-0x08(%rbp)	# 42D54F 48 89 45 F8 
	mov	$0xAF,%eax	# 42D553 B8 AF 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D558 48 8D 6D F8 
	call	 ( ADD| ) 	# 42D55C E8 57 FA FF FF 
	ret		# 42D561 C3 
//	$28 $f7(()), ;

	mov	%rax,-0x08(%rbp)	# 42D562 48 89 45 F8 
	mov	$0x28,%eax	# 42D566 B8 28 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D56B 48 8D 6D F8 
	call	 ( $f7(()), ) 	# 42D56F E8 DD F4 FF FF 
	ret		# 42D574 C3 
//

//: movabs,

//  #%r_x	IF 2DUP AND IF -333 THROW THEN

movabscom:
	call	 ( #%r_x ) 	# 42D575 E8 A9 E7 FF FF 
	test	%rax,%rax	# 42D57A 48 85 C0 
	mov	0x00(%rbp),%rax	# 42D57D 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42D581 48 8D 6D 8 
	jz	 ( movabs,+8C  ) 	# 42D585 F 84 76 0 0 0 
	mov	0x00(%rbp),%rdx	# 42D58B 48 8B 55 0 
	mov	%rax,-0x08(%rbp)	# 42D58F 48 89 45 F8 
	and	%rdx,%rax	# 42D593 48 21 D0 
	test	%rax,%rax	# 42D596 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42D599 48 8B 45 F8 
	jz	 ( movabs,+42  ) 	# 42D59D F 84 14 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42D5A3 48 89 45 F8 
	movq	$-0x14D,%rax	# 42D5A7 48 C7 C0 B3 FE FF FF 
	lea	-0x08(%rbp),%rbp	# 42D5AE 48 8D 6D F8 
	call	 ( THROW ) 	# 42D5B2 E8 FD 7F FD FF 
//		?REX,

	call	 ( ?REX, ) 	# 42D5B7 E8 DF E9 FF FF 
//		DUP 0= IF DROP $A0 ELSE NIP $A2 THEN

	mov	%rax,-0x08(%rbp)	# 42D5BC 48 89 45 F8 
	sub	$0x01,%rax	# 42D5C0 48 83 E8 1 
	sbb	%rax,%rax	# 42D5C4 48 19 C0 
	test	%rax,%rax	# 42D5C7 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42D5CA 48 8B 45 F8 
	jz	 ( movabs,+69  ) 	# 42D5CE F 84 A 0 0 0 
	mov	$0xA0,%eax	# 42D5D4 B8 A0 0 0 0 
	jmp	 ( movabs,+72  ) 	# 42D5D9 E9 9 0 0 0 
	mov	%rax,0x00(%rbp)	# 42D5DE 48 89 45 0 
	mov	$0xA2,%eax	# 42D5E2 B8 A2 0 0 0 
//		REG>8 	DO|; ,

	mov	%rax,-0x08(%rbp)	# 42D5E7 48 89 45 F8 
	mov	 ( REG>8+5  ) (%rip),%rax	# 42D5EB 48 8B 5 77 E0 FF FF 
	lea	-0x08(%rbp),%rbp	# 42D5F2 48 8D 6D F8 
	call	 ( DO|; ) 	# 42D5F6 E8 CA E9 FF FF 
	call	 ( , ) 	# 42D5FB E8 1A 79 FD FF 
//	BREAK

	ret		# 42D600 C3 
//  REX_W 0= IF -333 THROW THEN

	mov	%rax,-0x08(%rbp)	# 42D601 48 89 45 F8 
	mov	 ( REX_W+5  ) (%rip),%rax	# 42D605 48 8B 5 50 E0 FF FF 
	sub	$0x01,%rax	# 42D60C 48 83 E8 1 
	sbb	%rax,%rax	# 42D610 48 19 C0 
	test	%rax,%rax	# 42D613 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42D616 48 8B 45 F8 
	jz	 ( movabs,+BF  ) 	# 42D61A F 84 14 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42D620 48 89 45 F8 
	movq	$-0x14D,%rax	# 42D624 48 C7 C0 B3 FE FF FF 
	lea	-0x08(%rbp),%rbp	# 42D62B 48 8D 6D F8 
	call	 ( THROW ) 	# 42D62F E8 80 7F FD FF 
//  #$,%r_x  IF REX, $B8 DO|; , BREAK

	call	 ( #$,%r_x ) 	# 42D634 E8 A E7 FF FF 
	test	%rax,%rax	# 42D639 48 85 C0 
	mov	0x00(%rbp),%rax	# 42D63C 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42D640 48 8D 6D 8 
	jz	 ( movabs,+F2  ) 	# 42D644 F 84 1D 0 0 0 
	call	 ( REX, ) 	# 42D64A E8 E1 E7 FF FF 
	mov	%rax,-0x08(%rbp)	# 42D64F 48 89 45 F8 
	mov	$0xB8,%eax	# 42D653 B8 B8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D658 48 8D 6D F8 
	call	 ( DO|; ) 	# 42D65C E8 64 E9 FF FF 
	call	 ( , ) 	# 42D661 E8 B4 78 FD FF 
	ret		# 42D666 C3 
// -333 THROW

	mov	%rax,-0x08(%rbp)	# 42D667 48 89 45 F8 
	movq	$-0x14D,%rax	# 42D66B 48 C7 C0 B3 FE FF FF 
	lea	-0x08(%rbp),%rbp	# 42D672 48 8D 6D F8 
	call	 ( THROW ) 	# 42D676 E8 39 7F FD FF 
//;

	ret		# 42D67B C3 
//

//: mov,

//  REX_W TO SREX_W  ?REX,

movcom:
	mov	%rax,-0x08(%rbp)	# 42D67C 48 89 45 F8 
	mov	 ( REX_W+5  ) (%rip),%rax	# 42D680 48 8B 5 D5 DF FF FF 
	mov	%rax, ( SREX_W+5  ) (%rip)	# 42D687 48 89 5 22 F9 FF FF 
	mov	-0x08(%rbp),%rax	# 42D68E 48 8B 45 F8 
	call	 ( ?REX, ) 	# 42D692 E8 4 E9 FF FF 
//  #$,%r_x IF	  \  $imm reg

	call	 ( #$,%r_x ) 	# 42D697 E8 A7 E6 FF FF 
	test	%rax,%rax	# 42D69C 48 85 C0 
	mov	0x00(%rbp),%rax	# 42D69F 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42D6A3 48 8D 6D 8 
	jz	 ( mov,+13D  ) 	# 42D6A7 F 84 C 1 0 0 
//

//		OVER 0x80000000 +  0x17FFFFFFF U<

	mov	%rax,-0x08(%rbp)	# 42D6AD 48 89 45 F8 
	mov	0x00(%rbp),%rax	# 42D6B1 48 8B 45 0 
	mov	%rax,-0x10(%rbp)	# 42D6B5 48 89 45 F0 
	mov	$0x80000000,%eax	# 42D6B9 B8 0 0 0 80 
	add	-0x10(%rbp),%rax	# 42D6BE 48 3 45 F0 
	mov	%rax,-0x10(%rbp)	# 42D6C2 48 89 45 F0 
	movabs	$0x17FFFFFFF,%rax	# 42D6C6 48 B8 FF FF FF 7F 1 0 0 0 
	cmp	%rax,-0x10(%rbp)	# 42D6D0 48 39 45 F0 
	sbb	%rax,%rax	# 42D6D4 48 19 C0 
	test	%rax,%rax	# 42D6D7 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42D6DA 48 8B 45 F8 
//		IF

	jz	 ( mov,+F2  ) 	# 42D6DE F 84 8A 0 0 0 
//			SREX_W IF  $C7 C, $C0 DO|; L, BREAK

	mov	%rax,-0x08(%rbp)	# 42D6E4 48 89 45 F8 
	mov	 ( SREX_W+5  ) (%rip),%rax	# 42D6E8 48 8B 5 C1 F8 FF FF 
	test	%rax,%rax	# 42D6EF 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42D6F2 48 8B 45 F8 
	jz	 ( mov,+AA  ) 	# 42D6F6 F 84 2A 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42D6FC 48 89 45 F8 
	mov	$0xC7,%eax	# 42D700 B8 C7 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D705 48 8D 6D F8 
	call	 ( C, ) 	# 42D709 E8 6A 78 FD FF 
	mov	%rax,-0x08(%rbp)	# 42D70E 48 89 45 F8 
	mov	$0xC0,%eax	# 42D712 B8 C0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D717 48 8D 6D F8 
	call	 ( DO|; ) 	# 42D71B E8 A5 E8 FF FF 
	call	 ( L, ) 	# 42D720 E8 10 78 FD FF 
	ret		# 42D725 C3 
//			REG>8 IF  $b8  DO|; L, BREAK

	mov	%rax,-0x08(%rbp)	# 42D726 48 89 45 F8 
	mov	 ( REG>8+5  ) (%rip),%rax	# 42D72A 48 8B 5 38 DF FF FF 
	test	%rax,%rax	# 42D731 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42D734 48 8B 45 F8 
	jz	 ( mov,+DA  ) 	# 42D738 F 84 18 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42D73E 48 89 45 F8 
	mov	$0xB8,%eax	# 42D742 B8 B8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D747 48 8D 6D F8 
	call	 ( DO|; ) 	# 42D74B E8 75 E8 FF FF 
	call	 ( L, ) 	# 42D750 E8 E0 77 FD FF 
	ret		# 42D755 C3 
//			$B0 DO|; C,

	mov	%rax,-0x08(%rbp)	# 42D756 48 89 45 F8 
	mov	$0xB0,%eax	# 42D75A B8 B0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D75F 48 8D 6D F8 
	call	 ( DO|; ) 	# 42D763 E8 5D E8 FF FF 
	call	 ( C, ) 	# 42D768 E8 B 78 FD FF 
//		BREAK

	ret		# 42D76D C3 
//

//		SREX_W 0= IF -333 THROW THEN

	mov	%rax,-0x08(%rbp)	# 42D76E 48 89 45 F8 
	mov	 ( SREX_W+5  ) (%rip),%rax	# 42D772 48 8B 5 37 F8 FF FF 
	sub	$0x01,%rax	# 42D779 48 83 E8 1 
	sbb	%rax,%rax	# 42D77D 48 19 C0 
	test	%rax,%rax	# 42D780 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42D783 48 8B 45 F8 
	jz	 ( mov,+125  ) 	# 42D787 F 84 14 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42D78D 48 89 45 F8 
	movq	$-0x14D,%rax	# 42D791 48 C7 C0 B3 FE FF FF 
	lea	-0x08(%rbp),%rbp	# 42D798 48 8D 6D F8 
	call	 ( THROW ) 	# 42D79C E8 13 7E FD FF 
//		$B8 DO|; ,

	mov	%rax,-0x08(%rbp)	# 42D7A1 48 89 45 F8 
	mov	$0xB8,%eax	# 42D7A5 B8 B8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D7AA 48 8D 6D F8 
	call	 ( DO|; ) 	# 42D7AE E8 12 E8 FF FF 
	call	 ( , ) 	# 42D7B3 E8 62 77 FD FF 
//	  BREAK

	ret		# 42D7B8 C3 
//

// #$,(%r_x)	IF	$c7  C,	['] #(%r_x)		>PARM 0 (()), L,	BREAK

	call	 ( #$,(%r_x) ) 	# 42D7B9 E8 D5 E5 FF FF 
	test	%rax,%rax	# 42D7BE 48 85 C0 
	mov	0x00(%rbp),%rax	# 42D7C1 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42D7C5 48 8D 6D 8 
	jz	 ( mov,+18D  ) 	# 42D7C9 F 84 3A 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42D7CF 48 89 45 F8 
	mov	$0xC7,%eax	# 42D7D3 B8 C7 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D7D8 48 8D 6D F8 
	call	 ( C, ) 	# 42D7DC E8 97 77 FD FF 
	mov	%rax,-0x08(%rbp)	# 42D7E1 48 89 45 F8 
	mov	$0x42BD53,%eax	# 42D7E5 B8 53 BD 42 0 
	mov	0x05(%rax),%rax	# 42D7EA 48 8B 40 5 
	mov	%rax, ( PARM_HESH+5  ) (%rip)	# 42D7EE 48 89 5 90 DD FF FF 
	mov	$0x0,%eax	# 42D7F5 B8 0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D7FA 48 8D 6D F8 
	call	 ( (()), ) 	# 42D7FE E8 D9 ED FF FF 
	call	 ( L, ) 	# 42D803 E8 2D 77 FD FF 
	ret		# 42D808 C3 
// #$,(%r_x,%r_x) IF	$c7  C, ['] #(%r_x,%r_x)	>PARM 0 (()), L,	BREAK

	call	 ( #$,(%r_x,%r_x) ) 	# 42D809 E8 95 E5 FF FF 
	test	%rax,%rax	# 42D80E 48 85 C0 
	mov	0x00(%rbp),%rax	# 42D811 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42D815 48 8D 6D 8 
	jz	 ( mov,+1DD  ) 	# 42D819 F 84 3A 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42D81F 48 89 45 F8 
	mov	$0xC7,%eax	# 42D823 B8 C7 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D828 48 8D 6D F8 
	call	 ( C, ) 	# 42D82C E8 47 77 FD FF 
	mov	%rax,-0x08(%rbp)	# 42D831 48 89 45 F8 
	mov	$0x42BD63,%eax	# 42D835 B8 63 BD 42 0 
	mov	0x05(%rax),%rax	# 42D83A 48 8B 40 5 
	mov	%rax, ( PARM_HESH+5  ) (%rip)	# 42D83E 48 89 5 40 DD FF FF 
	mov	$0x0,%eax	# 42D845 B8 0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D84A 48 8D 6D F8 
	call	 ( (()), ) 	# 42D84E E8 89 ED FF FF 
	call	 ( L, ) 	# 42D853 E8 DD 76 FD FF 
	ret		# 42D858 C3 
//

//	0x88 ADD| ;

	mov	%rax,-0x08(%rbp)	# 42D859 48 89 45 F8 
	mov	$0x88,%eax	# 42D85D B8 88 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D862 48 8D 6D F8 
	call	 ( ADD| ) 	# 42D866 E8 4D F7 FF FF 
	ret		# 42D86B C3 
//

//: LONG? REX_W IF -333 THROW THEN ;

LONGque:
	mov	%rax,-0x08(%rbp)	# 42D86C 48 89 45 F8 
	mov	 ( REX_W+5  ) (%rip),%rax	# 42D870 48 8B 5 E5 DD FF FF 
	test	%rax,%rax	# 42D877 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42D87A 48 8B 45 F8 
	jz	 ( LONG?+2C  ) 	# 42D87E F 84 14 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42D884 48 89 45 F8 
	movq	$-0x14D,%rax	# 42D888 48 C7 C0 B3 FE FF FF 
	lea	-0x08(%rbp),%rbp	# 42D88F 48 8D 6D F8 
	call	 ( THROW ) 	# 42D893 E8 1C 7D FD FF 
	ret		# 42D898 C3 
//

//: movq, $8 TO REX_W mov, ;

movqcom:
	movq	$0x8, ( REX_W+5  ) (%rip)	# 42D899 48 C7 5 B8 DD FF FF 8 0 0 0 
	call	 ( mov, ) 	# 42D8A4 E8 D3 FD FF FF 
	ret		# 42D8A9 C3 
//: movl, LONG? mov, ;

movlcom:
	call	 ( LONG? ) 	# 42D8AA E8 BD FF FF FF 
	call	 ( mov, ) 	# 42D8AF E8 C8 FD FF FF 
	ret		# 42D8B4 C3 
//

//: movb,

//  REG>8 IF -333 THROW THEN

movbcom:
	mov	%rax,-0x08(%rbp)	# 42D8B5 48 89 45 F8 
	mov	 ( REG>8+5  ) (%rip),%rax	# 42D8B9 48 8B 5 A9 DD FF FF 
	test	%rax,%rax	# 42D8C0 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42D8C3 48 8B 45 F8 
	jz	 ( movb,+2C  ) 	# 42D8C7 F 84 14 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42D8CD 48 89 45 F8 
	movq	$-0x14D,%rax	# 42D8D1 48 C7 C0 B3 FE FF FF 
	lea	-0x08(%rbp),%rbp	# 42D8D8 48 8D 6D F8 
	call	 ( THROW ) 	# 42D8DC E8 D3 7C FD FF 
//

//  #$,%r_x IF	  \  $imm reg

	call	 ( #$,%r_x ) 	# 42D8E1 E8 5D E4 FF FF 
	test	%rax,%rax	# 42D8E6 48 85 C0 
	mov	0x00(%rbp),%rax	# 42D8E9 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42D8ED 48 8D 6D 8 
	jz	 ( movb,+5A  ) 	# 42D8F1 F 84 18 0 0 0 
//		$B0 DO|; C,

	mov	%rax,-0x08(%rbp)	# 42D8F7 48 89 45 F8 
	mov	$0xB0,%eax	# 42D8FB B8 B0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D900 48 8D 6D F8 
	call	 ( DO|; ) 	# 42D904 E8 BC E6 FF FF 
	call	 ( C, ) 	# 42D909 E8 6A 76 FD FF 
//	  BREAK

	ret		# 42D90E C3 
//

//  #$,(%r_x)		IF $c7  C, ['] #(%r_x)		>PARM 0 (()), L, BREAK

	call	 ( #$,(%r_x) ) 	# 42D90F E8 7F E4 FF FF 
	test	%rax,%rax	# 42D914 48 85 C0 
	mov	0x00(%rbp),%rax	# 42D917 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42D91B 48 8D 6D 8 
	jz	 ( movb,+AA  ) 	# 42D91F F 84 3A 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42D925 48 89 45 F8 
	mov	$0xC7,%eax	# 42D929 B8 C7 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D92E 48 8D 6D F8 
	call	 ( C, ) 	# 42D932 E8 41 76 FD FF 
	mov	%rax,-0x08(%rbp)	# 42D937 48 89 45 F8 
	mov	$0x42BD53,%eax	# 42D93B B8 53 BD 42 0 
	mov	0x05(%rax),%rax	# 42D940 48 8B 40 5 
	mov	%rax, ( PARM_HESH+5  ) (%rip)	# 42D944 48 89 5 3A DC FF FF 
	mov	$0x0,%eax	# 42D94B B8 0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D950 48 8D 6D F8 
	call	 ( (()), ) 	# 42D954 E8 83 EC FF FF 
	call	 ( L, ) 	# 42D959 E8 D7 75 FD FF 
	ret		# 42D95E C3 
//  #$,(%r_x,%r_x)	IF $c7  C, ['] #(%r_x,%r_x)	>PARM 0 (()), L, BREAK

	call	 ( #$,(%r_x,%r_x) ) 	# 42D95F E8 3F E4 FF FF 
	test	%rax,%rax	# 42D964 48 85 C0 
	mov	0x00(%rbp),%rax	# 42D967 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42D96B 48 8D 6D 8 
	jz	 ( movb,+FA  ) 	# 42D96F F 84 3A 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42D975 48 89 45 F8 
	mov	$0xC7,%eax	# 42D979 B8 C7 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D97E 48 8D 6D F8 
	call	 ( C, ) 	# 42D982 E8 F1 75 FD FF 
	mov	%rax,-0x08(%rbp)	# 42D987 48 89 45 F8 
	mov	$0x42BD63,%eax	# 42D98B B8 63 BD 42 0 
	mov	0x05(%rax),%rax	# 42D990 48 8B 40 5 
	mov	%rax, ( PARM_HESH+5  ) (%rip)	# 42D994 48 89 5 EA DB FF FF 
	mov	$0x0,%eax	# 42D99B B8 0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D9A0 48 8D 6D F8 
	call	 ( (()), ) 	# 42D9A4 E8 33 EC FF FF 
	call	 ( L, ) 	# 42D9A9 E8 87 75 FD FF 
	ret		# 42D9AE C3 
//

//	0x88 ADD| ;

	mov	%rax,-0x08(%rbp)	# 42D9AF 48 89 45 F8 
	mov	$0x88,%eax	# 42D9B3 B8 88 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D9B8 48 8D 6D F8 
	call	 ( ADD| ) 	# 42D9BC E8 F7 F5 FF FF 
	ret		# 42D9C1 C3 
//

//

//: CMOV|  

//  ?REX,  $F C,  C, 3 <<

CMOVl:
	call	 ( ?REX, ) 	# 42D9C2 E8 D4 E5 FF FF 
	mov	%rax,-0x08(%rbp)	# 42D9C7 48 89 45 F8 
	mov	$0xF,%eax	# 42D9CB B8 F 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42D9D0 48 8D 6D F8 
	call	 ( C, ) 	# 42D9D4 E8 9F 75 FD FF 
	call	 ( C, ) 	# 42D9D9 E8 9A 75 FD FF 
	shl	$0x03,%rax	# 42D9DE 48 C1 E0 3 
//  #(%r_x),%r_x		IF ['] #(%r_x)		>PARM (()), BREAK

	call	 ( #(%r_x),%r_x ) 	# 42D9E2 E8 8C E3 FF FF 
	test	%rax,%rax	# 42D9E7 48 85 C0 
	mov	0x00(%rbp),%rax	# 42D9EA 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42D9EE 48 8D 6D 8 
	jz	 ( CMOV|+54  ) 	# 42D9F2 F 84 1E 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42D9F8 48 89 45 F8 
	mov	$0x42BD53,%eax	# 42D9FC B8 53 BD 42 0 
	mov	0x05(%rax),%rax	# 42DA01 48 8B 40 5 
	mov	%rax, ( PARM_HESH+5  ) (%rip)	# 42DA05 48 89 5 79 DB FF FF 
	mov	-0x08(%rbp),%rax	# 42DA0C 48 8B 45 F8 
	call	 ( (()), ) 	# 42DA10 E8 C7 EB FF FF 
	ret		# 42DA15 C3 
//  #(%r_x,%r_x),%r_x	IF ['] #(%r_x,%r_x)	>PARM (()), BREAK

	call	 ( #(%r_x,%r_x),%r_x ) 	# 42DA16 E8 68 E3 FF FF 
	test	%rax,%rax	# 42DA1B 48 85 C0 
	mov	0x00(%rbp),%rax	# 42DA1E 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42DA22 48 8D 6D 8 
	jz	 ( CMOV|+88  ) 	# 42DA26 F 84 1E 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42DA2C 48 89 45 F8 
	mov	$0x42BD63,%eax	# 42DA30 B8 63 BD 42 0 
	mov	0x05(%rax),%rax	# 42DA35 48 8B 40 5 
	mov	%rax, ( PARM_HESH+5  ) (%rip)	# 42DA39 48 89 5 45 DB FF FF 
	mov	-0x08(%rbp),%rax	# 42DA40 48 8B 45 F8 
	call	 ( (()), ) 	# 42DA44 E8 93 EB FF FF 
	ret		# 42DA49 C3 
//  -333 THROW

	mov	%rax,-0x08(%rbp)	# 42DA4A 48 89 45 F8 
	movq	$-0x14D,%rax	# 42DA4E 48 C7 C0 B3 FE FF FF 
	lea	-0x08(%rbp),%rbp	# 42DA55 48 8D 6D F8 
	call	 ( THROW ) 	# 42DA59 E8 56 7B FD FF 
//;

	ret		# 42DA5E C3 
//

//: cmovo,	$40 CMOV| ;

cmovocom:
	mov	%rax,-0x08(%rbp)	# 42DA5F 48 89 45 F8 
	mov	$0x40,%eax	# 42DA63 B8 40 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DA68 48 8D 6D F8 
	call	 ( CMOV| ) 	# 42DA6C E8 51 FF FF FF 
	ret		# 42DA71 C3 
//: cmovno,	$41 CMOV| ;

cmovnocom:
	mov	%rax,-0x08(%rbp)	# 42DA72 48 89 45 F8 
	mov	$0x41,%eax	# 42DA76 B8 41 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DA7B 48 8D 6D F8 
	call	 ( CMOV| ) 	# 42DA7F E8 3E FF FF FF 
	ret		# 42DA84 C3 
//: cmovb,	$42 CMOV| ;

cmovbcom:
	mov	%rax,-0x08(%rbp)	# 42DA85 48 89 45 F8 
	mov	$0x42,%eax	# 42DA89 B8 42 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DA8E 48 8D 6D F8 
	call	 ( CMOV| ) 	# 42DA92 E8 2B FF FF FF 
	ret		# 42DA97 C3 
//: cmovae,	$43 CMOV| ;

cmovaecom:
	mov	%rax,-0x08(%rbp)	# 42DA98 48 89 45 F8 
	mov	$0x43,%eax	# 42DA9C B8 43 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DAA1 48 8D 6D F8 
	call	 ( CMOV| ) 	# 42DAA5 E8 18 FF FF FF 
	ret		# 42DAAA C3 
//: cmove, 	$44 CMOV| ;

cmovecom:
	mov	%rax,-0x08(%rbp)	# 42DAAB 48 89 45 F8 
	mov	$0x44,%eax	# 42DAAF B8 44 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DAB4 48 8D 6D F8 
	call	 ( CMOV| ) 	# 42DAB8 E8 5 FF FF FF 
	ret		# 42DABD C3 
//: cmovne,	$45 CMOV| ;

cmovnecom:
	mov	%rax,-0x08(%rbp)	# 42DABE 48 89 45 F8 
	mov	$0x45,%eax	# 42DAC2 B8 45 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DAC7 48 8D 6D F8 
	call	 ( CMOV| ) 	# 42DACB E8 F2 FE FF FF 
	ret		# 42DAD0 C3 
//: cmovbe,	$46 CMOV| ;

cmovbecom:
	mov	%rax,-0x08(%rbp)	# 42DAD1 48 89 45 F8 
	mov	$0x46,%eax	# 42DAD5 B8 46 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DADA 48 8D 6D F8 
	call	 ( CMOV| ) 	# 42DADE E8 DF FE FF FF 
	ret		# 42DAE3 C3 
//\ : cmova, 	$47 CMOV| ;

//: cmovs, 	$48 CMOV| ;

cmovscom:
	mov	%rax,-0x08(%rbp)	# 42DAE4 48 89 45 F8 
	mov	$0x48,%eax	# 42DAE8 B8 48 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DAED 48 8D 6D F8 
	call	 ( CMOV| ) 	# 42DAF1 E8 CC FE FF FF 
	ret		# 42DAF6 C3 
//: cmovns,	$49 CMOV| ;

cmovnscom:
	mov	%rax,-0x08(%rbp)	# 42DAF7 48 89 45 F8 
	mov	$0x49,%eax	# 42DAFB B8 49 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DB00 48 8D 6D F8 
	call	 ( CMOV| ) 	# 42DB04 E8 B9 FE FF FF 
	ret		# 42DB09 C3 
//: cmovp, 	$4a CMOV| ;

cmovpcom:
	mov	%rax,-0x08(%rbp)	# 42DB0A 48 89 45 F8 
	mov	$0x4A,%eax	# 42DB0E B8 4A 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DB13 48 8D 6D F8 
	call	 ( CMOV| ) 	# 42DB17 E8 A6 FE FF FF 
	ret		# 42DB1C C3 
//: cmovnp,	$4b CMOV| ;

cmovnpcom:
	mov	%rax,-0x08(%rbp)	# 42DB1D 48 89 45 F8 
	mov	$0x4B,%eax	# 42DB21 B8 4B 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DB26 48 8D 6D F8 
	call	 ( CMOV| ) 	# 42DB2A E8 93 FE FF FF 
	ret		# 42DB2F C3 
//: cmovl, 	$4c CMOV| ;

cmovlcom:
	mov	%rax,-0x08(%rbp)	# 42DB30 48 89 45 F8 
	mov	$0x4C,%eax	# 42DB34 B8 4C 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DB39 48 8D 6D F8 
	call	 ( CMOV| ) 	# 42DB3D E8 80 FE FF FF 
	ret		# 42DB42 C3 
//: cmovge,	$4d CMOV| ;

cmovgecom:
	mov	%rax,-0x08(%rbp)	# 42DB43 48 89 45 F8 
	mov	$0x4D,%eax	# 42DB47 B8 4D 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DB4C 48 8D 6D F8 
	call	 ( CMOV| ) 	# 42DB50 E8 6D FE FF FF 
	ret		# 42DB55 C3 
//: cmovle,	$4e CMOV| ;

cmovlecom:
	mov	%rax,-0x08(%rbp)	# 42DB56 48 89 45 F8 
	mov	$0x4E,%eax	# 42DB5A B8 4E 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DB5F 48 8D 6D F8 
	call	 ( CMOV| ) 	# 42DB63 E8 5A FE FF FF 
	ret		# 42DB68 C3 
//: cmovg, 	$4f CMOV| ;

cmovgcom:
	mov	%rax,-0x08(%rbp)	# 42DB69 48 89 45 F8 
	mov	$0x4F,%eax	# 42DB6D B8 4F 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DB72 48 8D 6D F8 
	call	 ( CMOV| ) 	# 42DB76 E8 47 FE FF FF 
	ret		# 42DB7B C3 
//

//: cmovg, ?REX, $f C, 0x4C ADD| ;

cmovgcom:
	call	 ( ?REX, ) 	# 42DB7C E8 1A E4 FF FF 
	mov	%rax,-0x08(%rbp)	# 42DB81 48 89 45 F8 
	mov	$0xF,%eax	# 42DB85 B8 F 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DB8A 48 8D 6D F8 
	call	 ( C, ) 	# 42DB8E E8 E5 73 FD FF 
	mov	%rax,-0x08(%rbp)	# 42DB93 48 89 45 F8 
	mov	$0x4C,%eax	# 42DB97 B8 4C 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DB9C 48 8D 6D F8 
	call	 ( ADD| ) 	# 42DBA0 E8 13 F4 FF FF 
	ret		# 42DBA5 C3 
//: cmova, ?REX, $f C, 0x44 ADD| ;

cmovacom:
	call	 ( ?REX, ) 	# 42DBA6 E8 F0 E3 FF FF 
	mov	%rax,-0x08(%rbp)	# 42DBAB 48 89 45 F8 
	mov	$0xF,%eax	# 42DBAF B8 F 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DBB4 48 8D 6D F8 
	call	 ( C, ) 	# 42DBB8 E8 BB 73 FD FF 
	mov	%rax,-0x08(%rbp)	# 42DBBD 48 89 45 F8 
	mov	$0x44,%eax	# 42DBC1 B8 44 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DBC6 48 8D 6D F8 
	call	 ( ADD| ) 	# 42DBCA E8 E9 F3 FF FF 
	ret		# 42DBCF C3 
//

//\ : movl   $0x0,0x0(%rbp)

//

//: LOMG? REX_W IF -333 THROW THEN ;

LOMGque:
	mov	%rax,-0x08(%rbp)	# 42DBD0 48 89 45 F8 
	mov	 ( REX_W+5  ) (%rip),%rax	# 42DBD4 48 8B 5 81 DA FF FF 
	test	%rax,%rax	# 42DBDB 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42DBDE 48 8B 45 F8 
	jz	 ( LOMG?+2C  ) 	# 42DBE2 F 84 14 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42DBE8 48 89 45 F8 
	movq	$-0x14D,%rax	# 42DBEC 48 C7 C0 B3 FE FF FF 
	lea	-0x08(%rbp),%rbp	# 42DBF3 48 8D 6D F8 
	call	 ( THROW ) 	# 42DBF7 E8 B8 79 FD FF 
	ret		# 42DBFC C3 
//

//: movzb, ?REX, 0 TO REG>8 $f C, $B6 ADD| ;

movzbcom:
	call	 ( ?REX, ) 	# 42DBFD E8 99 E3 FF FF 
	movq	$0x0, ( REG>8+5  ) (%rip)	# 42DC02 48 C7 5 5C DA FF FF 0 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42DC0D 48 89 45 F8 
	mov	$0xF,%eax	# 42DC11 B8 F 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DC16 48 8D 6D F8 
	call	 ( C, ) 	# 42DC1A E8 59 73 FD FF 
	mov	%rax,-0x08(%rbp)	# 42DC1F 48 89 45 F8 
	mov	$0xB6,%eax	# 42DC23 B8 B6 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DC28 48 8D 6D F8 
	call	 ( ADD| ) 	# 42DC2C E8 87 F3 FF FF 
	ret		# 42DC31 C3 
//: movzbq, $8 TO REX_W movzb, ;

movzbqcom:
	movq	$0x8, ( REX_W+5  ) (%rip)	# 42DC32 48 C7 5 1F DA FF FF 8 0 0 0 
	call	 ( movzb, ) 	# 42DC3D E8 BB FF FF FF 
	ret		# 42DC42 C3 
//: movzbl, LOMG?  movzb, ;

movzblcom:
	call	 ( LOMG? ) 	# 42DC43 E8 88 FF FF FF 
	call	 ( movzb, ) 	# 42DC48 E8 B0 FF FF FF 
	ret		# 42DC4D C3 
//

//: movzw, ?REX, 0 TO REG>8 $f C, $B7 ADD| ;

movzwcom:
	call	 ( ?REX, ) 	# 42DC4E E8 48 E3 FF FF 
	movq	$0x0, ( REG>8+5  ) (%rip)	# 42DC53 48 C7 5 B DA FF FF 0 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42DC5E 48 89 45 F8 
	mov	$0xF,%eax	# 42DC62 B8 F 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DC67 48 8D 6D F8 
	call	 ( C, ) 	# 42DC6B E8 8 73 FD FF 
	mov	%rax,-0x08(%rbp)	# 42DC70 48 89 45 F8 
	mov	$0xB7,%eax	# 42DC74 B8 B7 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DC79 48 8D 6D F8 
	call	 ( ADD| ) 	# 42DC7D E8 36 F3 FF FF 
	ret		# 42DC82 C3 
//: movzwq, $8 TO REX_W movzw, ;

movzwqcom:
	movq	$0x8, ( REX_W+5  ) (%rip)	# 42DC83 48 C7 5 CE D9 FF FF 8 0 0 0 
	call	 ( movzw, ) 	# 42DC8E E8 BB FF FF FF 
	ret		# 42DC93 C3 
//: movzwl, LOMG?  movzw, ;

movzwlcom:
	call	 ( LOMG? ) 	# 42DC94 E8 37 FF FF FF 
	call	 ( movzw, ) 	# 42DC99 E8 B0 FF FF FF 
	ret		# 42DC9E C3 
//

//: movsb, PARM_HESH 0= IF 0 $a4 DO|; BREAK

movsbcom:
	mov	%rax,-0x08(%rbp)	# 42DC9F 48 89 45 F8 
	mov	 ( PARM_HESH+5  ) (%rip),%rax	# 42DCA3 48 8B 5 DB D8 FF FF 
	sub	$0x01,%rax	# 42DCAA 48 83 E8 1 
	sbb	%rax,%rax	# 42DCAE 48 19 C0 
	test	%rax,%rax	# 42DCB1 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42DCB4 48 8B 45 F8 
	jz	 ( movsb,+3A  ) 	# 42DCB8 F 84 1B 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42DCBE 48 89 45 F8 
	movq	$0x0,-0x10(%rbp)	# 42DCC2 48 C7 45 F0 0 0 0 0 
	mov	$0xA4,%eax	# 42DCCA B8 A4 0 0 0 
	lea	-0x10(%rbp),%rbp	# 42DCCF 48 8D 6D F0 
	call	 ( DO|; ) 	# 42DCD3 E8 ED E2 FF FF 
	ret		# 42DCD8 C3 
// ?REX, 0 TO REG>8 $f C, $BE ADD| ;

	call	 ( ?REX, ) 	# 42DCD9 E8 BD E2 FF FF 
	movq	$0x0, ( REG>8+5  ) (%rip)	# 42DCDE 48 C7 5 80 D9 FF FF 0 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42DCE9 48 89 45 F8 
	mov	$0xF,%eax	# 42DCED B8 F 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DCF2 48 8D 6D F8 
	call	 ( C, ) 	# 42DCF6 E8 7D 72 FD FF 
	mov	%rax,-0x08(%rbp)	# 42DCFB 48 89 45 F8 
	mov	$0xBE,%eax	# 42DCFF B8 BE 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DD04 48 8D 6D F8 
	call	 ( ADD| ) 	# 42DD08 E8 AB F2 FF FF 
	ret		# 42DD0D C3 
//: movsbq, $8 TO REX_W movsb, ;

movsbqcom:
	movq	$0x8, ( REX_W+5  ) (%rip)	# 42DD0E 48 C7 5 43 D9 FF FF 8 0 0 0 
	call	 ( movsb, ) 	# 42DD19 E8 81 FF FF FF 
	ret		# 42DD1E C3 
//

//\ : movsbl, LOMG?  movsb, ;

//

//: movsw, ?REX, 0 TO REG>8 $f C, $BF ADD| ;

movswcom:
	call	 ( ?REX, ) 	# 42DD1F E8 77 E2 FF FF 
	movq	$0x0, ( REG>8+5  ) (%rip)	# 42DD24 48 C7 5 3A D9 FF FF 0 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42DD2F 48 89 45 F8 
	mov	$0xF,%eax	# 42DD33 B8 F 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DD38 48 8D 6D F8 
	call	 ( C, ) 	# 42DD3C E8 37 72 FD FF 
	mov	%rax,-0x08(%rbp)	# 42DD41 48 89 45 F8 
	mov	$0xBF,%eax	# 42DD45 B8 BF 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DD4A 48 8D 6D F8 
	call	 ( ADD| ) 	# 42DD4E E8 65 F2 FF FF 
	ret		# 42DD53 C3 
//: movswq, #%r_x,%r_x IF 0 TO OSIZE THEN $8 TO REX_W movsw, ;

movswqcom:
	call	 ( #%r_x,%r_x ) 	# 42DD54 E8 DA DF FF FF 
	test	%rax,%rax	# 42DD59 48 85 C0 
	mov	0x00(%rbp),%rax	# 42DD5C 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42DD60 48 8D 6D 8 
	jz	 ( movswq,+21  ) 	# 42DD64 F 84 B 0 0 0 
	movq	$0x0, ( OSIZE+5  ) (%rip)	# 42DD6A 48 C7 5 1 D9 FF FF 0 0 0 0 
	movq	$0x8, ( REX_W+5  ) (%rip)	# 42DD75 48 C7 5 DC D8 FF FF 8 0 0 0 
	call	 ( movsw, ) 	# 42DD80 E8 9A FF FF FF 
	ret		# 42DD85 C3 
//\ : movswl, LOMG?  movsw, ;

//

//: movslq, 0x62 ADD| ;

movslqcom:
	mov	%rax,-0x08(%rbp)	# 42DD86 48 89 45 F8 
	mov	$0x62,%eax	# 42DD8A B8 62 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DD8F 48 8D 6D F8 
	call	 ( ADD| ) 	# 42DD93 E8 20 F2 FF FF 
	ret		# 42DD98 C3 
//

//: lss,	$b2 CMOV| ;

lsscom:
	mov	%rax,-0x08(%rbp)	# 42DD99 48 89 45 F8 
	mov	$0xB2,%eax	# 42DD9D B8 B2 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DDA2 48 8D 6D F8 
	call	 ( CMOV| ) 	# 42DDA6 E8 17 FC FF FF 
	ret		# 42DDAB C3 
//: lfs,	$b4 CMOV| ;

lfscom:
	mov	%rax,-0x08(%rbp)	# 42DDAC 48 89 45 F8 
	mov	$0xB4,%eax	# 42DDB0 B8 B4 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DDB5 48 8D 6D F8 
	call	 ( CMOV| ) 	# 42DDB9 E8 4 FC FF FF 
	ret		# 42DDBE C3 
//: lgs,	$b5 CMOV| ;

lgscom:
	mov	%rax,-0x08(%rbp)	# 42DDBF 48 89 45 F8 
	mov	$0xB5,%eax	# 42DDC3 B8 B5 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DDC8 48 8D 6D F8 
	call	 ( CMOV| ) 	# 42DDCC E8 F1 FB FF FF 
	ret		# 42DDD1 C3 
//

//: bsf,		$f C, $bc CMOV| ;

bsfcom:
	mov	%rax,-0x08(%rbp)	# 42DDD2 48 89 45 F8 
	mov	$0xF,%eax	# 42DDD6 B8 F 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DDDB 48 8D 6D F8 
	call	 ( C, ) 	# 42DDDF E8 94 71 FD FF 
	mov	%rax,-0x08(%rbp)	# 42DDE4 48 89 45 F8 
	mov	$0xBC,%eax	# 42DDE8 B8 BC 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DDED 48 8D 6D F8 
	call	 ( CMOV| ) 	# 42DDF1 E8 CC FB FF FF 
	ret		# 42DDF6 C3 
//: bsr,		$f C, $bd CMOV| ;

bsrcom:
	mov	%rax,-0x08(%rbp)	# 42DDF7 48 89 45 F8 
	mov	$0xF,%eax	# 42DDFB B8 F 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DE00 48 8D 6D F8 
	call	 ( C, ) 	# 42DE04 E8 6F 71 FD FF 
	mov	%rax,-0x08(%rbp)	# 42DE09 48 89 45 F8 
	mov	$0xBD,%eax	# 42DE0D B8 BD 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DE12 48 8D 6D F8 
	call	 ( CMOV| ) 	# 42DE16 E8 A7 FB FF FF 
	ret		# 42DE1B C3 
//: movsbl,	$f C, $be CMOV| ;

movsblcom:
	mov	%rax,-0x08(%rbp)	# 42DE1C 48 89 45 F8 
	mov	$0xF,%eax	# 42DE20 B8 F 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DE25 48 8D 6D F8 
	call	 ( C, ) 	# 42DE29 E8 4A 71 FD FF 
	mov	%rax,-0x08(%rbp)	# 42DE2E 48 89 45 F8 
	mov	$0xBE,%eax	# 42DE32 B8 BE 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DE37 48 8D 6D F8 
	call	 ( CMOV| ) 	# 42DE3B E8 82 FB FF FF 
	ret		# 42DE40 C3 
//: movswl,	$f C, $bf CMOV| ;

movswlcom:
	mov	%rax,-0x08(%rbp)	# 42DE41 48 89 45 F8 
	mov	$0xF,%eax	# 42DE45 B8 F 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DE4A 48 8D 6D F8 
	call	 ( C, ) 	# 42DE4E E8 25 71 FD FF 
	mov	%rax,-0x08(%rbp)	# 42DE53 48 89 45 F8 
	mov	$0xBF,%eax	# 42DE57 B8 BF 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DE5C 48 8D 6D F8 
	call	 ( CMOV| ) 	# 42DE60 E8 5D FB FF FF 
	ret		# 42DE65 C3 
//

//\ : btr,	$f C, $b3 CMOV| ;

//

//

//: xchg,

//

//  #%r_x,%r_x		IF DUP	0= IF DROP	$90 DO|; BREAK

xchgcom:
	call	 ( #%r_x,%r_x ) 	# 42DE66 E8 C8 DE FF FF 
	test	%rax,%rax	# 42DE6B 48 85 C0 
	mov	0x00(%rbp),%rax	# 42DE6E 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42DE72 48 8D 6D 8 
	jz	 ( xchg,+77  ) 	# 42DE76 F 84 61 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42DE7C 48 89 45 F8 
	sub	$0x01,%rax	# 42DE80 48 83 E8 1 
	sbb	%rax,%rax	# 42DE84 48 19 C0 
	test	%rax,%rax	# 42DE87 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42DE8A 48 8B 45 F8 
	jz	 ( xchg,+39  ) 	# 42DE8E F 84 B 0 0 0 
	mov	$0x90,%eax	# 42DE94 B8 90 0 0 0 
	call	 ( DO|; ) 	# 42DE99 E8 27 E1 FF FF 
	ret		# 42DE9E C3 
//			   OVER	0= IF NIP	$90 DO|; BREAK

	mov	%rax,-0x08(%rbp)	# 42DE9F 48 89 45 F8 
	mov	0x00(%rbp),%rax	# 42DEA3 48 8B 45 0 
	sub	$0x01,%rax	# 42DEA7 48 83 E8 1 
	sbb	%rax,%rax	# 42DEAB 48 19 C0 
	test	%rax,%rax	# 42DEAE 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42DEB1 48 8B 45 F8 
	jz	 ( xchg,+64  ) 	# 42DEB5 F 84 F 0 0 0 
	mov	%rax,0x00(%rbp)	# 42DEBB 48 89 45 0 
	mov	$0x90,%eax	# 42DEBF B8 90 0 0 0 
	call	 ( DO|; ) 	# 42DEC4 E8 FC E0 FF FF 
	ret		# 42DEC9 C3 
//				0x86 ADD|  BREAK

	mov	%rax,-0x08(%rbp)	# 42DECA 48 89 45 F8 
	mov	$0x86,%eax	# 42DECE B8 86 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DED3 48 8D 6D F8 
	call	 ( ADD| ) 	# 42DED7 E8 DC F0 FF FF 
	ret		# 42DEDC C3 
//

//  #%r_x,(%r_x)		IF 0x86 ADD|  BREAK

	call	 ( #%r_x,(%r_x) ) 	# 42DEDD E8 D1 DE FF FF 
	test	%rax,%rax	# 42DEE2 48 85 C0 
	mov	0x00(%rbp),%rax	# 42DEE5 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42DEE9 48 8D 6D 8 
	jz	 ( xchg,+A0  ) 	# 42DEED F 84 13 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42DEF3 48 89 45 F8 
	mov	$0x86,%eax	# 42DEF7 B8 86 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DEFC 48 8D 6D F8 
	call	 ( ADD| ) 	# 42DF00 E8 B3 F0 FF FF 
	ret		# 42DF05 C3 
//  #%r_x,(%r_x,%r_x)	IF 0x86 ADD|  BREAK 

	call	 ( #%r_x,(%r_x,%r_x) ) 	# 42DF06 E8 B8 DE FF FF 
	test	%rax,%rax	# 42DF0B 48 85 C0 
	mov	0x00(%rbp),%rax	# 42DF0E 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42DF12 48 8D 6D 8 
	jz	 ( xchg,+C9  ) 	# 42DF16 F 84 13 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42DF1C 48 89 45 F8 
	mov	$0x86,%eax	# 42DF20 B8 86 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DF25 48 8D 6D F8 
	call	 ( ADD| ) 	# 42DF29 E8 8A F0 FF FF 
	ret		# 42DF2E C3 
//

//  #(%r_x),%r_x		IF 0x84 ADD|  BREAK

	call	 ( #(%r_x),%r_x ) 	# 42DF2F E8 3F DE FF FF 
	test	%rax,%rax	# 42DF34 48 85 C0 
	mov	0x00(%rbp),%rax	# 42DF37 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42DF3B 48 8D 6D 8 
	jz	 ( xchg,+F2  ) 	# 42DF3F F 84 13 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42DF45 48 89 45 F8 
	mov	$0x84,%eax	# 42DF49 B8 84 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DF4E 48 8D 6D F8 
	call	 ( ADD| ) 	# 42DF52 E8 61 F0 FF FF 
	ret		# 42DF57 C3 
//  #(%r_x,%r_x),%r_x	IF 0x84 ADD|  BREAK 

	call	 ( #(%r_x,%r_x),%r_x ) 	# 42DF58 E8 26 DE FF FF 
	test	%rax,%rax	# 42DF5D 48 85 C0 
	mov	0x00(%rbp),%rax	# 42DF60 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42DF64 48 8D 6D 8 
	jz	 ( xchg,+11B  ) 	# 42DF68 F 84 13 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42DF6E 48 89 45 F8 
	mov	$0x84,%eax	# 42DF72 B8 84 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DF77 48 8D 6D F8 
	call	 ( ADD| ) 	# 42DF7B E8 38 F0 FF FF 
	ret		# 42DF80 C3 
//

//\  #%r_x,(%r_x)		IF SWAP ['] #(%r_x),%r_x	>PARM 0x84 ADD| BREAK

//\  #%r_x,(%r_x,%r_x)	IF  ROT ['] #(%r_x,%r_x),%r_x	>PARM 0x84 ADD| BREAK 

//

//  -333 THROW

	mov	%rax,-0x08(%rbp)	# 42DF81 48 89 45 F8 
	movq	$-0x14D,%rax	# 42DF85 48 C7 C0 B3 FE FF FF 
	lea	-0x08(%rbp),%rbp	# 42DF8C 48 8D 6D F8 
	call	 ( THROW ) 	# 42DF90 E8 1F 76 FD FF 
// ;

	ret		# 42DF95 C3 
//

//: test,

//

//  #%r_x,%r_x		IF 0x84 ADD|  BREAK

testcom:
	call	 ( #%r_x,%r_x ) 	# 42DF96 E8 98 DD FF FF 
	test	%rax,%rax	# 42DF9B 48 85 C0 
	mov	0x00(%rbp),%rax	# 42DF9E 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42DFA2 48 8D 6D 8 
	jz	 ( test,+29  ) 	# 42DFA6 F 84 13 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42DFAC 48 89 45 F8 
	mov	$0x84,%eax	# 42DFB0 B8 84 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DFB5 48 8D 6D F8 
	call	 ( ADD| ) 	# 42DFB9 E8 FA EF FF FF 
	ret		# 42DFBE C3 
//

//  #%r_x,(%r_x)		IF 0x84 ADD|  BREAK

	call	 ( #%r_x,(%r_x) ) 	# 42DFBF E8 EF DD FF FF 
	test	%rax,%rax	# 42DFC4 48 85 C0 
	mov	0x00(%rbp),%rax	# 42DFC7 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42DFCB 48 8D 6D 8 
	jz	 ( test,+52  ) 	# 42DFCF F 84 13 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42DFD5 48 89 45 F8 
	mov	$0x84,%eax	# 42DFD9 B8 84 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42DFDE 48 8D 6D F8 
	call	 ( ADD| ) 	# 42DFE2 E8 D1 EF FF FF 
	ret		# 42DFE7 C3 
//  #%r_x,(%r_x,%r_x)	IF 0x84 ADD|  BREAK 

	call	 ( #%r_x,(%r_x,%r_x) ) 	# 42DFE8 E8 D6 DD FF FF 
	test	%rax,%rax	# 42DFED 48 85 C0 
	mov	0x00(%rbp),%rax	# 42DFF0 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42DFF4 48 8D 6D 8 
	jz	 ( test,+7B  ) 	# 42DFF8 F 84 13 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42DFFE 48 89 45 F8 
	mov	$0x84,%eax	# 42E002 B8 84 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E007 48 8D 6D F8 
	call	 ( ADD| ) 	# 42E00B E8 A8 EF FF FF 
	ret		# 42E010 C3 
//

//  #(%r_x),%r_x		IF 0x86 ADD|  BREAK

	call	 ( #(%r_x),%r_x ) 	# 42E011 E8 5D DD FF FF 
	test	%rax,%rax	# 42E016 48 85 C0 
	mov	0x00(%rbp),%rax	# 42E019 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42E01D 48 8D 6D 8 
	jz	 ( test,+A4  ) 	# 42E021 F 84 13 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42E027 48 89 45 F8 
	mov	$0x86,%eax	# 42E02B B8 86 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E030 48 8D 6D F8 
	call	 ( ADD| ) 	# 42E034 E8 7F EF FF FF 
	ret		# 42E039 C3 
//  #(%r_x,%r_x),%r_x	IF 0x86 ADD|  BREAK 

	call	 ( #(%r_x,%r_x),%r_x ) 	# 42E03A E8 44 DD FF FF 
	test	%rax,%rax	# 42E03F 48 85 C0 
	mov	0x00(%rbp),%rax	# 42E042 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42E046 48 8D 6D 8 
	jz	 ( test,+CD  ) 	# 42E04A F 84 13 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42E050 48 89 45 F8 
	mov	$0x86,%eax	# 42E054 B8 86 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E059 48 8D 6D F8 
	call	 ( ADD| ) 	# 42E05D E8 56 EF FF FF 
	ret		# 42E062 C3 
//

//  REX_W TO SREX_W  ?REX,

	mov	%rax,-0x08(%rbp)	# 42E063 48 89 45 F8 
	mov	 ( REX_W+5  ) (%rip),%rax	# 42E067 48 8B 5 EE D5 FF FF 
	mov	%rax, ( SREX_W+5  ) (%rip)	# 42E06E 48 89 5 3B EF FF FF 
	mov	-0x08(%rbp),%rax	# 42E075 48 8B 45 F8 
	call	 ( ?REX, ) 	# 42E079 E8 1D DF FF FF 
//

//  #$,%r_x IF

	call	 ( #$,%r_x ) 	# 42E07E E8 C0 DC FF FF 
	test	%rax,%rax	# 42E083 48 85 C0 
	mov	0x00(%rbp),%rax	# 42E086 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42E08A 48 8D 6D 8 
	jz	 ( test,+1BC  ) 	# 42E08E F 84 BE 0 0 0 
//		DUP 0= \  ax

	mov	%rax,-0x08(%rbp)	# 42E094 48 89 45 F8 
	sub	$0x01,%rax	# 42E098 48 83 E8 1 
	sbb	%rax,%rax	# 42E09C 48 19 C0 
	test	%rax,%rax	# 42E09F 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42E0A2 48 8B 45 F8 
//		IF	REG>8	IF $a9 DO|; L,

	jz	 ( test,+15E  ) 	# 42E0A6 F 84 48 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42E0AC 48 89 45 F8 
	mov	 ( REG>8+5  ) (%rip),%rax	# 42E0B0 48 8B 5 B2 D5 FF FF 
	test	%rax,%rax	# 42E0B7 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42E0BA 48 8B 45 F8 
	jz	 ( test,+146  ) 	# 42E0BE F 84 18 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42E0C4 48 89 45 F8 
	mov	$0xA9,%eax	# 42E0C8 B8 A9 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E0CD 48 8D 6D F8 
	call	 ( DO|; ) 	# 42E0D1 E8 EF DE FF FF 
	call	 ( L, ) 	# 42E0D6 E8 5A 6E FD FF 
//				BREAK $a8 DO|; C,

	ret		# 42E0DB C3 
	mov	%rax,-0x08(%rbp)	# 42E0DC 48 89 45 F8 
	mov	$0xA8,%eax	# 42E0E0 B8 A8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E0E5 48 8D 6D F8 
	call	 ( DO|; ) 	# 42E0E9 E8 D7 DE FF FF 
	call	 ( C, ) 	# 42E0EE E8 85 6E FD FF 
//		BREAK $C0

	ret		# 42E0F3 C3 
	mov	%rax,-0x08(%rbp)	# 42E0F4 48 89 45 F8 
	movq	$0xC0,-0x10(%rbp)	# 42E0F8 48 C7 45 F0 C0 0 0 0 
	mov	 ( REG>8+5  ) (%rip),%rax	# 42E100 48 8B 5 62 D5 FF FF 
//			REG>8	IF $F7 C, DO|; L,

	test	%rax,%rax	# 42E107 48 85 C0 
	mov	-0x10(%rbp),%rax	# 42E10A 48 8B 45 F0 
	lea	-0x08(%rbp),%rbp	# 42E10E 48 8D 6D F8 
	jz	 ( test,+19F  ) 	# 42E112 F 84 1D 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42E118 48 89 45 F8 
	mov	$0xF7,%eax	# 42E11C B8 F7 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E121 48 8D 6D F8 
	call	 ( C, ) 	# 42E125 E8 4E 6E FD FF 
	call	 ( DO|; ) 	# 42E12A E8 96 DE FF FF 
	call	 ( L, ) 	# 42E12F E8 1 6E FD FF 
//				BREAK $F6 C, DO|; C,

	ret		# 42E134 C3 
	mov	%rax,-0x08(%rbp)	# 42E135 48 89 45 F8 
	mov	$0xF6,%eax	# 42E139 B8 F6 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E13E 48 8D 6D F8 
	call	 ( C, ) 	# 42E142 E8 31 6E FD FF 
	call	 ( DO|; ) 	# 42E147 E8 79 DE FF FF 
	call	 ( C, ) 	# 42E14C E8 27 6E FD FF 
//	   BREAK

	ret		# 42E151 C3 
//

// #$,(%r_x)	IF $F7  C, ['] #(%r_x)		>PARM 0 (()), L,	BREAK

	call	 ( #$,(%r_x) ) 	# 42E152 E8 3C DC FF FF 
	test	%rax,%rax	# 42E157 48 85 C0 
	mov	0x00(%rbp),%rax	# 42E15A 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42E15E 48 8D 6D 8 
	jz	 ( test,+20C  ) 	# 42E162 F 84 3A 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42E168 48 89 45 F8 
	mov	$0xF7,%eax	# 42E16C B8 F7 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E171 48 8D 6D F8 
	call	 ( C, ) 	# 42E175 E8 FE 6D FD FF 
	mov	%rax,-0x08(%rbp)	# 42E17A 48 89 45 F8 
	mov	$0x42BD53,%eax	# 42E17E B8 53 BD 42 0 
	mov	0x05(%rax),%rax	# 42E183 48 8B 40 5 
	mov	%rax, ( PARM_HESH+5  ) (%rip)	# 42E187 48 89 5 F7 D3 FF FF 
	mov	$0x0,%eax	# 42E18E B8 0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E193 48 8D 6D F8 
	call	 ( (()), ) 	# 42E197 E8 40 E4 FF FF 
	call	 ( L, ) 	# 42E19C E8 94 6D FD FF 
	ret		# 42E1A1 C3 
// #$,(%r_x,%r_x)	IF $F7  C, ['] #(%r_x,%r_x)	>PARM 0 (()), L,	BREAK

	call	 ( #$,(%r_x,%r_x) ) 	# 42E1A2 E8 FC DB FF FF 
	test	%rax,%rax	# 42E1A7 48 85 C0 
	mov	0x00(%rbp),%rax	# 42E1AA 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42E1AE 48 8D 6D 8 
	jz	 ( test,+25C  ) 	# 42E1B2 F 84 3A 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42E1B8 48 89 45 F8 
	mov	$0xF7,%eax	# 42E1BC B8 F7 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E1C1 48 8D 6D F8 
	call	 ( C, ) 	# 42E1C5 E8 AE 6D FD FF 
	mov	%rax,-0x08(%rbp)	# 42E1CA 48 89 45 F8 
	mov	$0x42BD63,%eax	# 42E1CE B8 63 BD 42 0 
	mov	0x05(%rax),%rax	# 42E1D3 48 8B 40 5 
	mov	%rax, ( PARM_HESH+5  ) (%rip)	# 42E1D7 48 89 5 A7 D3 FF FF 
	mov	$0x0,%eax	# 42E1DE B8 0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E1E3 48 8D 6D F8 
	call	 ( (()), ) 	# 42E1E7 E8 F0 E3 FF FF 
	call	 ( L, ) 	# 42E1EC E8 44 6D FD FF 
	ret		# 42E1F1 C3 
//

//  -333 THROW

	mov	%rax,-0x08(%rbp)	# 42E1F2 48 89 45 F8 
	movq	$-0x14D,%rax	# 42E1F6 48 C7 C0 B3 FE FF FF 
	lea	-0x08(%rbp),%rbp	# 42E1FD 48 8D 6D F8 
	call	 ( THROW ) 	# 42E201 E8 AE 73 FD FF 
// ;

	ret		# 42E206 C3 
//

//: lea,

//

//  #(%r_x),%r_x		IF SWAP [']  #%r_x,(%r_x)	>PARM 0x8C ADD|  BREAK

leacom:
	call	 ( #(%r_x),%r_x ) 	# 42E207 E8 67 DB FF FF 
	test	%rax,%rax	# 42E20C 48 85 C0 
	mov	0x00(%rbp),%rax	# 42E20F 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42E213 48 8D 6D 8 
	jz	 ( lea,+41  ) 	# 42E217 F 84 2B 0 0 0 
	mov	0x00(%rbp),%rdx	# 42E21D 48 8B 55 0 
	mov	%rax,0x00(%rbp)	# 42E221 48 89 45 0 
	mov	%rdx,-0x08(%rbp)	# 42E225 48 89 55 F8 
	mov	$0x42BDB3,%eax	# 42E229 B8 B3 BD 42 0 
	mov	0x05(%rax),%rax	# 42E22E 48 8B 40 5 
	mov	%rax, ( PARM_HESH+5  ) (%rip)	# 42E232 48 89 5 4C D3 FF FF 
	mov	$0x8C,%eax	# 42E239 B8 8C 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E23E 48 8D 6D F8 
	call	 ( ADD| ) 	# 42E242 E8 71 ED FF FF 
	ret		# 42E247 C3 
//  #(%r_x,%r_x),%r_x	IF -ROT [']  #%r_x,(%r_x,%r_x)	>PARM 0x8C ADD|  BREAK 

	call	 ( #(%r_x,%r_x),%r_x ) 	# 42E248 E8 36 DB FF FF 
	test	%rax,%rax	# 42E24D 48 85 C0 
	mov	0x00(%rbp),%rax	# 42E250 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42E254 48 8D 6D 8 
	jz	 ( lea,+8A  ) 	# 42E258 F 84 33 0 0 0 
	mov	0x08(%rbp),%rdx	# 42E25E 48 8B 55 8 
	mov	%rax,0x08(%rbp)	# 42E262 48 89 45 8 
	mov	0x00(%rbp),%rax	# 42E266 48 8B 45 0 
	mov	%rdx,0x00(%rbp)	# 42E26A 48 89 55 0 
	mov	%rax,-0x08(%rbp)	# 42E26E 48 89 45 F8 
	mov	$0x42BDC3,%eax	# 42E272 B8 C3 BD 42 0 
	mov	0x05(%rax),%rax	# 42E277 48 8B 40 5 
	mov	%rax, ( PARM_HESH+5  ) (%rip)	# 42E27B 48 89 5 3 D3 FF FF 
	mov	$0x8C,%eax	# 42E282 B8 8C 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E287 48 8D 6D F8 
	call	 ( ADD| ) 	# 42E28B E8 28 ED FF FF 
	ret		# 42E290 C3 
//

//  -333 THROW

	mov	%rax,-0x08(%rbp)	# 42E291 48 89 45 F8 
	movq	$-0x14D,%rax	# 42E295 48 C7 C0 B3 FE FF FF 
	lea	-0x08(%rbp),%rbp	# 42E29C 48 8D 6D F8 
	call	 ( THROW ) 	# 42E2A0 E8 F 73 FD FF 
// ;

	ret		# 42E2A5 C3 
//

//

//: SH,	?REX,

SHcom:
	call	 ( ?REX, ) 	# 42E2A6 E8 F0 DC FF FF 
//	#%r_x	IF	$D0 REG>8 OR C, DO|;	BREAK

	call	 ( #%r_x ) 	# 42E2AB E8 73 DA FF FF 
	test	%rax,%rax	# 42E2B0 48 85 C0 
	mov	0x00(%rbp),%rax	# 42E2B3 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42E2B7 48 8D 6D 8 
	jz	 ( SH,+41  ) 	# 42E2BB F 84 26 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42E2C1 48 89 45 F8 
	movq	$0xD0,-0x10(%rbp)	# 42E2C5 48 C7 45 F0 D0 0 0 0 
	mov	 ( REG>8+5  ) (%rip),%rax	# 42E2CD 48 8B 5 95 D3 FF FF 
	or	-0x10(%rbp),%rax	# 42E2D4 48 B 45 F0 
	lea	-0x08(%rbp),%rbp	# 42E2D8 48 8D 6D F8 
	call	 ( C, ) 	# 42E2DC E8 97 6C FD FF 
	call	 ( DO|; ) 	# 42E2E1 E8 DF DC FF FF 
	ret		# 42E2E6 C3 
//	#$,%r_x	IF	$C0 REG>8 OR C, DO|; C,	BREAK

	call	 ( #$,%r_x ) 	# 42E2E7 E8 57 DA FF FF 
	test	%rax,%rax	# 42E2EC 48 85 C0 
	mov	0x00(%rbp),%rax	# 42E2EF 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42E2F3 48 8D 6D 8 
	jz	 ( SH,+82  ) 	# 42E2F7 F 84 2B 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42E2FD 48 89 45 F8 
	movq	$0xC0,-0x10(%rbp)	# 42E301 48 C7 45 F0 C0 0 0 0 
	mov	 ( REG>8+5  ) (%rip),%rax	# 42E309 48 8B 5 59 D3 FF FF 
	or	-0x10(%rbp),%rax	# 42E310 48 B 45 F0 
	lea	-0x08(%rbp),%rbp	# 42E314 48 8D 6D F8 
	call	 ( C, ) 	# 42E318 E8 5B 6C FD FF 
	call	 ( DO|; ) 	# 42E31D E8 A3 DC FF FF 
	call	 ( C, ) 	# 42E322 E8 51 6C FD FF 
	ret		# 42E327 C3 
//	#%r_x,%r_x

	call	 ( #%r_x,%r_x ) 	# 42E328 E8 6 DA FF FF 
//		IF 	ROT ['] %cl >BODY @ <> IF -3333 THROW THEN

	test	%rax,%rax	# 42E32D 48 85 C0 
	mov	0x00(%rbp),%rax	# 42E330 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42E334 48 8D 6D 8 
	jz	 ( SH,+109  ) 	# 42E338 F 84 71 0 0 0 
	mov	0x00(%rbp),%rdx	# 42E33E 48 8B 55 0 
	mov	%rax,0x00(%rbp)	# 42E342 48 89 45 0 
	mov	0x08(%rbp),%rax	# 42E346 48 8B 45 8 
	mov	%rdx,0x08(%rbp)	# 42E34A 48 89 55 8 
	mov	%rax,-0x08(%rbp)	# 42E34E 48 89 45 F8 
	mov	$0x42B9F0,%eax	# 42E352 B8 F0 B9 42 0 
	mov	(%rax),%rax	# 42E357 48 8B 0 
	xor	-0x08(%rbp),%rax	# 42E35A 48 33 45 F8 
		negq	%rax	# 42E35E 48 F7 D8 
	sbb	%rax,%rax	# 42E361 48 19 C0 
	test	%rax,%rax	# 42E364 48 85 C0 
	mov	0x00(%rbp),%rax	# 42E367 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42E36B 48 8D 6D 8 
	jz	 ( SH,+E3  ) 	# 42E36F F 84 14 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42E375 48 89 45 F8 
	movq	$-0xD05,%rax	# 42E379 48 C7 C0 FB F2 FF FF 
	lea	-0x08(%rbp),%rbp	# 42E380 48 8D 6D F8 
	call	 ( THROW ) 	# 42E384 E8 2B 72 FD FF 
//\			$777777777 L,

//			$D2 REG>8 OR C, DO|;	BREAK

	mov	%rax,-0x08(%rbp)	# 42E389 48 89 45 F8 
	movq	$0xD2,-0x10(%rbp)	# 42E38D 48 C7 45 F0 D2 0 0 0 
	mov	 ( REG>8+5  ) (%rip),%rax	# 42E395 48 8B 5 CD D2 FF FF 
	or	-0x10(%rbp),%rax	# 42E39C 48 B 45 F0 
	lea	-0x08(%rbp),%rbp	# 42E3A0 48 8D 6D F8 
	call	 ( C, ) 	# 42E3A4 E8 CF 6B FD FF 
	call	 ( DO|; ) 	# 42E3A9 E8 17 DC FF FF 
	ret		# 42E3AE C3 
//

// #$,(%r_x)	IF	$C0 REG>8 OR C,	['] #(%r_x)		>PARM $3F AND (()), C,    BREAK

	call	 ( #$,(%r_x) ) 	# 42E3AF E8 DF D9 FF FF 
	test	%rax,%rax	# 42E3B4 48 85 C0 
	mov	0x00(%rbp),%rax	# 42E3B7 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42E3BB 48 8D 6D 8 
	jz	 ( SH,+167  ) 	# 42E3BF F 84 48 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42E3C5 48 89 45 F8 
	movq	$0xC0,-0x10(%rbp)	# 42E3C9 48 C7 45 F0 C0 0 0 0 
	mov	 ( REG>8+5  ) (%rip),%rax	# 42E3D1 48 8B 5 91 D2 FF FF 
	or	-0x10(%rbp),%rax	# 42E3D8 48 B 45 F0 
	lea	-0x08(%rbp),%rbp	# 42E3DC 48 8D 6D F8 
	call	 ( C, ) 	# 42E3E0 E8 93 6B FD FF 
	mov	%rax,-0x08(%rbp)	# 42E3E5 48 89 45 F8 
	mov	$0x42BD53,%eax	# 42E3E9 B8 53 BD 42 0 
	mov	0x05(%rax),%rax	# 42E3EE 48 8B 40 5 
	mov	%rax, ( PARM_HESH+5  ) (%rip)	# 42E3F2 48 89 5 8C D1 FF FF 
	mov	$0x3F,%eax	# 42E3F9 B8 3F 0 0 0 
	and	-0x08(%rbp),%rax	# 42E3FE 48 23 45 F8 
	call	 ( (()), ) 	# 42E402 E8 D5 E1 FF FF 
	call	 ( C, ) 	# 42E407 E8 6C 6B FD FF 
	ret		# 42E40C C3 
// #$,(%r_x,%r_x)	IF	$C0 REG>8 OR C,	['] #(%r_x,%r_x)	>PARM $3F AND (()), C,    BREAK

	call	 ( #$,(%r_x,%r_x) ) 	# 42E40D E8 91 D9 FF FF 
	test	%rax,%rax	# 42E412 48 85 C0 
	mov	0x00(%rbp),%rax	# 42E415 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42E419 48 8D 6D 8 
	jz	 ( SH,+1C5  ) 	# 42E41D F 84 48 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42E423 48 89 45 F8 
	movq	$0xC0,-0x10(%rbp)	# 42E427 48 C7 45 F0 C0 0 0 0 
	mov	 ( REG>8+5  ) (%rip),%rax	# 42E42F 48 8B 5 33 D2 FF FF 
	or	-0x10(%rbp),%rax	# 42E436 48 B 45 F0 
	lea	-0x08(%rbp),%rbp	# 42E43A 48 8D 6D F8 
	call	 ( C, ) 	# 42E43E E8 35 6B FD FF 
	mov	%rax,-0x08(%rbp)	# 42E443 48 89 45 F8 
	mov	$0x42BD63,%eax	# 42E447 B8 63 BD 42 0 
	mov	0x05(%rax),%rax	# 42E44C 48 8B 40 5 
	mov	%rax, ( PARM_HESH+5  ) (%rip)	# 42E450 48 89 5 2E D1 FF FF 
	mov	$0x3F,%eax	# 42E457 B8 3F 0 0 0 
	and	-0x08(%rbp),%rax	# 42E45C 48 23 45 F8 
	call	 ( (()), ) 	# 42E460 E8 77 E1 FF FF 
	call	 ( C, ) 	# 42E465 E8 E 6B FD FF 
	ret		# 42E46A C3 
//

//  -333 THROW

	mov	%rax,-0x08(%rbp)	# 42E46B 48 89 45 F8 
	movq	$-0x14D,%rax	# 42E46F 48 C7 C0 B3 FE FF FF 
	lea	-0x08(%rbp),%rbp	# 42E476 48 8D 6D F8 
	call	 ( THROW ) 	# 42E47A E8 35 71 FD FF 
//;

	ret		# 42E47F C3 
//

//: rol, $c0 SH, ;

rolcom:
	mov	%rax,-0x08(%rbp)	# 42E480 48 89 45 F8 
	mov	$0xC0,%eax	# 42E484 B8 C0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E489 48 8D 6D F8 
	call	 ( SH, ) 	# 42E48D E8 14 FE FF FF 
	ret		# 42E492 C3 
//: ror, $c8 SH, ;

rorcom:
	mov	%rax,-0x08(%rbp)	# 42E493 48 89 45 F8 
	mov	$0xC8,%eax	# 42E497 B8 C8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E49C 48 8D 6D F8 
	call	 ( SH, ) 	# 42E4A0 E8 1 FE FF FF 
	ret		# 42E4A5 C3 
//: rcl, $d0 SH, ;

rclcom:
	mov	%rax,-0x08(%rbp)	# 42E4A6 48 89 45 F8 
	mov	$0xD0,%eax	# 42E4AA B8 D0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E4AF 48 8D 6D F8 
	call	 ( SH, ) 	# 42E4B3 E8 EE FD FF FF 
	ret		# 42E4B8 C3 
//: rcr, $d8 SH, ;

rcrcom:
	mov	%rax,-0x08(%rbp)	# 42E4B9 48 89 45 F8 
	mov	$0xD8,%eax	# 42E4BD B8 D8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E4C2 48 8D 6D F8 
	call	 ( SH, ) 	# 42E4C6 E8 DB FD FF FF 
	ret		# 42E4CB C3 
//: shl, $e0 SH, ;

shlcom:
	mov	%rax,-0x08(%rbp)	# 42E4CC 48 89 45 F8 
	mov	$0xE0,%eax	# 42E4D0 B8 E0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E4D5 48 8D 6D F8 
	call	 ( SH, ) 	# 42E4D9 E8 C8 FD FF FF 
	ret		# 42E4DE C3 
//: shr, $e8 SH, ;

shrcom:
	mov	%rax,-0x08(%rbp)	# 42E4DF 48 89 45 F8 
	mov	$0xE8,%eax	# 42E4E3 B8 E8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E4E8 48 8D 6D F8 
	call	 ( SH, ) 	# 42E4EC E8 B5 FD FF FF 
	ret		# 42E4F1 C3 
//: sal, $f0 SH, ;

salcom:
	mov	%rax,-0x08(%rbp)	# 42E4F2 48 89 45 F8 
	mov	$0xF0,%eax	# 42E4F6 B8 F0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E4FB 48 8D 6D F8 
	call	 ( SH, ) 	# 42E4FF E8 A2 FD FF FF 
	ret		# 42E504 C3 
//: sar, $f8 SH, ;

sarcom:
	mov	%rax,-0x08(%rbp)	# 42E505 48 89 45 F8 
	mov	$0xF8,%eax	# 42E509 B8 F8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E50E 48 8D 6D F8 
	call	 ( SH, ) 	# 42E512 E8 8F FD FF FF 
	ret		# 42E517 C3 
//

//: SHB,  0 TO REG>8 SH, ;

SHBcom:
	movq	$0x0, ( REG>8+5  ) (%rip)	# 42E518 48 C7 5 46 D1 FF FF 0 0 0 0 
	call	 ( SH, ) 	# 42E523 E8 7E FD FF FF 
	ret		# 42E528 C3 
//

//: rolb, $c0 SHB, ;

rolbcom:
	mov	%rax,-0x08(%rbp)	# 42E529 48 89 45 F8 
	mov	$0xC0,%eax	# 42E52D B8 C0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E532 48 8D 6D F8 
	call	 ( SHB, ) 	# 42E536 E8 DD FF FF FF 
	ret		# 42E53B C3 
//: rorb, $c8 SHB, ;

rorbcom:
	mov	%rax,-0x08(%rbp)	# 42E53C 48 89 45 F8 
	mov	$0xC8,%eax	# 42E540 B8 C8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E545 48 8D 6D F8 
	call	 ( SHB, ) 	# 42E549 E8 CA FF FF FF 
	ret		# 42E54E C3 
//: rclb, $d0 SHB, ;

rclbcom:
	mov	%rax,-0x08(%rbp)	# 42E54F 48 89 45 F8 
	mov	$0xD0,%eax	# 42E553 B8 D0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E558 48 8D 6D F8 
	call	 ( SHB, ) 	# 42E55C E8 B7 FF FF FF 
	ret		# 42E561 C3 
//: rcrb, $d8 SHB, ;

rcrbcom:
	mov	%rax,-0x08(%rbp)	# 42E562 48 89 45 F8 
	mov	$0xD8,%eax	# 42E566 B8 D8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E56B 48 8D 6D F8 
	call	 ( SHB, ) 	# 42E56F E8 A4 FF FF FF 
	ret		# 42E574 C3 
//: shlb, $e0 SHB, ;

shlbcom:
	mov	%rax,-0x08(%rbp)	# 42E575 48 89 45 F8 
	mov	$0xE0,%eax	# 42E579 B8 E0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E57E 48 8D 6D F8 
	call	 ( SHB, ) 	# 42E582 E8 91 FF FF FF 
	ret		# 42E587 C3 
//: shrb, $e8 SHB, ;

shrbcom:
	mov	%rax,-0x08(%rbp)	# 42E588 48 89 45 F8 
	mov	$0xE8,%eax	# 42E58C B8 E8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E591 48 8D 6D F8 
	call	 ( SHB, ) 	# 42E595 E8 7E FF FF FF 
	ret		# 42E59A C3 
//: salb, $f0 SHB, ;

salbcom:
	mov	%rax,-0x08(%rbp)	# 42E59B 48 89 45 F8 
	mov	$0xF0,%eax	# 42E59F B8 F0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E5A4 48 8D 6D F8 
	call	 ( SHB, ) 	# 42E5A8 E8 6B FF FF FF 
	ret		# 42E5AD C3 
//: sarb, $f8 SHB, ;

sarbcom:
	mov	%rax,-0x08(%rbp)	# 42E5AE 48 89 45 F8 
	mov	$0xF8,%eax	# 42E5B2 B8 F8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E5B7 48 8D 6D F8 
	call	 ( SHB, ) 	# 42E5BB E8 58 FF FF FF 
	ret		# 42E5C0 C3 
//

//: SHW,  66 C, SH, ;

SHWcom:
	mov	%rax,-0x08(%rbp)	# 42E5C1 48 89 45 F8 
	mov	$0x42,%eax	# 42E5C5 B8 42 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E5CA 48 8D 6D F8 
	call	 ( C, ) 	# 42E5CE E8 A5 69 FD FF 
	call	 ( SH, ) 	# 42E5D3 E8 CE FC FF FF 
	ret		# 42E5D8 C3 
//

//: rolw, $c0 SHW, ;

rolwcom:
	mov	%rax,-0x08(%rbp)	# 42E5D9 48 89 45 F8 
	mov	$0xC0,%eax	# 42E5DD B8 C0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E5E2 48 8D 6D F8 
	call	 ( SHW, ) 	# 42E5E6 E8 D6 FF FF FF 
	ret		# 42E5EB C3 
//: rorw, $c8 SHW, ;

rorwcom:
	mov	%rax,-0x08(%rbp)	# 42E5EC 48 89 45 F8 
	mov	$0xC8,%eax	# 42E5F0 B8 C8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E5F5 48 8D 6D F8 
	call	 ( SHW, ) 	# 42E5F9 E8 C3 FF FF FF 
	ret		# 42E5FE C3 
//: rclw, $d0 SHW, ;

rclwcom:
	mov	%rax,-0x08(%rbp)	# 42E5FF 48 89 45 F8 
	mov	$0xD0,%eax	# 42E603 B8 D0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E608 48 8D 6D F8 
	call	 ( SHW, ) 	# 42E60C E8 B0 FF FF FF 
	ret		# 42E611 C3 
//: rcrw, $d8 SHW, ;

rcrwcom:
	mov	%rax,-0x08(%rbp)	# 42E612 48 89 45 F8 
	mov	$0xD8,%eax	# 42E616 B8 D8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E61B 48 8D 6D F8 
	call	 ( SHW, ) 	# 42E61F E8 9D FF FF FF 
	ret		# 42E624 C3 
//: shlw, $e0 SHW, ;

shlwcom:
	mov	%rax,-0x08(%rbp)	# 42E625 48 89 45 F8 
	mov	$0xE0,%eax	# 42E629 B8 E0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E62E 48 8D 6D F8 
	call	 ( SHW, ) 	# 42E632 E8 8A FF FF FF 
	ret		# 42E637 C3 
//: shrw, $e8 SHW, ;

shrwcom:
	mov	%rax,-0x08(%rbp)	# 42E638 48 89 45 F8 
	mov	$0xE8,%eax	# 42E63C B8 E8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E641 48 8D 6D F8 
	call	 ( SHW, ) 	# 42E645 E8 77 FF FF FF 
	ret		# 42E64A C3 
//: salw, $f0 SHW, ;

salwcom:
	mov	%rax,-0x08(%rbp)	# 42E64B 48 89 45 F8 
	mov	$0xF0,%eax	# 42E64F B8 F0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E654 48 8D 6D F8 
	call	 ( SHW, ) 	# 42E658 E8 64 FF FF FF 
	ret		# 42E65D C3 
//: sarw, $f8 SHW, ;

sarwcom:
	mov	%rax,-0x08(%rbp)	# 42E65E 48 89 45 F8 
	mov	$0xF8,%eax	# 42E662 B8 F8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E667 48 8D 6D F8 
	call	 ( SHW, ) 	# 42E66B E8 51 FF FF FF 
	ret		# 42E670 C3 
//

//: roll, LOMG? rol, ;

rollcom:
	call	 ( LOMG? ) 	# 42E671 E8 5A F5 FF FF 
	call	 ( rol, ) 	# 42E676 E8 5 FE FF FF 
	ret		# 42E67B C3 
//: rorl, LOMG? ror, ;

rorlcom:
	call	 ( LOMG? ) 	# 42E67C E8 4F F5 FF FF 
	call	 ( ror, ) 	# 42E681 E8 D FE FF FF 
	ret		# 42E686 C3 
//: rcll, LOMG? rcl, ;

rcllcom:
	call	 ( LOMG? ) 	# 42E687 E8 44 F5 FF FF 
	call	 ( rcl, ) 	# 42E68C E8 15 FE FF FF 
	ret		# 42E691 C3 
//: rcrl, LOMG? rcr, ;

rcrlcom:
	call	 ( LOMG? ) 	# 42E692 E8 39 F5 FF FF 
	call	 ( rcr, ) 	# 42E697 E8 1D FE FF FF 
	ret		# 42E69C C3 
//: shll, LOMG? shl, ;

shllcom:
	call	 ( LOMG? ) 	# 42E69D E8 2E F5 FF FF 
	call	 ( shl, ) 	# 42E6A2 E8 25 FE FF FF 
	ret		# 42E6A7 C3 
//: shrl, LOMG? shr, ;

shrlcom:
	call	 ( LOMG? ) 	# 42E6A8 E8 23 F5 FF FF 
	call	 ( shr, ) 	# 42E6AD E8 2D FE FF FF 
	ret		# 42E6B2 C3 
//: sall, LOMG? sal, ;

sallcom:
	call	 ( LOMG? ) 	# 42E6B3 E8 18 F5 FF FF 
	call	 ( sal, ) 	# 42E6B8 E8 35 FE FF FF 
	ret		# 42E6BD C3 
//: sarl, LOMG? sar, ;

sarlcom:
	call	 ( LOMG? ) 	# 42E6BE E8 D F5 FF FF 
	call	 ( sar, ) 	# 42E6C3 E8 3D FE FF FF 
	ret		# 42E6C8 C3 
//

//: rolq, $8 TO REX_W rol, ;

rolqcom:
	movq	$0x8, ( REX_W+5  ) (%rip)	# 42E6C9 48 C7 5 88 CF FF FF 8 0 0 0 
	call	 ( rol, ) 	# 42E6D4 E8 A7 FD FF FF 
	ret		# 42E6D9 C3 
//: rorq, $8 TO REX_W ror, ;

rorqcom:
	movq	$0x8, ( REX_W+5  ) (%rip)	# 42E6DA 48 C7 5 77 CF FF FF 8 0 0 0 
	call	 ( ror, ) 	# 42E6E5 E8 A9 FD FF FF 
	ret		# 42E6EA C3 
//: rclq, $8 TO REX_W rcl, ;

rclqcom:
	movq	$0x8, ( REX_W+5  ) (%rip)	# 42E6EB 48 C7 5 66 CF FF FF 8 0 0 0 
	call	 ( rcl, ) 	# 42E6F6 E8 AB FD FF FF 
	ret		# 42E6FB C3 
//: rcrq, $8 TO REX_W rcr, ;

rcrqcom:
	movq	$0x8, ( REX_W+5  ) (%rip)	# 42E6FC 48 C7 5 55 CF FF FF 8 0 0 0 
	call	 ( rcr, ) 	# 42E707 E8 AD FD FF FF 
	ret		# 42E70C C3 
//: shlq, $8 TO REX_W shl, ;

shlqcom:
	movq	$0x8, ( REX_W+5  ) (%rip)	# 42E70D 48 C7 5 44 CF FF FF 8 0 0 0 
	call	 ( shl, ) 	# 42E718 E8 AF FD FF FF 
	ret		# 42E71D C3 
//: shrq, $8 TO REX_W shr, ;

shrqcom:
	movq	$0x8, ( REX_W+5  ) (%rip)	# 42E71E 48 C7 5 33 CF FF FF 8 0 0 0 
	call	 ( shr, ) 	# 42E729 E8 B1 FD FF FF 
	ret		# 42E72E C3 
//: salq, $8 TO REX_W sal, ;

salqcom:
	movq	$0x8, ( REX_W+5  ) (%rip)	# 42E72F 48 C7 5 22 CF FF FF 8 0 0 0 
	call	 ( sal, ) 	# 42E73A E8 B3 FD FF FF 
	ret		# 42E73F C3 
//: sarq, $8 TO REX_W sar, ;

sarqcom:
	movq	$0x8, ( REX_W+5  ) (%rip)	# 42E740 48 C7 5 11 CF FF FF 8 0 0 0 
	call	 ( sar, ) 	# 42E74B E8 B5 FD FF FF 
	ret		# 42E750 C3 
//

//: btc,	?REX,

btccom:
	call	 ( ?REX, ) 	# 42E751 E8 45 D8 FF FF 
//	#$,%r_x	IF $ba0f W, $f8 DO|; C,	BREAK

	call	 ( #$,%r_x ) 	# 42E756 E8 E8 D5 FF FF 
	test	%rax,%rax	# 42E75B 48 85 C0 
	mov	0x00(%rbp),%rax	# 42E75E 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42E762 48 8D 6D 8 
	jz	 ( btc,+45  ) 	# 42E766 F 84 2A 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42E76C 48 89 45 F8 
	mov	$0xBA0F,%eax	# 42E770 B8 F BA 0 0 
	lea	-0x08(%rbp),%rbp	# 42E775 48 8D 6D F8 
	call	 ( W, ) 	# 42E779 E8 D8 67 FD FF 
	mov	%rax,-0x08(%rbp)	# 42E77E 48 89 45 F8 
	mov	$0xF8,%eax	# 42E782 B8 F8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E787 48 8D 6D F8 
	call	 ( DO|; ) 	# 42E78B E8 35 D8 FF FF 
	call	 ( C, ) 	# 42E790 E8 E3 67 FD FF 
	ret		# 42E795 C3 
//  -333 THROW

	mov	%rax,-0x08(%rbp)	# 42E796 48 89 45 F8 
	movq	$-0x14D,%rax	# 42E79A 48 C7 C0 B3 FE FF FF 
	lea	-0x08(%rbp),%rbp	# 42E7A1 48 8D 6D F8 
	call	 ( THROW ) 	# 42E7A5 E8 A 6E FD FF 
//;

	ret		# 42E7AA C3 
//

//: CALL,   #%r_x IF 0 TO REX.RBX 0 TO REX_W $FF C, $D0 DO|; BREAK

CALLcom:
	call	 ( #%r_x ) 	# 42E7AB E8 73 D5 FF FF 
	test	%rax,%rax	# 42E7B0 48 85 C0 
	mov	0x00(%rbp),%rax	# 42E7B3 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42E7B7 48 8D 6D 8 
	jz	 ( CALL,+51  ) 	# 42E7BB F 84 3B 0 0 0 
	movq	$0x0, ( REX.RBX+5  ) (%rip)	# 42E7C1 48 C7 5 83 CE FF FF 0 0 0 0 
	movq	$0x0, ( REX_W+5  ) (%rip)	# 42E7CC 48 C7 5 85 CE FF FF 0 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42E7D7 48 89 45 F8 
	mov	$0xFF,%eax	# 42E7DB B8 FF 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E7E0 48 8D 6D F8 
	call	 ( C, ) 	# 42E7E4 E8 8F 67 FD FF 
	mov	%rax,-0x08(%rbp)	# 42E7E9 48 89 45 F8 
	mov	$0xD0,%eax	# 42E7ED B8 D0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E7F2 48 8D 6D F8 
	call	 ( DO|; ) 	# 42E7F6 E8 CA D7 FF FF 
	ret		# 42E7FB C3 
//	PARM_HESH IF $ff C, $10 (()), BREAK

	mov	%rax,-0x08(%rbp)	# 42E7FC 48 89 45 F8 
	mov	 ( PARM_HESH+5  ) (%rip),%rax	# 42E800 48 8B 5 7E CD FF FF 
	test	%rax,%rax	# 42E807 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42E80A 48 8B 45 F8 
	jz	 ( CALL,+8E  ) 	# 42E80E F 84 25 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42E814 48 89 45 F8 
	mov	$0xFF,%eax	# 42E818 B8 FF 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E81D 48 8D 6D F8 
	call	 ( C, ) 	# 42E821 E8 52 67 FD FF 
	mov	%rax,-0x08(%rbp)	# 42E826 48 89 45 F8 
	mov	$0x10,%eax	# 42E82A B8 10 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E82F 48 8D 6D F8 
	call	 ( (()), ) 	# 42E833 E8 A4 DD FF FF 
	ret		# 42E838 C3 
//  $E8  C, 4 - HERE - L,  ;

	mov	%rax,-0x08(%rbp)	# 42E839 48 89 45 F8 
	mov	$0xE8,%eax	# 42E83D B8 E8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E842 48 8D 6D F8 
	call	 ( C, ) 	# 42E846 E8 2D 67 FD FF 
	add	$-0x04,%rax	# 42E84B 48 83 C0 FC 
	mov	%rax,-0x08(%rbp)	# 42E84F 48 89 45 F8 
	mov	 ( H-STDOUT+15  ) (%rip),%rax	# 42E853 48 8B 5 78 66 FD FF 
	mov	%rax, ( :-SET+5  ) (%rip)	# 42E85A 48 89 5 63 70 FD FF 
		negq	%rax	# 42E861 48 F7 D8 
	add	-0x08(%rbp),%rax	# 42E864 48 3 45 F8 
	call	 ( L, ) 	# 42E868 E8 C8 66 FD FF 
	ret		# 42E86D C3 
//

//: #LP, C, 1- HERE - C, ;

hashLPcom:
	call	 ( C, ) 	# 42E86E E8 5 67 FD FF 
	lea	-0x01(%rax),%rax	# 42E873 48 8D 40 FF 
	mov	%rax,-0x08(%rbp)	# 42E877 48 89 45 F8 
	mov	 ( H-STDOUT+15  ) (%rip),%rax	# 42E87B 48 8B 5 50 66 FD FF 
	mov	%rax, ( :-SET+5  ) (%rip)	# 42E882 48 89 5 3B 70 FD FF 
		negq	%rax	# 42E889 48 F7 D8 
	add	-0x08(%rbp),%rax	# 42E88C 48 3 45 F8 
	call	 ( C, ) 	# 42E890 E8 E3 66 FD FF 
	ret		# 42E895 C3 
//

//: JMP,   #%r_x IF 0 TO REX.RBX 0 TO REX_W $FF C, $E0 DO|; BREAK

JMPcom:
	call	 ( #%r_x ) 	# 42E896 E8 88 D4 FF FF 
	test	%rax,%rax	# 42E89B 48 85 C0 
	mov	0x00(%rbp),%rax	# 42E89E 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42E8A2 48 8D 6D 8 
	jz	 ( JMP,+51  ) 	# 42E8A6 F 84 3B 0 0 0 
	movq	$0x0, ( REX.RBX+5  ) (%rip)	# 42E8AC 48 C7 5 98 CD FF FF 0 0 0 0 
	movq	$0x0, ( REX_W+5  ) (%rip)	# 42E8B7 48 C7 5 9A CD FF FF 0 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42E8C2 48 89 45 F8 
	mov	$0xFF,%eax	# 42E8C6 B8 FF 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E8CB 48 8D 6D F8 
	call	 ( C, ) 	# 42E8CF E8 A4 66 FD FF 
	mov	%rax,-0x08(%rbp)	# 42E8D4 48 89 45 F8 
	mov	$0xE0,%eax	# 42E8D8 B8 E0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E8DD 48 8D 6D F8 
	call	 ( DO|; ) 	# 42E8E1 E8 DF D6 FF FF 
	ret		# 42E8E6 C3 
//	PARM_HESH IF $ff C, $20 (()), BREAK

	mov	%rax,-0x08(%rbp)	# 42E8E7 48 89 45 F8 
	mov	 ( PARM_HESH+5  ) (%rip),%rax	# 42E8EB 48 8B 5 93 CC FF FF 
	test	%rax,%rax	# 42E8F2 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42E8F5 48 8B 45 F8 
	jz	 ( JMP,+8E  ) 	# 42E8F9 F 84 25 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42E8FF 48 89 45 F8 
	mov	$0xFF,%eax	# 42E903 B8 FF 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E908 48 8D 6D F8 
	call	 ( C, ) 	# 42E90C E8 67 66 FD FF 
	mov	%rax,-0x08(%rbp)	# 42E911 48 89 45 F8 
	mov	$0x20,%eax	# 42E915 B8 20 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E91A 48 8D 6D F8 
	call	 ( (()), ) 	# 42E91E E8 B9 DC FF FF 
	ret		# 42E923 C3 
//  OVER 1- HERE - SHORT? IF $eb #LP, BREAK

	mov	%rax,-0x08(%rbp)	# 42E924 48 89 45 F8 
	mov	0x00(%rbp),%rax	# 42E928 48 8B 45 0 
	lea	-0x01(%rax),%rax	# 42E92C 48 8D 40 FF 
	mov	%rax,-0x10(%rbp)	# 42E930 48 89 45 F0 
	mov	 ( H-STDOUT+15  ) (%rip),%rax	# 42E934 48 8B 5 97 65 FD FF 
	mov	%rax, ( :-SET+5  ) (%rip)	# 42E93B 48 89 5 82 6F FD FF 
		negq	%rax	# 42E942 48 F7 D8 
	add	-0x10(%rbp),%rax	# 42E945 48 3 45 F0 
	lea	-0x08(%rbp),%rbp	# 42E949 48 8D 6D F8 
	call	 ( SHORT? ) 	# 42E94D E8 8 6D FD FF 
	test	%rax,%rax	# 42E952 48 85 C0 
	mov	0x00(%rbp),%rax	# 42E955 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42E959 48 8D 6D 8 
	jz	 ( JMP,+E0  ) 	# 42E95D F 84 13 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42E963 48 89 45 F8 
	mov	$0xEB,%eax	# 42E967 B8 EB 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E96C 48 8D 6D F8 
	call	 ( #LP, ) 	# 42E970 E8 F9 FE FF FF 
	ret		# 42E975 C3 
//  $E9  C, 4 - HERE - L,  ;

	mov	%rax,-0x08(%rbp)	# 42E976 48 89 45 F8 
	mov	$0xE9,%eax	# 42E97A B8 E9 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E97F 48 8D 6D F8 
	call	 ( C, ) 	# 42E983 E8 F0 65 FD FF 
	add	$-0x04,%rax	# 42E988 48 83 C0 FC 
	mov	%rax,-0x08(%rbp)	# 42E98C 48 89 45 F8 
	mov	 ( H-STDOUT+15  ) (%rip),%rax	# 42E990 48 8B 5 3B 65 FD FF 
	mov	%rax, ( :-SET+5  ) (%rip)	# 42E997 48 89 5 26 6F FD FF 
		negq	%rax	# 42E99E 48 F7 D8 
	add	-0x08(%rbp),%rax	# 42E9A1 48 3 45 F8 
	call	 ( L, ) 	# 42E9A5 E8 8B 65 FD FF 
	ret		# 42E9AA C3 
//

//: loopne,	$e0 #LP, ;

loopnecom:
	mov	%rax,-0x08(%rbp)	# 42E9AB 48 89 45 F8 
	mov	$0xE0,%eax	# 42E9AF B8 E0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E9B4 48 8D 6D F8 
	call	 ( #LP, ) 	# 42E9B8 E8 B1 FE FF FF 
	ret		# 42E9BD C3 
//: loope,	$e1 #LP, ;

loopecom:
	mov	%rax,-0x08(%rbp)	# 42E9BE 48 89 45 F8 
	mov	$0xE1,%eax	# 42E9C2 B8 E1 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E9C7 48 8D 6D F8 
	call	 ( #LP, ) 	# 42E9CB E8 9E FE FF FF 
	ret		# 42E9D0 C3 
//: loop,		$e2 #LP, ;

loopcom:
	mov	%rax,-0x08(%rbp)	# 42E9D1 48 89 45 F8 
	mov	$0xE2,%eax	# 42E9D5 B8 E2 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E9DA 48 8D 6D F8 
	call	 ( #LP, ) 	# 42E9DE E8 8B FE FF FF 
	ret		# 42E9E3 C3 
//: jrcxz,	$e3 #LP, ;

jrcxzcom:
	mov	%rax,-0x08(%rbp)	# 42E9E4 48 89 45 F8 
	mov	$0xE3,%eax	# 42E9E8 B8 E3 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42E9ED 48 8D 6D F8 
	call	 ( #LP, ) 	# 42E9F1 E8 78 FE FF FF 
	ret		# 42E9F6 C3 
//

//$75 constant Z?     $74 constant NZ?    $79 constant S?

Zque:
	call	 ( DOCONSTANT ) 	# 42E9F7 E8 17 5F FD FF 
	jNz	 ( Z?+7  ) 	# 42E9FC 75 0 
	add	%al,(%rax)	# 42E9FE 0 0 
	add	%al,(%rax)	# 42EA00 0 0 
	add	%al,(%rax)	# 42EA02 0 0 
NZque:
	call	 ( DOCONSTANT ) 	# 42EA04 E8 A 5F FD FF 
	jz	 ( NZ?+7  ) 	# 42EA09 74 0 
	add	%al,(%rax)	# 42EA0B 0 0 
	add	%al,(%rax)	# 42EA0D 0 0 
	add	%al,(%rax)	# 42EA0F 0 0 
Sque:
	call	 ( DOCONSTANT ) 	# 42EA11 E8 FD 5E FD FF 
	jNs	 ( S?+7  ) 	# 42EA16 79 0 
	add	%al,(%rax)	# 42EA18 0 0 
	add	%al,(%rax)	# 42EA1A 0 0 
	add	%al,(%rax)	# 42EA1C 0 0 
//$78 constant NS?    $7D constant L?     $7C constant GE?

NSque:
	call	 ( DOCONSTANT ) 	# 42EA1E E8 F0 5E FD FF 
	js	 ( NS?+7  ) 	# 42EA23 78 0 
	add	%al,(%rax)	# 42EA25 0 0 
	add	%al,(%rax)	# 42EA27 0 0 
	add	%al,(%rax)	# 42EA29 0 0 
Lque:
	call	 ( DOCONSTANT ) 	# 42EA2B E8 E3 5E FD FF 
	jNl	 ( L?+7  ) 	# 42EA30 7D 0 
	add	%al,(%rax)	# 42EA32 0 0 
	add	%al,(%rax)	# 42EA34 0 0 
	add	%al,(%rax)	# 42EA36 0 0 
GEque:
	call	 ( DOCONSTANT ) 	# 42EA38 E8 D6 5E FD FF 
	jl	 ( GE?+7  ) 	# 42EA3D 7C 0 
	add	%al,(%rax)	# 42EA3F 0 0 
	add	%al,(%rax)	# 42EA41 0 0 
	add	%al,(%rax)	# 42EA43 0 0 
//$7F constant LE?    $7E constant G?     $73 constant CY?

LEque:
	call	 ( DOCONSTANT ) 	# 42EA45 E8 C9 5E FD FF 
	jNle	 ( LE?+7  ) 	# 42EA4A 7F 0 
	add	%al,(%rax)	# 42EA4C 0 0 
	add	%al,(%rax)	# 42EA4E 0 0 
	add	%al,(%rax)	# 42EA50 0 0 
Gque:
	call	 ( DOCONSTANT ) 	# 42EA52 E8 BC 5E FD FF 
	jle	 ( G?+7  ) 	# 42EA57 7E 0 
	add	%al,(%rax)	# 42EA59 0 0 
	add	%al,(%rax)	# 42EA5B 0 0 
	add	%al,(%rax)	# 42EA5D 0 0 
CYque:
	call	 ( DOCONSTANT ) 	# 42EA5F E8 AF 5E FD FF 
	jNb	 ( CY?+7  ) 	# 42EA64 73 0 
	add	%al,(%rax)	# 42EA66 0 0 
	add	%al,(%rax)	# 42EA68 0 0 
	add	%al,(%rax)	# 42EA6A 0 0 
//$72 constant NC?    $77 constant BE?    $76 constant A?

NCque:
	call	 ( DOCONSTANT ) 	# 42EA6C E8 A2 5E FD FF 
	jb	 ( NC?+7  ) 	# 42EA71 72 0 
	add	%al,(%rax)	# 42EA73 0 0 
	add	%al,(%rax)	# 42EA75 0 0 
	add	%al,(%rax)	# 42EA77 0 0 
BEque:
	call	 ( DOCONSTANT ) 	# 42EA79 E8 95 5E FD FF 
	jNbe	 ( BE?+7  ) 	# 42EA7E 77 0 
	add	%al,(%rax)	# 42EA80 0 0 
	add	%al,(%rax)	# 42EA82 0 0 
	add	%al,(%rax)	# 42EA84 0 0 
Aque:
	call	 ( DOCONSTANT ) 	# 42EA86 E8 88 5E FD FF 
	jbe	 ( A?+7  ) 	# 42EA8B 76 0 
	add	%al,(%rax)	# 42EA8D 0 0 
	add	%al,(%rax)	# 42EA8F 0 0 
	add	%al,(%rax)	# 42EA91 0 0 
//$71 constant O?     $70 constant NO?    $7A constant PO?

Oque:
	call	 ( DOCONSTANT ) 	# 42EA93 E8 7B 5E FD FF 
	jNo	 ( O?+7  ) 	# 42EA98 71 0 
	add	%al,(%rax)	# 42EA9A 0 0 
	add	%al,(%rax)	# 42EA9C 0 0 
	add	%al,(%rax)	# 42EA9E 0 0 
NOque:
	call	 ( DOCONSTANT ) 	# 42EAA0 E8 6E 5E FD FF 
	jo	 ( NO?+7  ) 	# 42EAA5 70 0 
	add	%al,(%rax)	# 42EAA7 0 0 
	add	%al,(%rax)	# 42EAA9 0 0 
	add	%al,(%rax)	# 42EAAB 0 0 
POque:
	call	 ( DOCONSTANT ) 	# 42EAAD E8 61 5E FD FF 
	jp	 ( PO?+7  ) 	# 42EAB2 7A 0 
	add	%al,(%rax)	# 42EAB4 0 0 
	add	%al,(%rax)	# 42EAB6 0 0 
	add	%al,(%rax)	# 42EAB8 0 0 
//$7B constant PE?    $72 constant AE?    $73 constant B?

PEque:
	call	 ( DOCONSTANT ) 	# 42EABA E8 54 5E FD FF 
	jNp	 ( PE?+7  ) 	# 42EABF 7B 0 
	add	%al,(%rax)	# 42EAC1 0 0 
	add	%al,(%rax)	# 42EAC3 0 0 
	add	%al,(%rax)	# 42EAC5 0 0 
AEque:
	call	 ( DOCONSTANT ) 	# 42EAC7 E8 47 5E FD FF 
	jb	 ( AE?+7  ) 	# 42EACC 72 0 
	add	%al,(%rax)	# 42EACE 0 0 
	add	%al,(%rax)	# 42EAD0 0 0 
	add	%al,(%rax)	# 42EAD2 0 0 
Bque:
	call	 ( DOCONSTANT ) 	# 42EAD4 E8 3A 5E FD FF 
	jNb	 ( B?+7  ) 	# 42EAD9 73 0 
	add	%al,(%rax)	# 42EADB 0 0 
	add	%al,(%rax)	# 42EADD 0 0 
	add	%al,(%rax)	# 42EADF 0 0 
//$E3 constant NCXZ?  $72 constant NCY?   $EB constant NV? ( never )

NCXZque:
	call	 ( DOCONSTANT ) 	# 42EAE1 E8 2D 5E FD FF 
	.byte	0xE3	# 42EAE6 E3 
	add	%al,(%rax)	# 42EAE7 0 0 
	add	%al,(%rax)	# 42EAE9 0 0 
	add	%al,(%rax)	# 42EAEB 0 0 
	add	%ch,%al	# 42EAED 0 E8 
	and	%bl,-0x03(%rsi)	# 42EAEF 20 5E FD 
	push	0x00(%rdx)	# 42EAF2 FF 72 0 
	add	%al,(%rax)	# 42EAF5 0 0 
	add	%al,(%rax)	# 42EAF7 0 0 
	add	%al,(%rax)	# 42EAF9 0 0 
NVque:
	call	 ( DOCONSTANT ) 	# 42EAFB E8 13 5E FD FF 
	jmp	 ( NV?+7  ) 	# 42EB00 EB 0 
	add	%al,(%rax)	# 42EB02 0 0 
	add	%al,(%rax)	# 42EB04 0 0 
	add	%al,(%rax)	# 42EB06 0 0 
//

//: J?   OVER 1- HERE - SHORT? IF $70 OR #LP, BREAK

Jque:
	mov	%rax,-0x08(%rbp)	# 42EB08 48 89 45 F8 
	mov	0x00(%rbp),%rax	# 42EB0C 48 8B 45 0 
	lea	-0x01(%rax),%rax	# 42EB10 48 8D 40 FF 
	mov	%rax,-0x10(%rbp)	# 42EB14 48 89 45 F0 
	mov	 ( H-STDOUT+15  ) (%rip),%rax	# 42EB18 48 8B 5 B3 63 FD FF 
	mov	%rax, ( :-SET+5  ) (%rip)	# 42EB1F 48 89 5 9E 6D FD FF 
		negq	%rax	# 42EB26 48 F7 D8 
	add	-0x10(%rbp),%rax	# 42EB29 48 3 45 F0 
	lea	-0x08(%rbp),%rbp	# 42EB2D 48 8D 6D F8 
	call	 ( SHORT? ) 	# 42EB31 E8 24 6B FD FF 
	test	%rax,%rax	# 42EB36 48 85 C0 
	mov	0x00(%rbp),%rax	# 42EB39 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42EB3D 48 8D 6D 8 
	jz	 ( J?+4B  ) 	# 42EB41 F 84 C 0 0 0 
	or	$0x70,%rax	# 42EB47 48 D 70 0 0 0 
	call	 ( #LP, ) 	# 42EB4D E8 1C FD FF FF 
	ret		# 42EB52 C3 
//		$f C,  $80 + C, 4 - HERE - L,  ;

	mov	%rax,-0x08(%rbp)	# 42EB53 48 89 45 F8 
	mov	$0xF,%eax	# 42EB57 B8 F 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42EB5C 48 8D 6D F8 
	call	 ( C, ) 	# 42EB60 E8 13 64 FD FF 
	mov	%rax,-0x08(%rbp)	# 42EB65 48 89 45 F8 
	lea	0x80(%rax),%rax	# 42EB69 48 8D 80 80 0 0 0 
	call	 ( C, ) 	# 42EB70 E8 3 64 FD FF 
	add	$-0x04,%rax	# 42EB75 48 83 C0 FC 
	mov	%rax,-0x08(%rbp)	# 42EB79 48 89 45 F8 
	mov	 ( H-STDOUT+15  ) (%rip),%rax	# 42EB7D 48 8B 5 4E 63 FD FF 
	mov	%rax, ( :-SET+5  ) (%rip)	# 42EB84 48 89 5 39 6D FD FF 
		negq	%rax	# 42EB8B 48 F7 D8 
	add	-0x08(%rbp),%rax	# 42EB8E 48 3 45 F8 
	call	 ( L, ) 	# 42EB92 E8 9E 63 FD FF 
	ret		# 42EB97 C3 
//: jo,  	$0 J? ;

jocom:
	mov	%rax,-0x08(%rbp)	# 42EB98 48 89 45 F8 
	mov	$0x0,%eax	# 42EB9C B8 0 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42EBA1 48 8D 6D F8 
	call	 ( J? ) 	# 42EBA5 E8 5E FF FF FF 
	ret		# 42EBAA C3 
//: jno, 	$1 J? ;

jnocom:
	mov	%rax,-0x08(%rbp)	# 42EBAB 48 89 45 F8 
	mov	$0x1,%eax	# 42EBAF B8 1 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42EBB4 48 8D 6D F8 
	call	 ( J? ) 	# 42EBB8 E8 4B FF FF FF 
	ret		# 42EBBD C3 
//: jb,  	$2 J? ;

jbcom:
	mov	%rax,-0x08(%rbp)	# 42EBBE 48 89 45 F8 
	mov	$0x2,%eax	# 42EBC2 B8 2 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42EBC7 48 8D 6D F8 
	call	 ( J? ) 	# 42EBCB E8 38 FF FF FF 
	ret		# 42EBD0 C3 
//: jae, 	$3 J? ;

jaecom:
	mov	%rax,-0x08(%rbp)	# 42EBD1 48 89 45 F8 
	mov	$0x3,%eax	# 42EBD5 B8 3 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42EBDA 48 8D 6D F8 
	call	 ( J? ) 	# 42EBDE E8 25 FF FF FF 
	ret		# 42EBE3 C3 
//: je,  	$4 J? ;

jecom:
	mov	%rax,-0x08(%rbp)	# 42EBE4 48 89 45 F8 
	mov	$0x4,%eax	# 42EBE8 B8 4 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42EBED 48 8D 6D F8 
	call	 ( J? ) 	# 42EBF1 E8 12 FF FF FF 
	ret		# 42EBF6 C3 
//: jz,  	$4 J? ;

jzcom:
	mov	%rax,-0x08(%rbp)	# 42EBF7 48 89 45 F8 
	mov	$0x4,%eax	# 42EBFB B8 4 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42EC00 48 8D 6D F8 
	call	 ( J? ) 	# 42EC04 E8 FF FE FF FF 
	ret		# 42EC09 C3 
//: jne, 	$5 J? ;

jnecom:
	mov	%rax,-0x08(%rbp)	# 42EC0A 48 89 45 F8 
	mov	$0x5,%eax	# 42EC0E B8 5 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42EC13 48 8D 6D F8 
	call	 ( J? ) 	# 42EC17 E8 EC FE FF FF 
	ret		# 42EC1C C3 
//: jbe, 	$6 J? ;

jbecom:
	mov	%rax,-0x08(%rbp)	# 42EC1D 48 89 45 F8 
	mov	$0x6,%eax	# 42EC21 B8 6 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42EC26 48 8D 6D F8 
	call	 ( J? ) 	# 42EC2A E8 D9 FE FF FF 
	ret		# 42EC2F C3 
//: ja,  	$7 J? ;

jacom:
	mov	%rax,-0x08(%rbp)	# 42EC30 48 89 45 F8 
	mov	$0x7,%eax	# 42EC34 B8 7 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42EC39 48 8D 6D F8 
	call	 ( J? ) 	# 42EC3D E8 C6 FE FF FF 
	ret		# 42EC42 C3 
//: js,  	$8 J? ;

jscom:
	mov	%rax,-0x08(%rbp)	# 42EC43 48 89 45 F8 
	mov	$0x8,%eax	# 42EC47 B8 8 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42EC4C 48 8D 6D F8 
	call	 ( J? ) 	# 42EC50 E8 B3 FE FF FF 
	ret		# 42EC55 C3 
//: jns, 	$9 J? ;

jnscom:
	mov	%rax,-0x08(%rbp)	# 42EC56 48 89 45 F8 
	mov	$0x9,%eax	# 42EC5A B8 9 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42EC5F 48 8D 6D F8 
	call	 ( J? ) 	# 42EC63 E8 A0 FE FF FF 
	ret		# 42EC68 C3 
//: jp,  	$a J? ;

jpcom:
	mov	%rax,-0x08(%rbp)	# 42EC69 48 89 45 F8 
	mov	$0xA,%eax	# 42EC6D B8 A 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42EC72 48 8D 6D F8 
	call	 ( J? ) 	# 42EC76 E8 8D FE FF FF 
	ret		# 42EC7B C3 
//: jnp, 	$b J? ;

jnpcom:
	mov	%rax,-0x08(%rbp)	# 42EC7C 48 89 45 F8 
	mov	$0xB,%eax	# 42EC80 B8 B 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42EC85 48 8D 6D F8 
	call	 ( J? ) 	# 42EC89 E8 7A FE FF FF 
	ret		# 42EC8E C3 
//: jl,  	$c J? ;

jlcom:
	mov	%rax,-0x08(%rbp)	# 42EC8F 48 89 45 F8 
	mov	$0xC,%eax	# 42EC93 B8 C 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42EC98 48 8D 6D F8 
	call	 ( J? ) 	# 42EC9C E8 67 FE FF FF 
	ret		# 42ECA1 C3 
//: jge, 	$d J? ;

jgecom:
	mov	%rax,-0x08(%rbp)	# 42ECA2 48 89 45 F8 
	mov	$0xD,%eax	# 42ECA6 B8 D 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42ECAB 48 8D 6D F8 
	call	 ( J? ) 	# 42ECAF E8 54 FE FF FF 
	ret		# 42ECB4 C3 
//: jle, 	$e J? ;

jlecom:
	mov	%rax,-0x08(%rbp)	# 42ECB5 48 89 45 F8 
	mov	$0xE,%eax	# 42ECB9 B8 E 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42ECBE 48 8D 6D F8 
	call	 ( J? ) 	# 42ECC2 E8 41 FE FF FF 
	ret		# 42ECC7 C3 
//: jg,  	$f J? ;

jgcom:
	mov	%rax,-0x08(%rbp)	# 42ECC8 48 89 45 F8 
	mov	$0xF,%eax	# 42ECCC B8 F 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42ECD1 48 8D 6D F8 
	call	 ( J? ) 	# 42ECD5 E8 2E FE FF FF 
	ret		# 42ECDA C3 
//

//0 constant con-flg		\ -- 0 ; address structure flag

consubflg:
	call	 ( DOCONSTANT ) 	# 42ECDB E8 33 5C FD FF 
	add	%al,(%rax)	# 42ECE0 0 0 
	add	%al,(%rax)	# 42ECE2 0 0 
	add	%al,(%rax)	# 42ECE4 0 0 
	add	%al,(%rax)	# 42ECE6 0 0 
//

//: ?>mark        \ -- as-flag as-orig

//\ lay forward branch offset after opcode; patched up later

//  con-flg here  0 c,

quegreatmark:
	mov	%rax,-0x08(%rbp)	# 42ECE8 48 89 45 F8 
	mov	$0x0,%eax	# 42ECEC B8 0 0 0 0 
	mov	%rax,-0x10(%rbp)	# 42ECF1 48 89 45 F0 
	mov	 ( H-STDOUT+15  ) (%rip),%rax	# 42ECF5 48 8B 5 D6 61 FD FF 
	mov	%rax, ( :-SET+5  ) (%rip)	# 42ECFC 48 89 5 C1 6B FD FF 
	mov	%rax,-0x18(%rbp)	# 42ED03 48 89 45 E8 
	mov	$0x0,%eax	# 42ED07 B8 0 0 0 0 
	lea	-0x18(%rbp),%rbp	# 42ED0C 48 8D 6D E8 
	call	 ( C, ) 	# 42ED10 E8 63 62 FD FF 
//;

	ret		# 42ED15 C3 
//

//: if,		\ cond -- as-flag as-orig

//  c, ?>mark	\ preserve condition, and do last opcode

ifcom:
	call	 ( C, ) 	# 42ED16 E8 5D 62 FD FF 
	call	 ( ?>mark ) 	# 42ED1B E8 C8 FF FF FF 
//;

	ret		# 42ED20 C3 
//

//: then,		\ as-flag as-orig --

//  here over 1+ -  dup SHORT? 0= IF 333 THROW THEN

thencom:
	mov	%rax,-0x08(%rbp)	# 42ED21 48 89 45 F8 
	mov	 ( H-STDOUT+15  ) (%rip),%rax	# 42ED25 48 8B 5 A6 61 FD FF 
	mov	%rax, ( :-SET+5  ) (%rip)	# 42ED2C 48 89 5 91 6B FD FF 
	mov	%rax,-0x10(%rbp)	# 42ED33 48 89 45 F0 
	mov	-0x08(%rbp),%rax	# 42ED37 48 8B 45 F8 
	lea	0x01(%rax),%rax	# 42ED3B 48 8D 40 1 
		negq	%rax	# 42ED3F 48 F7 D8 
	add	-0x10(%rbp),%rax	# 42ED42 48 3 45 F0 
	mov	%rax,-0x10(%rbp)	# 42ED46 48 89 45 F0 
	lea	-0x10(%rbp),%rbp	# 42ED4A 48 8D 6D F0 
	call	 ( SHORT? ) 	# 42ED4E E8 7 69 FD FF 
	sub	$0x01,%rax	# 42ED53 48 83 E8 1 
	sbb	%rax,%rax	# 42ED57 48 19 C0 
	test	%rax,%rax	# 42ED5A 48 85 C0 
	mov	0x00(%rbp),%rax	# 42ED5D 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42ED61 48 8D 6D 8 
	jz	 ( then,+5C  ) 	# 42ED65 F 84 12 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42ED6B 48 89 45 F8 
	mov	$0x14D,%eax	# 42ED6F B8 4D 1 0 0 
	lea	-0x08(%rbp),%rbp	# 42ED74 48 8D 6D F8 
	call	 ( THROW ) 	# 42ED78 E8 37 68 FD FF 
//  swap c!  con-flg XOR  IF 333 THROW THEN

	mov	0x00(%rbp),%rdx	# 42ED7D 48 8B 55 0 
	mov	%rax,0x00(%rbp)	# 42ED81 48 89 45 0 
	mov	%rdx,%rax	# 42ED85 48 89 D0 
	mov	0x00(%rbp),%dl	# 42ED88 8A 55 0 
	mov	%dl,(%rax)	# 42ED8B 88 10 
	mov	$0x0,%eax	# 42ED8D B8 0 0 0 0 
	xor	0x08(%rbp),%rax	# 42ED92 48 33 45 8 
	test	%rax,%rax	# 42ED96 48 85 C0 
	mov	0x10(%rbp),%rax	# 42ED99 48 8B 45 10 
	lea	0x18(%rbp),%rbp	# 42ED9D 48 8D 6D 18 
	jz	 ( then,+98  ) 	# 42EDA1 F 84 12 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42EDA7 48 89 45 F8 
	mov	$0x14D,%eax	# 42EDAB B8 4D 1 0 0 
	lea	-0x08(%rbp),%rbp	# 42EDB0 48 8D 6D F8 
	call	 ( THROW ) 	# 42EDB4 E8 FB 67 FD FF 
//;

	ret		# 42EDB9 C3 
//

//: endif,	\ as-flag as-orig --

//  then,

endifcom:
	call	 ( then, ) 	# 42EDBA E8 62 FF FF FF 
//;

	ret		# 42EDBF C3 
//

//: else,		\ as-flag1 as-orig1 -- as-flag2 as-orig2

//  $0EB if,  2swap  then,	\ magic number for JMP rel8

elsecom:
	mov	%rax,-0x08(%rbp)	# 42EDC0 48 89 45 F8 
	mov	$0xEB,%eax	# 42EDC4 B8 EB 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42EDC9 48 8D 6D F8 
	call	 ( if, ) 	# 42EDCD E8 44 FF FF FF 
	mov	0x00(%rbp),%rcx	# 42EDD2 48 8B 4D 0 
	mov	0x08(%rbp),%rdx	# 42EDD6 48 8B 55 8 
	mov	0x10(%rbp),%rbx	# 42EDDA 48 8B 5D 10 
	mov	%rcx,0x10(%rbp)	# 42EDDE 48 89 4D 10 
	mov	%rax,0x08(%rbp)	# 42EDE2 48 89 45 8 
	mov	%rbx,0x00(%rbp)	# 42EDE6 48 89 5D 0 
	mov	%rdx,%rax	# 42EDEA 48 89 D0 
	call	 ( then, ) 	# 42EDED E8 2F FF FF FF 
//;

	ret		# 42EDF2 C3 
//

//: begin,	\ -- as-flag as-dest

//  con-flg  here

begincom:
	mov	%rax,-0x08(%rbp)	# 42EDF3 48 89 45 F8 
	mov	$0x0,%eax	# 42EDF7 B8 0 0 0 0 
	mov	%rax,-0x10(%rbp)	# 42EDFC 48 89 45 F0 
	mov	 ( H-STDOUT+15  ) (%rip),%rax	# 42EE00 48 8B 5 CB 60 FD FF 
	mov	%rax, ( :-SET+5  ) (%rip)	# 42EE07 48 89 5 B6 6A FD FF 
	lea	-0x10(%rbp),%rbp	# 42EE0E 48 8D 6D F0 
//;

	ret		# 42EE12 C3 
//

//: until,	\ as-flag as-dest cond --

//   c,

untilcom:
	call	 ( C, ) 	# 42EE13 E8 60 61 FD FF 
//  here 1+ - dup SHORT? 0= IF 333 THROW THEN

	mov	%rax,-0x08(%rbp)	# 42EE18 48 89 45 F8 
	mov	 ( H-STDOUT+15  ) (%rip),%rax	# 42EE1C 48 8B 5 AF 60 FD FF 
	mov	%rax, ( :-SET+5  ) (%rip)	# 42EE23 48 89 5 9A 6A FD FF 
	lea	0x01(%rax),%rax	# 42EE2A 48 8D 40 1 
		negq	%rax	# 42EE2E 48 F7 D8 
	add	-0x08(%rbp),%rax	# 42EE31 48 3 45 F8 
	mov	%rax,-0x08(%rbp)	# 42EE35 48 89 45 F8 
	lea	-0x08(%rbp),%rbp	# 42EE39 48 8D 6D F8 
	call	 ( SHORT? ) 	# 42EE3D E8 18 68 FD FF 
	sub	$0x01,%rax	# 42EE42 48 83 E8 1 
	sbb	%rax,%rax	# 42EE46 48 19 C0 
	test	%rax,%rax	# 42EE49 48 85 C0 
	mov	0x00(%rbp),%rax	# 42EE4C 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42EE50 48 8D 6D 8 
	jz	 ( until,+59  ) 	# 42EE54 F 84 12 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42EE5A 48 89 45 F8 
	mov	$0x14D,%eax	# 42EE5E B8 4D 1 0 0 
	lea	-0x08(%rbp),%rbp	# 42EE63 48 8D 6D F8 
	call	 ( THROW ) 	# 42EE67 E8 48 67 FD FF 
// con-flg XOR  IF 333 THROW THEN

	xor	$0x0,%rax	# 42EE6C 48 35 0 0 0 0 
	test	%rax,%rax	# 42EE72 48 85 C0 
	mov	0x00(%rbp),%rax	# 42EE75 48 8B 45 0 
	lea	0x08(%rbp),%rbp	# 42EE79 48 8D 6D 8 
	jz	 ( until,+82  ) 	# 42EE7D F 84 12 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42EE83 48 89 45 F8 
	mov	$0x14D,%eax	# 42EE87 B8 4D 1 0 0 
	lea	-0x08(%rbp),%rbp	# 42EE8C 48 8D 6D F8 
	call	 ( THROW ) 	# 42EE90 E8 1F 67 FD FF 
//;

	ret		# 42EE95 C3 
//

//: again,	\ as-flag as-dest --

//  $0EB until,

againcom:
	mov	%rax,-0x08(%rbp)	# 42EE96 48 89 45 F8 
	mov	$0xEB,%eax	# 42EE9A B8 EB 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42EE9F 48 8D 6D F8 
	call	 ( until, ) 	# 42EEA3 E8 6B FF FF FF 
//;

	ret		# 42EEA8 C3 
//

//: while,	\ as-flag as-dest cond -- as-flag as-orig as-flag as-dest

//  if, 2swap

whilecom:
	call	 ( if, ) 	# 42EEA9 E8 68 FE FF FF 
	mov	0x00(%rbp),%rcx	# 42EEAE 48 8B 4D 0 
	mov	0x08(%rbp),%rdx	# 42EEB2 48 8B 55 8 
	mov	0x10(%rbp),%rbx	# 42EEB6 48 8B 5D 10 
	mov	%rcx,0x10(%rbp)	# 42EEBA 48 89 4D 10 
	mov	%rax,0x08(%rbp)	# 42EEBE 48 89 45 8 
	mov	%rbx,0x00(%rbp)	# 42EEC2 48 89 5D 0 
	mov	%rdx,%rax	# 42EEC6 48 89 D0 
//;

	ret		# 42EEC9 C3 
//

//: repeat,	\ as-flag as-orig as-flag as-dest --

//  again,  then,

repeatcom:
	call	 ( again, ) 	# 42EECA E8 C7 FF FF FF 
	call	 ( then, ) 	# 42EECF E8 4D FE FF FF 
//;

	ret		# 42EED4 C3 
//

//: times,	\ n -- dest

//  $$  %rcx mov,  here	\ points after  mov  rcx, # n

timescom:
	call	 ( $$ ) 	# 42EED5 E8 19 C7 FF FF 
	call	 ( %rcx ) 	# 42EEDA E8 8C CB FF FF 
	call	 ( mov, ) 	# 42EEDF E8 98 E7 FF FF 
	mov	%rax,-0x08(%rbp)	# 42EEE4 48 89 45 F8 
	mov	 ( H-STDOUT+15  ) (%rip),%rax	# 42EEE8 48 8B 5 E3 5F FD FF 
	mov	%rax, ( :-SET+5  ) (%rip)	# 42EEEF 48 89 5 CE 69 FD FF 
	lea	-0x08(%rbp),%rbp	# 42EEF6 48 8D 6D F8 
//;

	ret		# 42EEFA C3 
//

//CREATE NLASTS 0 ,

NLASTS:
	call	 ( DOCREATE ) 	# 42EEFB E8 20 5A FD FF 
	add	%al,(%rax)	# 42EF00 0 0 
	add	%al,(%rax)	# 42EF02 0 0 
	add	%al,(%rax)	# 42EF04 0 0 
	add	%al,(%rax)	# 42EF06 0 0 
//0 VALUE TEB_CLEAN

TEB_CLEAN:
	call	 ( DOVALUE ) 	# 42EF08 E8 5 5A FD FF 
	add	%al,(%rax)	# 42EF0D 0 0 
	add	%al,(%rax)	# 42EF0F 0 0 
	add	%al,(%rax)	# 42EF11 0 0 
	add	%al,(%rax)	# 42EF13 0 0 
//

//: CODL

//\+ :#THS   :#THS

//	TEXEC_?

CODL:
	mov	%rax,-0x08(%rbp)	# 42EF15 48 89 45 F8 
	mov	 ( TEXEC_?+5  ) (%rip),%rax	# 42EF19 48 8B 5 74 C0 FF FF 
	test	%rax,%rax	# 42EF20 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42EF23 48 8B 45 F8 
//	IF

	jz	 ( CODL+18  ) 	# 42EF27 F 84 0 0 0 0 
//[IFDEF] TEXEC_BUF

//	>IN M@ >R

//	PARSE-NAME

// SFIND

//

//	IF

//			TEB_CLEAN CELL+ TO TEB_CLEAN

//			TEXEC_BUF TEXEC_BUF CELL+ TEB_SIZE MOVE

//			TEXEC_KEY TEXEC_KEY CELL+ TEB_SIZE MOVE

//			TEXEC_BUF M!

//		HERE	TEXEC_KEY M!

//	ELSE	2DROP

//	THEN

//

//	R> >IN M!

//[THEN]  THEN

//	HEADER

	call	 ( HEADER ) 	# 42EF2D E8 A4 1 FE FF 
//

//        NLASTS 1+!

	mov	%rax,-0x08(%rbp)	# 42EF32 48 89 45 F8 
	lea	 ( NLASTS+5  ) (%rip),%rax	# 42EF36 48 8D 5 C3 FF FF FF 
	incq	(%rax)	# 42EF3D 48 FF 0 
	mov	-0x08(%rbp),%rax	# 42EF40 48 8B 45 F8 
//;

	ret		# 42EF44 C3 
//

//DEFER A?HEAD

AqueHEAD:
	call	 ( DOVECT ) 	# 42EF45 E8 E0 59 FD FF 
	.quad  ( NOOP ) 
//

//' NOOP TO A?HEAD

//

//\+ HERE-TAB-CUR VARIABLE HERE-TAB-CUR-SAVE

	add	%ch,%al	# 42EF52 0 E8 
	enter	$0xFD59,$0xFF	# 42EF54 C8 59 FD FF 
	add	%al,(%rax)	# 42EF58 0 0 
	add	%al,(%rax)	# 42EF5A 0 0 
	add	%al,(%rax)	# 42EF5C 0 0 
	add	%al,(%rax)	# 42EF5E 0 0 
//

//\+ HERE-TAB-CUR VARIABLE SHERE-TAB-CUR-SAVE

	add	%al,(%rax)	# 42EF60 0 0 
	add	%ch,%al	# 42EF62 0 E8 
	mov	$0xFFFD59,%eax	# 42EF64 B8 59 FD FF 0 
	add	%al,(%rax)	# 42EF69 0 0 
	add	%al,(%rax)	# 42EF6B 0 0 
	add	%al,(%rax)	# 42EF6D 0 0 
	add	%ch,%al	# 42EF6F 0 E8 
//

//0 VALUE MOREPASSFLG

	popf		# 42EF71 9D 
	pop	%rcx	# 42EF72 59 
stD	# 42EF73 FD 
	inc	(%rax)	# 42EF74 FF 0 
	add	%al,(%rax)	# 42EF76 0 0 
	add	%al,(%rax)	# 42EF78 0 0 
	add	%al,(%rax)	# 42EF7A 0 0 
	add	%ch,%al	# 42EF7C 0 E8 
//0 VALUE SAVELAST

	nop		# 42EF7E 90 
	pop	%rcx	# 42EF7F 59 
stD	# 42EF80 FD 
	inc	(%rax)	# 42EF81 FF 0 
	add	%al,(%rax)	# 42EF83 0 0 
	add	%al,(%rax)	# 42EF85 0 0 
	add	%al,(%rax)	# 42EF87 0 0 
	add	%cl,-0x77(%rax)	# 42EF89 0 48 89 
//

//: ASM_END

// MOREPASS TO MOREPASSFLG

clC	# 42EF8C 45 F8 
	mov	 ( MOREPASS+5  ) (%rip),%rax	# 42EF8E 48 8B 5 80 C0 FF FF 
	mov	%rax, ( MOREPASSFLG+5  ) (%rip)	# 42EF95 48 89 5 D9 FF FF FF 
	mov	 ( MOREPASS+5  ) (%rip),%rax	# 42EF9C 48 8B 5 72 C0 FF FF 
// MOREPASS IF

	test	%rax,%rax	# 42EFA3 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42EFA6 48 8B 45 F8 
	jz	 ( ASM_END+9B  ) 	# 42EFAA F 84 75 0 0 0 
//\ CR ." MOREPASS"

//\+ HERE-TAB-CUR 	HERE-TAB-CUR-SAVE @ HERE-TAB-CUR !

	mov	%rax,-0x08(%rbp)	# 42EFB0 48 89 45 F8 
	mov	 ( HERE-TAB-CUR-SAVE+5  ) (%rip),%rax	# 42EFB4 48 8B 5 9D FF FF FF 
	mov	%rax, ( HERE-TAB-CUR+5  ) (%rip)	# 42EFBB 48 89 5 EE 1F FF FF 
	mov	 ( SHERE-TAB-CUR-SAVE+5  ) (%rip),%rax	# 42EFC2 48 8B 5 9F FF FF FF 
//\+ HERE-TAB-CUR 	SHERE-TAB-CUR-SAVE @ SHERE-TAB-CUR !

	mov	%rax, ( SHERE-TAB-CUR+5  ) (%rip)	# 42EFC9 48 89 5 F0 1F FF FF 
	mov	 ( ITERNUM+5  ) (%rip),%rax	# 42EFD0 48 8B 5 58 C0 FF FF 
//  ITERNUM 2+ TO   ITERNUM

	lea	0x02(%rax),%rax	# 42EFD7 48 8D 40 2 
	mov	%rax, ( ITERNUM+5  ) (%rip)	# 42EFDB 48 89 5 4D C0 FF FF 
	mov	 ( NPASS+5  ) (%rip),%rax	# 42EFE2 48 8B 5 39 C0 FF FF 
//   NPASS 1+ TO NPASS

	lea	0x01(%rax),%rax	# 42EFE9 48 8D 40 1 
	mov	%rax, ( NPASS+5  ) (%rip)	# 42EFED 48 89 5 2E C0 FF FF 
	movq	$0x0, ( TEB_CLEAN+5  ) (%rip)	# 42EFF4 48 C7 5 E FF FF FF 0 0 0 0 
//\  redundant items delete

//\+ TEXEC_BUF 	TEXEC_BUF TEB_CLEAN + TEXEC_BUF TEB_SIZE  MOVE

//\+ TEXEC_BUF 	TEXEC_KEY TEB_CLEAN + TEXEC_KEY TEB_SIZE  MOVE

//	0 TO TEB_CLEAN

	movq	$0x0, ( MOREPASS+5  ) (%rip)	# 42EFFF 48 C7 5 B C0 FF FF 0 0 0 0 
//  0 TO MOREPASS

	mov	 ( SAVELAST+5  ) (%rip),%rax	# 42F00A 48 8B 5 71 FF FF FF 
//  SAVELAST CURRENT M@ M!

	mov	 ( CURRENT+5  ) (%rip),%rdx	# 42F011 48 8B 15 F1 64 FE FF 
	mov	%rax,(%rdx)	# 42F018 48 89 2 
	mov	-0x08(%rbp),%rax	# 42F01B 48 8B 45 F8 
//   POSTPONE [AGAIN]

	call	 ( [AGAIN] ) 	# 42F01F E8 A2 BD FF FF 
//   EXIT

	ret		# 42F024 C3 
// THEN

//	PREVIOUS

	call	 ( PREVIOUS ) 	# 42F025 E8 E5 7 FE FF 
//\+ SHERE-TO-TAB   SHERE-TO-TAB

//

//;

	ret		# 42F02A C3 
//

//EXPORT

//

//\- T-ALIGN : T-ALIGN  BEGIN  HERE 3 AND WHILE 0xFF C, REPEAT ;

TsubALIGN:
	mov	%rax,-0x08(%rbp)	# 42F02B 48 89 45 F8 
	mov	 ( H-STDOUT+15  ) (%rip),%rax	# 42F02F 48 8B 5 9C 5E FD FF 
	mov	%rax, ( :-SET+5  ) (%rip)	# 42F036 48 89 5 87 68 FD FF 
	and	$0x3,%eax	# 42F03D 25 3 0 0 0 
	test	%rax,%rax	# 42F042 48 85 C0 
	mov	-0x08(%rbp),%rax	# 42F045 48 8B 45 F8 
	jz	 ( T-ALIGN+3B  ) 	# 42F049 F 84 17 0 0 0 
	mov	%rax,-0x08(%rbp)	# 42F04F 48 89 45 F8 
	mov	$0xFF,%eax	# 42F053 B8 FF 0 0 0 
	lea	-0x08(%rbp),%rbp	# 42F058 48 8D 6D F8 
	call	 ( C, ) 	# 42F05C E8 17 5F FD FF 
	jmp	 ( T-ALIGN ) 	# 42F061 E9 C5 FF FF FF 
	ret		# 42F066 C3 
//

//: GASM_BIG

//\+ SHERE-TO-TAB  SHERE-TO-TAB

//

//	ALSO GASM64_MOD

GASM_BIG:
	call	 ( ALSO ) 	# 42F067 E8 4E 7 FE FF 
	call	 ( GASM64_MOD ) 	# 42F06C E8 92 BF FF FF 
//  0 TO MOREPASS

	movq	$0x0, ( MOREPASS+5  ) (%rip)	# 42F071 48 C7 5 99 BF FF FF 0 0 0 0 
//  0 TO NPASS

	movq	$0x0, ( NPASS+5  ) (%rip)	# 42F07C 48 C7 5 9B BF FF FF 0 0 0 0 
//  0 TO TEB_CLEAN

	movq	$0x0, ( TEB_CLEAN+5  ) (%rip)	# 42F087 48 C7 5 7B FE FF FF 0 0 0 0 
//

//  CURRENT M@ M@ TO SAVELAST

	mov	%rax,-0x08(%rbp)	# 42F092 48 89 45 F8 
	mov	 ( CURRENT+5  ) (%rip),%rax	# 42F096 48 8B 5 6C 64 FE FF 
	mov	(%rax),%rax	# 42F09D 48 8B 0 
	mov	%rax, ( SAVELAST+5  ) (%rip)	# 42F0A0 48 89 5 DB FE FF FF 
	mov	 ( ITERNUM+5  ) (%rip),%rax	# 42F0A7 48 8B 5 81 BF FF FF 
//

//  ITERNUM 2+ TO   ITERNUM

	lea	0x02(%rax),%rax	# 42F0AE 48 8D 40 2 
	mov	%rax, ( ITERNUM+5  ) (%rip)	# 42F0B2 48 89 5 76 BF FF FF 
	mov	 ( HERE-TAB-CUR+5  ) (%rip),%rax	# 42F0B9 48 8B 5 F0 1E FF FF 
//

//\+ HERE-TAB-CUR 	HERE-TAB-CUR @ HERE-TAB-CUR-SAVE !

	mov	%rax, ( HERE-TAB-CUR-SAVE+5  ) (%rip)	# 42F0C0 48 89 5 91 FE FF FF 
	mov	 ( SHERE-TAB-CUR+5  ) (%rip),%rax	# 42F0C7 48 8B 5 F2 1E FF FF 
//\+ HERE-TAB-CUR 	SHERE-TAB-CUR @ SHERE-TAB-CUR-SAVE !

	mov	%rax, ( SHERE-TAB-CUR-SAVE+5  ) (%rip)	# 42F0CE 48 89 5 93 FE FF FF 
	mov	-0x08(%rbp),%rax	# 42F0D5 48 8B 45 F8 
// POSTPONE [BEGIN]

	call	 ( [BEGIN] ) 	# 42F0D9 E8 5A BC FF FF 
//

// ;

	ret		# 42F0DE C3 
//

//: CODE

//    CODL

CODE:
	call	 ( CODL ) 	# 42F0DF E8 31 FE FF FF 
//    GASM_BIG \    (CODE)

	call	 ( GASM_BIG ) 	# 42F0E4 E8 7E FF FF FF 
//  ;

	ret		# 42F0E9 C3 
//

//;MODULE

//

//FLOAD Meta_x86_64/SRC/LEX.F

//FLOAD Meta_x86_64/SRC/prefix.f

//

//\  68 cc da 40 00       	push   $0x40dacc

